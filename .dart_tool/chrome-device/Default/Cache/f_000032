define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/syncfusion_flutter_core/src/theme/theme_widget.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/painting/box_shadow.dart', 'packages/flutter/src/widgets/form.dart', 'packages/syncfusion_flutter_core/src/localizations/global_localizations.dart', 'packages/flutter/src/painting/rounded_rectangle_border.dart', 'packages/flutter/src/widgets/single_child_scroll_view.dart', 'packages/flutter/src/material/text_form_field.dart', 'packages/flutter/src/material/input_border.dart', 'packages/flutter/src/painting/borders.dart', 'packages/flutter/src/services/text_input.dart', 'packages/flutter/src/gestures/drag_details.dart', 'packages/http/src/multipart_request.dart', 'packages/flutter/src/services/system_channels.dart', 'packages/syncfusion_flutter_pdf/pdf.dart', 'packages/syncfusion_flutter_pdfviewer/src/bookmark/bookmark_item.dart', 'packages/syncfusion_flutter_pdfviewer/src/bookmark/bookmark_toolbar.dart', 'packages/flutter/src/widgets/scroll_view.dart', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter/src/rendering/flex.dart', 'packages/syncfusion_flutter_pdfviewer/src/control/pdfviewer_callback_details.dart', 'packages/syncfusion_flutter_pdfviewer/src/control/enums.dart', 'packages/flutter/src/gestures/team.dart', 'packages/flutter/src/gestures/tap.dart', 'packages/flutter/src/gestures/long_press.dart', 'packages/flutter/src/gestures/monodrag.dart', 'packages/flutter/src/gestures/events.dart', 'packages/flutter/src/cupertino/text_theme.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/syncfusion_flutter_pdfviewer/src/control/pdftextline.dart', 'packages/syncfusion_flutter_pdfviewer/src/common/pdfviewer_helper.dart', 'packages/syncfusion_flutter_pdfviewer/src/common/web_helper.dart', 'packages/flutter/src/painting/binding.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/painting/box_fit.dart', 'packages/flutter/src/widgets/raw_keyboard_listener.dart', 'packages/flutter/src/services/keyboard_key.dart', 'packages/flutter/src/services/clipboard.dart', 'packages/flutter/src/services/raw_keyboard_windows.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/vector_math/vector_math_64.dart', 'packages/flutter/src/physics/friction_simulation.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/gestures/scale.dart', 'packages/flutter/src/gestures/multitap.dart', 'packages/flutter/src/gestures/recognizer.dart', 'packages/syncfusion_flutter_pdfviewer/src/common/pdfviewer_plugin.dart', 'packages/flutter/src/foundation/collections.dart', 'packages/async/src/stream_queue.dart', 'packages/flutter/src/material/progress_indicator.dart', 'packages/flutter/src/widgets/async.dart', 'packages/syncfusion_flutter_pdfviewer/src/control/pagination.dart', 'packages/flutter/src/foundation/observer_list.dart'], (function load__packages__syncfusion_flutter_pdfviewer__src__control__scroll_head_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__syncfusion_flutter_core__src__theme__theme_widget$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__painting__box_shadow$46dart, packages__flutter__src__widgets__form$46dart, packages__syncfusion_flutter_core__src__localizations__global_localizations$46dart, packages__flutter__src__painting__rounded_rectangle_border$46dart, packages__flutter__src__widgets__single_child_scroll_view$46dart, packages__flutter__src__material__text_form_field$46dart, packages__flutter__src__material__input_border$46dart, packages__flutter__src__painting__borders$46dart, packages__flutter__src__services__text_input$46dart, packages__flutter__src__gestures__drag_details$46dart, packages__http__src__multipart_request$46dart, packages__flutter__src__services__system_channels$46dart, packages__syncfusion_flutter_pdf__pdf$46dart, packages__syncfusion_flutter_pdfviewer__src__bookmark__bookmark_item$46dart, packages__syncfusion_flutter_pdfviewer__src__bookmark__bookmark_toolbar$46dart, packages__flutter__src__widgets__scroll_view$46dart, packages__flutter__src__painting__basic_types$46dart, packages__flutter__src__rendering__flex$46dart, packages__syncfusion_flutter_pdfviewer__src__control__pdfviewer_callback_details$46dart, packages__syncfusion_flutter_pdfviewer__src__control__enums$46dart, packages__flutter__src__gestures__team$46dart, packages__flutter__src__gestures__tap$46dart, packages__flutter__src__gestures__long_press$46dart, packages__flutter__src__gestures__monodrag$46dart, packages__flutter__src__gestures__events$46dart, packages__flutter__src__cupertino__text_theme$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__syncfusion_flutter_pdfviewer__src__control__pdftextline$46dart, packages__syncfusion_flutter_pdfviewer__src__common__pdfviewer_helper$46dart, packages__syncfusion_flutter_pdfviewer__src__common__web_helper$46dart, packages__flutter__src__painting__binding$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__painting__box_fit$46dart, packages__flutter__src__widgets__raw_keyboard_listener$46dart, packages__flutter__src__services__keyboard_key$46dart, packages__flutter__src__services__clipboard$46dart, packages__flutter__src__services__raw_keyboard_windows$46dart, packages__flutter__src__painting__box_border$46dart, packages__vector_math__vector_math_64$46dart, packages__flutter__src__physics__friction_simulation$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__gestures__scale$46dart, packages__flutter__src__gestures__multitap$46dart, packages__flutter__src__gestures__recognizer$46dart, packages__syncfusion_flutter_pdfviewer__src__common__pdfviewer_plugin$46dart, packages__flutter__src__foundation__collections$46dart, packages__async__src__stream_queue$46dart, packages__flutter__src__material__progress_indicator$46dart, packages__flutter__src__widgets__async$46dart, packages__syncfusion_flutter_pdfviewer__src__control__pagination$46dart, packages__flutter__src__foundation__observer_list$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const _interceptors = dart_sdk._interceptors;
  const _internal = dart_sdk._internal;
  const async = dart_sdk.async;
  const typed_data = dart_sdk.typed_data;
  const io = dart_sdk.io;
  const math = dart_sdk.math;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const scroll_controller = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_controller;
  const editable_text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__editable_text;
  const focus_manager = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_manager;
  const gesture_detector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__gesture_detector;
  const focus_scope = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_scope;
  const visibility = packages__flutter__src__widgets__widget_span$46dart.src__widgets__visibility;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const navigator = packages__flutter__src__widgets__widget_span$46dart.src__widgets__navigator;
  const routes = packages__flutter__src__widgets__widget_span$46dart.src__widgets__routes;
  const binding = packages__flutter__src__widgets__widget_span$46dart.src__widgets__binding;
  const image = packages__flutter__src__widgets__widget_span$46dart.src__widgets__image;
  const scroll_physics = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_physics;
  const ticker_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__ticker_provider;
  const page_storage = packages__flutter__src__widgets__widget_span$46dart.src__widgets__page_storage;
  const notification_listener = packages__flutter__src__widgets__widget_span$46dart.src__widgets__notification_listener;
  const scroll_notification = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_notification;
  const pdfviewer_theme = packages__syncfusion_flutter_core__src__theme__theme_widget$46dart.src__theme__pdfviewer_theme;
  const alignment$ = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const material = packages__flutter__src__material__icon_button$46dart.src__material__material;
  const dialog = packages__flutter__src__material__icon_button$46dart.src__material__dialog;
  const text_button = packages__flutter__src__material__icon_button$46dart.src__material__text_button;
  const theme$ = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const input_decorator = packages__flutter__src__material__icon_button$46dart.src__material__input_decorator;
  const text_selection_theme = packages__flutter__src__material__icon_button$46dart.src__material__text_selection_theme;
  const colors = packages__flutter__src__material__colors$46dart.src__material__colors;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const mouse_cursor = packages__flutter__src__rendering__layer$46dart.src__rendering__mouse_cursor;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const box_shadow = packages__flutter__src__painting__box_shadow$46dart.src__painting__box_shadow;
  const form = packages__flutter__src__widgets__form$46dart.src__widgets__form;
  const global_localizations = packages__syncfusion_flutter_core__src__localizations__global_localizations$46dart.src__localizations__global_localizations;
  const rounded_rectangle_border = packages__flutter__src__painting__rounded_rectangle_border$46dart.src__painting__rounded_rectangle_border;
  const single_child_scroll_view = packages__flutter__src__widgets__single_child_scroll_view$46dart.src__widgets__single_child_scroll_view;
  const text_form_field = packages__flutter__src__material__text_form_field$46dart.src__material__text_form_field;
  const input_border = packages__flutter__src__material__input_border$46dart.src__material__input_border;
  const borders = packages__flutter__src__painting__borders$46dart.src__painting__borders;
  const text_input = packages__flutter__src__services__text_input$46dart.src__services__text_input;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  const http = packages__http__src__multipart_request$46dart.http;
  const asset_bundle = packages__flutter__src__services__system_channels$46dart.src__services__asset_bundle;
  const pdf = packages__syncfusion_flutter_pdf__pdf$46dart.pdf;
  const bookmark_item = packages__syncfusion_flutter_pdfviewer__src__bookmark__bookmark_item$46dart.src__bookmark__bookmark_item;
  const bookmark_toolbar = packages__syncfusion_flutter_pdfviewer__src__bookmark__bookmark_toolbar$46dart.src__bookmark__bookmark_toolbar;
  const scroll_view = packages__flutter__src__widgets__scroll_view$46dart.src__widgets__scroll_view;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const flex = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  const pdfviewer_callback_details = packages__syncfusion_flutter_pdfviewer__src__control__pdfviewer_callback_details$46dart.src__control__pdfviewer_callback_details;
  const enums = packages__syncfusion_flutter_pdfviewer__src__control__enums$46dart.src__control__enums;
  const team$ = packages__flutter__src__gestures__team$46dart.src__gestures__team;
  const tap = packages__flutter__src__gestures__tap$46dart.src__gestures__tap;
  const long_press = packages__flutter__src__gestures__long_press$46dart.src__gestures__long_press;
  const monodrag = packages__flutter__src__gestures__monodrag$46dart.src__gestures__monodrag;
  const events = packages__flutter__src__gestures__events$46dart.src__gestures__events;
  const theme$0 = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__theme;
  const platform = packages__flutter__src__foundation___platform_web$46dart.src__foundation__platform;
  const pdftextline = packages__syncfusion_flutter_pdfviewer__src__control__pdftextline$46dart.src__control__pdftextline;
  const pdfviewer_helper = packages__syncfusion_flutter_pdfviewer__src__common__pdfviewer_helper$46dart.src__common__pdfviewer_helper;
  const web_helper = packages__syncfusion_flutter_pdfviewer__src__common__web_helper$46dart.src__common__web_helper;
  const binding$ = packages__flutter__src__painting__binding$46dart.src__painting__binding;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const box_fit = packages__flutter__src__painting__box_fit$46dart.src__painting__box_fit;
  const raw_keyboard_listener = packages__flutter__src__widgets__raw_keyboard_listener$46dart.src__widgets__raw_keyboard_listener;
  const keyboard_key = packages__flutter__src__services__keyboard_key$46dart.src__services__keyboard_key;
  const clipboard = packages__flutter__src__services__clipboard$46dart.src__services__clipboard;
  const raw_keyboard = packages__flutter__src__services__raw_keyboard_windows$46dart.src__services__raw_keyboard;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const vector_math_64 = packages__vector_math__vector_math_64$46dart.vector_math_64;
  const friction_simulation = packages__flutter__src__physics__friction_simulation$46dart.src__physics__friction_simulation;
  const tween = packages__flutter__src__animation__listener_helpers$46dart.src__animation__tween;
  const animations = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animations;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const scale = packages__flutter__src__gestures__scale$46dart.src__gestures__scale;
  const multitap = packages__flutter__src__gestures__multitap$46dart.src__gestures__multitap;
  const recognizer = packages__flutter__src__gestures__recognizer$46dart.src__gestures__recognizer;
  const pdfviewer_plugin = packages__syncfusion_flutter_pdfviewer__src__common__pdfviewer_plugin$46dart.src__common__pdfviewer_plugin;
  const collections = packages__flutter__src__foundation__collections$46dart.src__foundation__collections;
  const cancelable_operation = packages__async__src__stream_queue$46dart.src__cancelable_operation;
  const progress_indicator = packages__flutter__src__material__progress_indicator$46dart.src__material__progress_indicator;
  const async$ = packages__flutter__src__widgets__async$46dart.src__widgets__async;
  const pagination = packages__syncfusion_flutter_pdfviewer__src__control__pagination$46dart.src__control__pagination;
  const observer_list = packages__flutter__src__foundation__observer_list$46dart.src__foundation__observer_list;
  var scroll_head = Object.create(dart.library);
  var scroll_head_overlay = Object.create(dart.library);
  var pdf_provider = Object.create(dart.library);
  var bookmark_view = Object.create(dart.library);
  var scroll_status = Object.create(dart.library);
  var pdfviewer_canvas = Object.create(dart.library);
  var pdf_page_view = Object.create(dart.library);
  var pdf_container = Object.create(dart.library);
  var pdfviewer = Object.create(dart.library);
  var pdfviewer$ = Object.create(dart.library);
  var $isNotEmpty = dartx.isNotEmpty;
  var $toString = dartx.toString;
  var $buffer = dartx.buffer;
  var $asUint8List = dartx.asUint8List;
  var $clear = dartx.clear;
  var $add = dartx.add;
  var $_get = dartx._get;
  var $first = dartx.first;
  var $last = dartx.last;
  var $forEach = dartx.forEach;
  var $length = dartx.length;
  var $_set = dartx._set;
  var $floor = dartx.floor;
  var $runtimeType = dartx.runtimeType;
  var $isNegative = dartx.isNegative;
  var $toDouble = dartx.toDouble;
  var $clamp = dartx.clamp;
  var $round = dartx.round;
  var $roundToDouble = dartx.roundToDouble;
  var $abs = dartx.abs;
  var $toList = dartx.toList;
  var $toStringAsFixed = dartx.toStringAsFixed;
  var $contains = dartx.contains;
  var $containsKey = dartx.containsKey;
  var $isEmpty = dartx.isEmpty;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    JSArrayOfBoxShadow: () => (T.JSArrayOfBoxShadow = dart.constFn(_interceptors.JSArray$(box_shadow.BoxShadow)))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    GlobalKeyOfFormState: () => (T.GlobalKeyOfFormState = dart.constFn(framework.GlobalKey$(form.FormState)))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    BuildContextToAlertDialog: () => (T.BuildContextToAlertDialog = dart.constFn(dart.fnType(dialog.AlertDialog, [framework.BuildContext])))(),
    StringTovoid: () => (T.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    StringNToStringN: () => (T.StringNToStringN = dart.constFn(dart.fnType(T.StringN(), [T.StringN()])))(),
    FutureOfUint8List: () => (T.FutureOfUint8List = dart.constFn(async.Future$(typed_data.Uint8List)))(),
    JSArrayOfBookmarkItem: () => (T.JSArrayOfBookmarkItem = dart.constFn(_interceptors.JSArray$(bookmark_item.BookmarkItem)))(),
    BuildContextAndintToBookmarkItem: () => (T.BuildContextAndintToBookmarkItem = dart.constFn(dart.fnType(bookmark_item.BookmarkItem, [framework.BuildContext, core.int])))(),
    doubleN: () => (T.doubleN = dart.constFn(dart.nullable(core.double)))(),
    TextGlyphTovoid: () => (T.TextGlyphTovoid = dart.constFn(dart.fnType(dart.void, [pdf.TextGlyph])))(),
    TextWordTovoid: () => (T.TextWordTovoid = dart.constFn(dart.fnType(dart.void, [pdf.TextWord])))(),
    TextLineTovoid: () => (T.TextLineTovoid = dart.constFn(dart.fnType(dart.void, [pdf.TextLine])))(),
    DurationTovoid: () => (T.DurationTovoid = dart.constFn(dart.fnType(dart.void, [core.Duration])))(),
    FutureOfNull: () => (T.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    VoidToFutureOfNull: () => (T.VoidToFutureOfNull = dart.constFn(dart.fnType(T.FutureOfNull(), [])))(),
    StateOfStatefulWidget: () => (T.StateOfStatefulWidget = dart.constFn(framework.State$(framework.StatefulWidget)))(),
    GlobalKeyOfStateOfStatefulWidget: () => (T.GlobalKeyOfStateOfStatefulWidget = dart.constFn(framework.GlobalKey$(T.StateOfStatefulWidget())))(),
    PointerSignalEventTovoid: () => (T.PointerSignalEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerSignalEvent])))(),
    PointerDownEventTovoid: () => (T.PointerDownEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerDownEvent])))(),
    RawKeyEventTovoid: () => (T.RawKeyEventTovoid = dart.constFn(dart.fnType(dart.void, [raw_keyboard.RawKeyEvent])))(),
    PointerHoverEventTovoid: () => (T.PointerHoverEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerHoverEvent])))(),
    DragStartDetailsTovoid: () => (T.DragStartDetailsTovoid = dart.constFn(dart.fnType(dart.void, [drag_details.DragStartDetails])))(),
    DragUpdateDetailsTovoid: () => (T.DragUpdateDetailsTovoid = dart.constFn(dart.fnType(dart.void, [drag_details.DragUpdateDetails])))(),
    DragEndDetailsTovoid: () => (T.DragEndDetailsTovoid = dart.constFn(dart.fnType(dart.void, [drag_details.DragEndDetails])))(),
    DragDownDetailsTovoid: () => (T.DragDownDetailsTovoid = dart.constFn(dart.fnType(dart.void, [drag_details.DragDownDetails])))(),
    TapUpDetailsTovoid: () => (T.TapUpDetailsTovoid = dart.constFn(dart.fnType(dart.void, [tap.TapUpDetails])))(),
    TapDownDetailsTovoid: () => (T.TapDownDetailsTovoid = dart.constFn(dart.fnType(dart.void, [tap.TapDownDetails])))(),
    LongPressStartDetailsTovoid: () => (T.LongPressStartDetailsTovoid = dart.constFn(dart.fnType(dart.void, [long_press.LongPressStartDetails])))(),
    JSArrayOfVector3: () => (T.JSArrayOfVector3 = dart.constFn(_interceptors.JSArray$(vector_math_64.Vector3)))(),
    VoidToVector3: () => (T.VoidToVector3 = dart.constFn(dart.fnType(vector_math_64.Vector3, [])))(),
    Vector3Todynamic: () => (T.Vector3Todynamic = dart.constFn(dart.fnType(dart.dynamic, [vector_math_64.Vector3])))(),
    Matrix4N: () => (T.Matrix4N = dart.constFn(dart.nullable(vector_math_64.Matrix4)))(),
    TweenOfOffset: () => (T.TweenOfOffset = dart.constFn(tween.Tween$(ui.Offset)))(),
    ListOfWidget: () => (T.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    intToWidget: () => (T.intToWidget = dart.constFn(dart.fnType(framework.Widget, [core.int])))(),
    PointerUpEventTovoid: () => (T.PointerUpEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerUpEvent])))(),
    GestureRecognizerFactoryWithHandlersOfPdfScaleRecognizer: () => (T.GestureRecognizerFactoryWithHandlersOfPdfScaleRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(pdf_container.PdfScaleRecognizer)))(),
    VoidToPdfScaleRecognizer: () => (T.VoidToPdfScaleRecognizer = dart.constFn(dart.fnType(pdf_container.PdfScaleRecognizer, [])))(),
    ScaleStartDetailsTovoid: () => (T.ScaleStartDetailsTovoid = dart.constFn(dart.fnType(dart.void, [scale.ScaleStartDetails])))(),
    ScaleUpdateDetailsTovoid: () => (T.ScaleUpdateDetailsTovoid = dart.constFn(dart.fnType(dart.void, [scale.ScaleUpdateDetails])))(),
    ScaleEndDetailsTovoid: () => (T.ScaleEndDetailsTovoid = dart.constFn(dart.fnType(dart.void, [scale.ScaleEndDetails])))(),
    PdfScaleRecognizerTovoid: () => (T.PdfScaleRecognizerTovoid = dart.constFn(dart.fnType(dart.void, [pdf_container.PdfScaleRecognizer])))(),
    GestureRecognizerFactoryWithHandlersOfDoubleTapGestureRecognizer: () => (T.GestureRecognizerFactoryWithHandlersOfDoubleTapGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(multitap.DoubleTapGestureRecognizer)))(),
    VoidToDoubleTapGestureRecognizer: () => (T.VoidToDoubleTapGestureRecognizer = dart.constFn(dart.fnType(multitap.DoubleTapGestureRecognizer, [])))(),
    DoubleTapGestureRecognizerTovoid: () => (T.DoubleTapGestureRecognizerTovoid = dart.constFn(dart.fnType(dart.void, [multitap.DoubleTapGestureRecognizer])))(),
    GestureRecognizerFactoryWithHandlersOfTapRecognizer: () => (T.GestureRecognizerFactoryWithHandlersOfTapRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(pdf_container.TapRecognizer)))(),
    VoidToTapRecognizer: () => (T.VoidToTapRecognizer = dart.constFn(dart.fnType(pdf_container.TapRecognizer, [])))(),
    intAndTapDownDetailsTovoid: () => (T.intAndTapDownDetailsTovoid = dart.constFn(dart.fnType(dart.void, [core.int, tap.TapDownDetails])))(),
    TapRecognizerTovoid: () => (T.TapRecognizerTovoid = dart.constFn(dart.fnType(dart.void, [pdf_container.TapRecognizer])))(),
    GestureRecognizerFactoryWithHandlersOfPdfLongPressRecognizer: () => (T.GestureRecognizerFactoryWithHandlersOfPdfLongPressRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(pdf_container.PdfLongPressRecognizer)))(),
    VoidToPdfLongPressRecognizer: () => (T.VoidToPdfLongPressRecognizer = dart.constFn(dart.fnType(pdf_container.PdfLongPressRecognizer, [])))(),
    LongPressEndDetailsTovoid: () => (T.LongPressEndDetailsTovoid = dart.constFn(dart.fnType(dart.void, [long_press.LongPressEndDetails])))(),
    PdfLongPressRecognizerTovoid: () => (T.PdfLongPressRecognizerTovoid = dart.constFn(dart.fnType(dart.void, [pdf_container.PdfLongPressRecognizer])))(),
    GestureRecognizerFactoryOfGestureRecognizer: () => (T.GestureRecognizerFactoryOfGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactory$(recognizer.GestureRecognizer)))(),
    LinkedMapOfType$GestureRecognizerFactoryOfGestureRecognizer: () => (T.LinkedMapOfType$GestureRecognizerFactoryOfGestureRecognizer = dart.constFn(_js_helper.LinkedMap$(core.Type, T.GestureRecognizerFactoryOfGestureRecognizer())))(),
    _GestureTypeL: () => (T._GestureTypeL = dart.constFn(dart.legacy(pdf_container._GestureType)))(),
    IdentityMapOfint$PdfPageInfo: () => (T.IdentityMapOfint$PdfPageInfo = dart.constFn(_js_helper.IdentityMap$(core.int, pdf_page_view.PdfPageInfo)))(),
    GlobalKeyOfBookmarkViewControllerState: () => (T.GlobalKeyOfBookmarkViewControllerState = dart.constFn(framework.GlobalKey$(bookmark_view.BookmarkViewControllerState)))(),
    GlobalKeyOfPdfContainerState: () => (T.GlobalKeyOfPdfContainerState = dart.constFn(framework.GlobalKey$(pdf_container.PdfContainerState)))(),
    GlobalKeyOfScrollHeadOverlayState: () => (T.GlobalKeyOfScrollHeadOverlayState = dart.constFn(framework.GlobalKey$(scroll_head_overlay.ScrollHeadOverlayState)))(),
    GlobalKeyOfPdfPageViewState: () => (T.GlobalKeyOfPdfPageViewState = dart.constFn(framework.GlobalKey$(pdf_page_view.PdfPageViewState)))(),
    IdentityMapOfint$GlobalKeyOfPdfPageViewState: () => (T.IdentityMapOfint$GlobalKeyOfPdfPageViewState = dart.constFn(_js_helper.IdentityMap$(core.int, T.GlobalKeyOfPdfPageViewState())))(),
    PdfDocumentN: () => (T.PdfDocumentN = dart.constFn(dart.nullable(pdf.PdfDocument)))(),
    ListN: () => (T.ListN = dart.constFn(dart.nullable(core.List)))(),
    AlwaysStoppedAnimationOfColor: () => (T.AlwaysStoppedAnimationOfColor = dart.constFn(animations.AlwaysStoppedAnimation$(ui.Color)))(),
    MapOfint$List: () => (T.MapOfint$List = dart.constFn(core.Map$(core.int, core.List)))(),
    MapNOfint$List: () => (T.MapNOfint$List = dart.constFn(dart.nullable(T.MapOfint$List())))(),
    FutureBuilderOfMapNOfint$List: () => (T.FutureBuilderOfMapNOfint$List = dart.constFn(async$.FutureBuilder$(T.MapNOfint$List())))(),
    NotificationListenerOfScrollNotification: () => (T.NotificationListenerOfScrollNotification = dart.constFn(notification_listener.NotificationListener$(scroll_notification.ScrollNotification)))(),
    ScrollNotificationTobool: () => (T.ScrollNotificationTobool = dart.constFn(dart.fnType(core.bool, [scroll_notification.ScrollNotification])))(),
    Uint8ListN: () => (T.Uint8ListN = dart.constFn(dart.nullable(typed_data.Uint8List)))(),
    BuildContextAndintToPdfPageView: () => (T.BuildContextAndintToPdfPageView = dart.constFn(dart.fnType(pdf_page_view.PdfPageView, [framework.BuildContext, core.int])))(),
    BuildContextAndAsyncSnapshotToWidget: () => (T.BuildContextAndAsyncSnapshotToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, async$.AsyncSnapshot])))(),
    JSArrayOfPdfTextLine: () => (T.JSArrayOfPdfTextLine = dart.constFn(_interceptors.JSArray$(pdftextline.PdfTextLine)))(),
    MapNOfint$ListToMapNOfint$List: () => (T.MapNOfint$ListToMapNOfint$List = dart.constFn(dart.fnType(T.MapNOfint$List(), [T.MapNOfint$List()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    __Tovoid: () => (T.__Tovoid = dart.constFn(dart.fnType(dart.void, [], {property: T.StringN()}, {})))(),
    ObserverListOf__Tovoid: () => (T.ObserverListOf__Tovoid = dart.constFn(observer_list.ObserverList$(T.__Tovoid())))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C2() {
      return C[2] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 13,
        [_Location_line]: 59,
        [_Location_file]: null
      });
    },
    get C1() {
      return C[1] = dart.constList([C[2] || CT.C2], T._LocationL());
    },
    get C0() {
      return C[0] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[1] || CT.C1,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 58,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 11,
        [_Location_line]: 56,
        [_Location_file]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 11,
        [_Location_line]: 57,
        [_Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 58,
        [_Location_file]: null
      });
    },
    get C4() {
      return C[4] = dart.constList([C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7], T._LocationL());
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[4] || CT.C4,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 55,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 53,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 9,
        [_Location_line]: 54,
        [_Location_file]: null
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 55,
        [_Location_file]: null
      });
    },
    get C9() {
      return C[9] = dart.constList([C[10] || CT.C10, C[11] || CT.C11, C[12] || CT.C12], T._LocationL());
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[9] || CT.C9,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 52,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 15,
        [_Location_line]: 76,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 15,
        [_Location_line]: 100,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.constList([C[15] || CT.C15, C[16] || CT.C16], T._LocationL());
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[14] || CT.C14,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 75,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 13,
        [_Location_line]: 71,
        [_Location_file]: null
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 75,
        [_Location_file]: null
      });
    },
    get C18() {
      return C[18] = dart.constList([C[19] || CT.C19, C[20] || CT.C20], T._LocationL());
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[18] || CT.C18,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 70,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 59,
        [_Location_line]: 108,
        [_Location_file]: null
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 17,
        [_Location_line]: 109,
        [_Location_file]: null
      });
    },
    get C22() {
      return C[22] = dart.constList([C[23] || CT.C23, C[24] || CT.C24], T._LocationL());
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[22] || CT.C22,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 107,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 15,
        [_Location_line]: 106,
        [_Location_file]: null
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 107,
        [_Location_file]: null
      });
    },
    get C26() {
      return C[26] = dart.constList([C[27] || CT.C27, C[28] || CT.C28], T._LocationL());
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[26] || CT.C26,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 105,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 105,
        [_Location_file]: null
      });
    },
    get C30() {
      return C[30] = dart.constList([C[31] || CT.C31], T._LocationL());
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[30] || CT.C30,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 104,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 69,
        [_Location_file]: null
      });
    },
    get C33() {
      return C[33] = dart.constList([C[34] || CT.C34], T._LocationL());
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[33] || CT.C33,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 68,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 7,
        [_Location_line]: 67,
        [_Location_file]: null
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 68,
        [_Location_file]: null
      });
    },
    get C36() {
      return C[36] = dart.constList([C[37] || CT.C37, C[38] || CT.C38], T._LocationL());
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[36] || CT.C36,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 66,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head.dart"
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollHeadOffset",
        [_Location_column]: 31,
        [_Location_line]: 115,
        [_Location_file]: null
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 56,
        [_Location_line]: 115,
        [_Location_file]: null
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 24,
        [_Location_line]: 116,
        [_Location_file]: null
      });
    },
    get C40() {
      return C[40] = dart.constList([C[41] || CT.C41, C[42] || CT.C42, C[43] || CT.C43], T._LocationL());
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[40] || CT.C40,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 115,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visible",
        [_Location_column]: 13,
        [_Location_line]: 111,
        [_Location_file]: null
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 115,
        [_Location_file]: null
      });
    },
    get C45() {
      return C[45] = dart.constList([C[46] || CT.C46, C[47] || CT.C47], T._LocationL());
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[45] || CT.C45,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 110,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragStart",
        [_Location_column]: 9,
        [_Location_line]: 96,
        [_Location_file]: null
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragUpdate",
        [_Location_column]: 9,
        [_Location_line]: 97,
        [_Location_file]: null
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragEnd",
        [_Location_column]: 9,
        [_Location_line]: 98,
        [_Location_file]: null
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 9,
        [_Location_line]: 99,
        [_Location_file]: null
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 110,
        [_Location_file]: null
      });
    },
    get C49() {
      return C[49] = dart.constList([C[50] || CT.C50, C[51] || CT.C51, C[52] || CT.C52, C[53] || CT.C53, C[54] || CT.C54], T._LocationL());
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[49] || CT.C49,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 95,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 94,
        [_Location_file]: null
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 95,
        [_Location_file]: null
      });
    },
    get C56() {
      return C[56] = dart.constList([C[57] || CT.C57, C[58] || CT.C58], T._LocationL());
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[56] || CT.C56,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 93,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 31,
        [_Location_line]: 146,
        [_Location_file]: null
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 15,
        [_Location_line]: 147,
        [_Location_file]: null
      });
    },
    get C60() {
      return C[60] = dart.constList([C[61] || CT.C61, C[62] || CT.C62], T._LocationL());
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[60] || CT.C60,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 145,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 44,
        [_Location_line]: 151,
        [_Location_file]: null
      });
    },
    get C64() {
      return C[64] = dart.constList([C[65] || CT.C65], T._LocationL());
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[64] || CT.C64,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 151,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 35,
        [_Location_line]: 159,
        [_Location_file]: null
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 19,
        [_Location_line]: 160,
        [_Location_file]: null
      });
    },
    get C67() {
      return C[67] = dart.constList([C[68] || CT.C68, C[69] || CT.C69], T._LocationL());
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[67] || CT.C67,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 158,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 17,
        [_Location_line]: 154,
        [_Location_file]: null
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 158,
        [_Location_file]: null
      });
    },
    get C71() {
      return C[71] = dart.constList([C[72] || CT.C72, C[73] || CT.C73], T._LocationL());
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[71] || CT.C71,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 153,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 35,
        [_Location_line]: 175,
        [_Location_file]: null
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 19,
        [_Location_line]: 176,
        [_Location_file]: null
      });
    },
    get C75() {
      return C[75] = dart.constList([C[76] || CT.C76, C[77] || CT.C77], T._LocationL());
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[75] || CT.C75,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 174,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 17,
        [_Location_line]: 171,
        [_Location_file]: null
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 174,
        [_Location_file]: null
      });
    },
    get C79() {
      return C[79] = dart.constList([C[80] || CT.C80, C[81] || CT.C81], T._LocationL());
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[79] || CT.C79,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 170,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollable",
        [_Location_column]: 13,
        [_Location_line]: 135,
        [_Location_file]: null
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "insetPadding",
        [_Location_column]: 13,
        [_Location_line]: 136,
        [_Location_file]: null
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "contentPadding",
        [_Location_column]: 13,
        [_Location_line]: 137,
        [_Location_file]: null
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "buttonPadding",
        [_Location_column]: 13,
        [_Location_line]: 140,
        [_Location_file]: null
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 13,
        [_Location_line]: 143,
        [_Location_file]: null
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 13,
        [_Location_line]: 145,
        [_Location_file]: null
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 13,
        [_Location_line]: 149,
        [_Location_file]: null
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "content",
        [_Location_column]: 13,
        [_Location_line]: 151,
        [_Location_file]: null
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actions",
        [_Location_column]: 13,
        [_Location_line]: 152,
        [_Location_file]: null
      });
    },
    get C83() {
      return C[83] = dart.constList([C[84] || CT.C84, C[85] || CT.C85, C[86] || CT.C86, C[87] || CT.C87, C[88] || CT.C88, C[89] || CT.C89, C[90] || CT.C90, C[91] || CT.C91, C[92] || CT.C92], T._LocationL());
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[83] || CT.C83,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 134,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 6,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 6,
        [EdgeInsets_left]: 0
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 196,
        [_Location_file]: null
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 11,
        [_Location_line]: 197,
        [_Location_file]: null
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 11,
        [_Location_line]: 198,
        [_Location_file]: null
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "keyboardType",
        [_Location_column]: 11,
        [_Location_line]: 213,
        [_Location_file]: null
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableInteractiveSelection",
        [_Location_column]: 11,
        [_Location_line]: 214,
        [_Location_file]: null
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 11,
        [_Location_line]: 215,
        [_Location_file]: null
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 11,
        [_Location_line]: 216,
        [_Location_file]: null
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onEditingComplete",
        [_Location_column]: 11,
        [_Location_line]: 217,
        [_Location_file]: null
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onFieldSubmitted",
        [_Location_column]: 11,
        [_Location_line]: 218,
        [_Location_file]: null
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "validator",
        [_Location_column]: 11,
        [_Location_line]: 222,
        [_Location_file]: null
      });
    },
    get C95() {
      return C[95] = dart.constList([C[96] || CT.C96, C[97] || CT.C97, C[98] || CT.C98, C[99] || CT.C99, C[100] || CT.C100, C[101] || CT.C101, C[102] || CT.C102, C[103] || CT.C103, C[104] || CT.C104, C[105] || CT.C105], T._LocationL());
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[95] || CT.C95,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 195,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 9,
        [_Location_line]: 194,
        [_Location_file]: null
      });
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 195,
        [_Location_file]: null
      });
    },
    get C107() {
      return C[107] = dart.constList([C[108] || CT.C108, C[109] || CT.C109], T._LocationL());
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[107] || CT.C107,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 193,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 192,
        [_Location_file]: null
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 193,
        [_Location_file]: null
      });
    },
    get C111() {
      return C[111] = dart.constList([C[112] || CT.C112, C[113] || CT.C113], T._LocationL());
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[111] || CT.C111,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 191,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head_overlay.dart"
      });
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 9,
        [_Location_line]: 150,
        [_Location_file]: null
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isBackIconVisible",
        [_Location_column]: 9,
        [_Location_line]: 151,
        [_Location_file]: null
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textPosition",
        [_Location_column]: 9,
        [_Location_line]: 152,
        [_Location_file]: null
      });
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onBackPressed",
        [_Location_column]: 9,
        [_Location_line]: 153,
        [_Location_file]: null
      });
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 9,
        [_Location_line]: 154,
        [_Location_file]: null
      });
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNavigate",
        [_Location_column]: 9,
        [_Location_line]: 155,
        [_Location_file]: null
      });
    },
    get C122() {
      return C[122] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isBorderEnabled",
        [_Location_column]: 9,
        [_Location_line]: 159,
        [_Location_file]: null
      });
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onExpandPressed",
        [_Location_column]: 9,
        [_Location_line]: 160,
        [_Location_file]: null
      });
    },
    get C115() {
      return C[115] = dart.constList([C[116] || CT.C116, C[117] || CT.C117, C[118] || CT.C118, C[119] || CT.C119, C[120] || CT.C120, C[121] || CT.C121, C[122] || CT.C122, C[123] || CT.C123], T._LocationL());
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[115] || CT.C115,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 149,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C126() {
      return C[126] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 9,
        [_Location_line]: 167,
        [_Location_file]: null
      });
    },
    get C127() {
      return C[127] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 9,
        [_Location_line]: 168,
        [_Location_file]: null
      });
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isExpandIconVisible",
        [_Location_column]: 9,
        [_Location_line]: 169,
        [_Location_file]: null
      });
    },
    get C129() {
      return C[129] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNavigate",
        [_Location_column]: 9,
        [_Location_line]: 172,
        [_Location_file]: null
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onExpandPressed",
        [_Location_column]: 9,
        [_Location_line]: 178,
        [_Location_file]: null
      });
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onBackPressed",
        [_Location_column]: 9,
        [_Location_line]: 181,
        [_Location_file]: null
      });
    },
    get C125() {
      return C[125] = dart.constList([C[126] || CT.C126, C[127] || CT.C127, C[128] || CT.C128, C[129] || CT.C129, C[130] || CT.C130, C[131] || CT.C131], T._LocationL());
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[125] || CT.C125,
        [_Location_name]: null,
        [_Location_column]: 41,
        [_Location_line]: 166,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 15,
        [_Location_line]: 204,
        [_Location_file]: null
      });
    },
    get C133() {
      return C[133] = dart.constList([C[134] || CT.C134], T._LocationL());
    },
    get C132() {
      return C[132] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[133] || CT.C133,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 203,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C137() {
      return C[137] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 13,
        [_Location_line]: 202,
        [_Location_file]: null
      });
    },
    get C138() {
      return C[138] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 203,
        [_Location_file]: null
      });
    },
    get C136() {
      return C[136] = dart.constList([C[137] || CT.C137, C[138] || CT.C138], T._LocationL());
    },
    get C135() {
      return C[135] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[136] || CT.C136,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 201,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C141() {
      return C[141] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visible",
        [_Location_column]: 11,
        [_Location_line]: 200,
        [_Location_file]: null
      });
    },
    get C142() {
      return C[142] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 201,
        [_Location_file]: null
      });
    },
    get C140() {
      return C[140] = dart.constList([C[141] || CT.C141, C[142] || CT.C142], T._LocationL());
    },
    get C139() {
      return C[139] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[140] || CT.C140,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 199,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C145() {
      return C[145] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onCloseButtonPressed",
        [_Location_column]: 31,
        [_Location_line]: 214,
        [_Location_file]: null
      });
    },
    get C144() {
      return C[144] = dart.constList([C[145] || CT.C145], T._LocationL());
    },
    get C143() {
      return C[143] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[144] || CT.C144,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 214,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C148() {
      return C[148] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemCount",
        [_Location_column]: 25,
        [_Location_line]: 218,
        [_Location_file]: null
      });
    },
    get C149() {
      return C[149] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemBuilder",
        [_Location_column]: 25,
        [_Location_line]: 219,
        [_Location_file]: null
      });
    },
    get C147() {
      return C[147] = dart.constList([C[148] || CT.C148, C[149] || CT.C149], T._LocationL());
    },
    get C146() {
      return C[146] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[147] || CT.C147,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 217,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C152() {
      return C[152] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 43,
        [_Location_line]: 225,
        [_Location_file]: null
      });
    },
    get C153() {
      return C[153] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 27,
        [_Location_line]: 226,
        [_Location_file]: null
      });
    },
    get C151() {
      return C[151] = dart.constList([C[152] || CT.C152, C[153] || CT.C153], T._LocationL());
    },
    get C150() {
      return C[150] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[151] || CT.C151,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 224,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C156() {
      return C[156] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 25,
        [_Location_line]: 224,
        [_Location_file]: null
      });
    },
    get C155() {
      return C[155] = dart.constList([C[156] || CT.C156], T._LocationL());
    },
    get C154() {
      return C[154] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[155] || CT.C155,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 223,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C159() {
      return C[159] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 216,
        [_Location_file]: null
      });
    },
    get C158() {
      return C[158] = dart.constList([C[159] || CT.C159], T._LocationL());
    },
    get C157() {
      return C[157] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[158] || CT.C158,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 215,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C162() {
      return C[162] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 27,
        [_Location_line]: 213,
        [_Location_file]: null
      });
    },
    get C161() {
      return C[161] = dart.constList([C[162] || CT.C162], T._LocationL());
    },
    get C160() {
      return C[160] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[161] || CT.C161,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 213,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C165() {
      return C[165] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 13,
        [_Location_line]: 211,
        [_Location_file]: null
      });
    },
    get C166() {
      return C[166] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 13,
        [_Location_line]: 212,
        [_Location_file]: null
      });
    },
    get C167() {
      return C[167] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 213,
        [_Location_file]: null
      });
    },
    get C164() {
      return C[164] = dart.constList([C[165] || CT.C165, C[166] || CT.C166, C[167] || CT.C167], T._LocationL());
    },
    get C163() {
      return C[163] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[164] || CT.C164,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 210,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C170() {
      return C[170] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 209,
        [_Location_file]: null
      });
    },
    get C171() {
      return C[171] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 210,
        [_Location_file]: null
      });
    },
    get C169() {
      return C[169] = dart.constList([C[170] || CT.C170, C[171] || CT.C171], T._LocationL());
    },
    get C168() {
      return C[168] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[169] || CT.C169,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 208,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C174() {
      return C[174] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 20,
        [_Location_line]: 198,
        [_Location_file]: null
      });
    },
    get C173() {
      return C[173] = dart.constList([C[174] || CT.C174], T._LocationL());
    },
    get C172() {
      return C[172] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[173] || CT.C173,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 198,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C177() {
      return C[177] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visible",
        [_Location_column]: 7,
        [_Location_line]: 197,
        [_Location_file]: null
      });
    },
    get C178() {
      return C[178] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 198,
        [_Location_file]: null
      });
    },
    get C176() {
      return C[176] = dart.constList([C[177] || CT.C177, C[178] || CT.C178], T._LocationL());
    },
    get C175() {
      return C[175] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[176] || CT.C176,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 196,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/bookmark/bookmark_view.dart"
      });
    },
    get C181() {
      return C[181] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 141,
        [_Location_line]: 63,
        [_Location_file]: null
      });
    },
    get C182() {
      return C[182] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 17,
        [_Location_line]: 64,
        [_Location_file]: null
      });
    },
    get C183() {
      return C[183] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 17,
        [_Location_line]: 65,
        [_Location_file]: null
      });
    },
    get C180() {
      return C[180] = dart.constList([C[181] || CT.C181, C[182] || CT.C182, C[183] || CT.C183], T._LocationL());
    },
    get C179() {
      return C[179] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[180] || CT.C180,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 62,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_status.dart"
      });
    },
    get C186() {
      return C[186] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 15,
        [_Location_line]: 52,
        [_Location_file]: null
      });
    },
    get C187() {
      return C[187] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 15,
        [_Location_line]: 53,
        [_Location_file]: null
      });
    },
    get C188() {
      return C[188] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 15,
        [_Location_line]: 56,
        [_Location_file]: null
      });
    },
    get C189() {
      return C[189] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 62,
        [_Location_file]: null
      });
    },
    get C185() {
      return C[185] = dart.constList([C[186] || CT.C186, C[187] || CT.C187, C[188] || CT.C188, C[189] || CT.C189], T._LocationL());
    },
    get C184() {
      return C[184] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[185] || CT.C185,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 51,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_status.dart"
      });
    },
    get C192() {
      return C[192] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "direction",
        [_Location_column]: 11,
        [_Location_line]: 48,
        [_Location_file]: null
      });
    },
    get C193() {
      return C[193] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisAlignment",
        [_Location_column]: 11,
        [_Location_line]: 49,
        [_Location_file]: null
      });
    },
    get C194() {
      return C[194] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 11,
        [_Location_line]: 50,
        [_Location_file]: null
      });
    },
    get C191() {
      return C[191] = dart.constList([C[192] || CT.C192, C[193] || CT.C193, C[194] || CT.C194], T._LocationL());
    },
    get C190() {
      return C[190] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[191] || CT.C191,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 47,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_status.dart"
      });
    },
    get C197() {
      return C[197] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 46,
        [_Location_file]: null
      });
    },
    get C198() {
      return C[198] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 47,
        [_Location_file]: null
      });
    },
    get C196() {
      return C[196] = dart.constList([C[197] || CT.C197, C[198] || CT.C198], T._LocationL());
    },
    get C195() {
      return C[195] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[196] || CT.C196,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 45,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_status.dart"
      });
    },
    get C201() {
      return C[201] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 7,
        [_Location_line]: 44,
        [_Location_file]: null
      });
    },
    get C202() {
      return C[202] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 45,
        [_Location_file]: null
      });
    },
    get C200() {
      return C[200] = dart.constList([C[201] || CT.C201, C[202] || CT.C202], T._LocationL());
    },
    get C199() {
      return C[199] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[200] || CT.C200,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 43,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_status.dart"
      });
    },
    get C203() {
      return C[203] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name]: "TargetPlatform.iOS",
        index: 2
      });
    },
    get C204() {
      return C[204] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name]: "TargetPlatform.macOS",
        index: 4
      });
    },
    get C205() {
      return C[205] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name]: "TargetPlatform.android",
        index: 0
      });
    },
    get C206() {
      return C[206] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name]: "TargetPlatform.fuchsia",
        index: 1
      });
    },
    get C207() {
      return C[207] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name]: "TargetPlatform.linux",
        index: 3
      });
    },
    get C208() {
      return C[208] = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name]: "TargetPlatform.windows",
        index: 5
      });
    },
    get C211() {
      return C[211] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bytes",
        [_Location_column]: 44,
        [_Location_line]: 244,
        [_Location_file]: null
      });
    },
    get C212() {
      return C[212] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 17,
        [_Location_line]: 245,
        [_Location_file]: null
      });
    },
    get C213() {
      return C[213] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 17,
        [_Location_line]: 246,
        [_Location_file]: null
      });
    },
    get C214() {
      return C[214] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 17,
        [_Location_line]: 247,
        [_Location_file]: null
      });
    },
    get C215() {
      return C[215] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 17,
        [_Location_line]: 248,
        [_Location_file]: null
      });
    },
    get C210() {
      return C[210] = dart.constList([C[211] || CT.C211, C[212] || CT.C212, C[213] || CT.C213, C[214] || CT.C214, C[215] || CT.C215], T._LocationL());
    },
    get C209() {
      return C[209] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[210] || CT.C210,
        [_Location_name]: null,
        [_Location_column]: 19,
        [_Location_line]: 244,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C218() {
      return C[218] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 15,
        [_Location_line]: 250,
        [_Location_file]: null
      });
    },
    get C219() {
      return C[219] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 15,
        [_Location_line]: 251,
        [_Location_file]: null
      });
    },
    get C217() {
      return C[217] = dart.constList([C[218] || CT.C218, C[219] || CT.C219], T._LocationL());
    },
    get C216() {
      return C[216] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[217] || CT.C217,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 249,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C222() {
      return C[222] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 25,
        [_Location_line]: 243,
        [_Location_file]: null
      });
    },
    get C221() {
      return C[221] = dart.constList([C[222] || CT.C222], T._LocationL());
    },
    get C220() {
      return C[220] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[221] || CT.C221,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 243,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C225() {
      return C[225] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 11,
        [_Location_line]: 242,
        [_Location_file]: null
      });
    },
    get C226() {
      return C[226] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 243,
        [_Location_file]: null
      });
    },
    get C224() {
      return C[224] = dart.constList([C[225] || CT.C225, C[226] || CT.C226], T._LocationL());
    },
    get C223() {
      return C[223] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[224] || CT.C224,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 241,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C229() {
      return C[229] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 15,
        [_Location_line]: 256,
        [_Location_file]: null
      });
    },
    get C230() {
      return C[230] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 15,
        [_Location_line]: 257,
        [_Location_file]: null
      });
    },
    get C231() {
      return C[231] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 258,
        [_Location_file]: null
      });
    },
    get C228() {
      return C[228] = dart.constList([C[229] || CT.C229, C[230] || CT.C230, C[231] || CT.C231], T._LocationL());
    },
    get C227() {
      return C[227] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[228] || CT.C228,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 255,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C234() {
      return C[234] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 15,
        [_Location_line]: 261,
        [_Location_file]: null
      });
    },
    get C235() {
      return C[235] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 262,
        [_Location_file]: null
      });
    },
    get C233() {
      return C[233] = dart.constList([C[234] || CT.C234, C[235] || CT.C235], T._LocationL());
    },
    get C232() {
      return C[232] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[233] || CT.C233,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 260,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C238() {
      return C[238] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 13,
        [_Location_line]: 268,
        [_Location_file]: null
      });
    },
    get C239() {
      return C[239] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 20,
        [_Location_line]: 269,
        [_Location_file]: null
      });
    },
    get C240() {
      return C[240] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 20,
        [_Location_line]: 270,
        [_Location_file]: null
      });
    },
    get C241() {
      return C[241] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfDocument",
        [_Location_column]: 20,
        [_Location_line]: 271,
        [_Location_file]: null
      });
    },
    get C242() {
      return C[242] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pageIndex",
        [_Location_column]: 20,
        [_Location_line]: 272,
        [_Location_file]: null
      });
    },
    get C243() {
      return C[243] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfPages",
        [_Location_column]: 20,
        [_Location_line]: 273,
        [_Location_file]: null
      });
    },
    get C244() {
      return C[244] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "interactionMode",
        [_Location_column]: 20,
        [_Location_line]: 274,
        [_Location_file]: null
      });
    },
    get C245() {
      return C[245] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollController",
        [_Location_column]: 20,
        [_Location_line]: 275,
        [_Location_file]: null
      });
    },
    get C246() {
      return C[246] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 20,
        [_Location_line]: 276,
        [_Location_file]: null
      });
    },
    get C247() {
      return C[247] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDocumentLinkNavigation",
        [_Location_column]: 20,
        [_Location_line]: 277,
        [_Location_file]: null
      });
    },
    get C248() {
      return C[248] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableTextSelection",
        [_Location_column]: 20,
        [_Location_line]: 278,
        [_Location_file]: null
      });
    },
    get C249() {
      return C[249] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionChanged",
        [_Location_column]: 20,
        [_Location_line]: 279,
        [_Location_file]: null
      });
    },
    get C250() {
      return C[250] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionDragStarted",
        [_Location_column]: 20,
        [_Location_line]: 280,
        [_Location_file]: null
      });
    },
    get C251() {
      return C[251] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionDragEnded",
        [_Location_column]: 20,
        [_Location_line]: 281,
        [_Location_file]: null
      });
    },
    get C252() {
      return C[252] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDocumentLinkNavigationInvoked",
        [_Location_column]: 20,
        [_Location_line]: 282,
        [_Location_file]: null
      });
    },
    get C253() {
      return C[253] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textCollection",
        [_Location_column]: 20,
        [_Location_line]: 283,
        [_Location_file]: null
      });
    },
    get C254() {
      return C[254] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "searchTextHighlightColor",
        [_Location_column]: 20,
        [_Location_line]: 284,
        [_Location_file]: null
      });
    },
    get C255() {
      return C[255] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfTextSearchResult",
        [_Location_column]: 20,
        [_Location_line]: 285,
        [_Location_file]: null
      });
    },
    get C256() {
      return C[256] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 20,
        [_Location_line]: 286,
        [_Location_file]: null
      });
    },
    get C237() {
      return C[237] = dart.constList([C[238] || CT.C238, C[239] || CT.C239, C[240] || CT.C240, C[241] || CT.C241, C[242] || CT.C242, C[243] || CT.C243, C[244] || CT.C244, C[245] || CT.C245, C[246] || CT.C246, C[247] || CT.C247, C[248] || CT.C248, C[249] || CT.C249, C[250] || CT.C250, C[251] || CT.C251, C[252] || CT.C252, C[253] || CT.C253, C[254] || CT.C254, C[255] || CT.C255, C[256] || CT.C256], T._LocationL());
    },
    get C236() {
      return C[236] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[237] || CT.C237,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 267,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C259() {
      return C[259] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 11,
        [_Location_line]: 265,
        [_Location_file]: null
      });
    },
    get C260() {
      return C[260] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 11,
        [_Location_line]: 266,
        [_Location_file]: null
      });
    },
    get C261() {
      return C[261] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 267,
        [_Location_file]: null
      });
    },
    get C258() {
      return C[258] = dart.constList([C[259] || CT.C259, C[260] || CT.C260, C[261] || CT.C261], T._LocationL());
    },
    get C257() {
      return C[257] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[258] || CT.C258,
        [_Location_name]: null,
        [_Location_column]: 38,
        [_Location_line]: 264,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C264() {
      return C[264] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanStart",
        [_Location_column]: 23,
        [_Location_line]: 419,
        [_Location_file]: null
      });
    },
    get C265() {
      return C[265] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanUpdate",
        [_Location_column]: 23,
        [_Location_line]: 429,
        [_Location_file]: null
      });
    },
    get C266() {
      return C[266] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanEnd",
        [_Location_column]: 23,
        [_Location_line]: 445,
        [_Location_file]: null
      });
    },
    get C267() {
      return C[267] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanDown",
        [_Location_column]: 23,
        [_Location_line]: 458,
        [_Location_file]: null
      });
    },
    get C268() {
      return C[268] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTapUp",
        [_Location_column]: 23,
        [_Location_line]: 461,
        [_Location_file]: null
      });
    },
    get C269() {
      return C[269] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTapDown",
        [_Location_column]: 23,
        [_Location_line]: 468,
        [_Location_file]: null
      });
    },
    get C270() {
      return C[270] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onLongPressStart",
        [_Location_column]: 23,
        [_Location_line]: 476,
        [_Location_file]: null
      });
    },
    get C271() {
      return C[271] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSecondaryTapDown",
        [_Location_column]: 23,
        [_Location_line]: 486,
        [_Location_file]: null
      });
    },
    get C272() {
      return C[272] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 489,
        [_Location_file]: null
      });
    },
    get C263() {
      return C[263] = dart.constList([C[264] || CT.C264, C[265] || CT.C265, C[266] || CT.C266, C[267] || CT.C267, C[268] || CT.C268, C[269] || CT.C269, C[270] || CT.C270, C[271] || CT.C271, C[272] || CT.C272], T._LocationL());
    },
    get C262() {
      return C[262] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[263] || CT.C263,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 418,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C275() {
      return C[275] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursor",
        [_Location_column]: 19,
        [_Location_line]: 390,
        [_Location_file]: null
      });
    },
    get C276() {
      return C[276] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHover",
        [_Location_column]: 19,
        [_Location_line]: 391,
        [_Location_file]: null
      });
    },
    get C277() {
      return C[277] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 418,
        [_Location_file]: null
      });
    },
    get C274() {
      return C[274] = dart.constList([C[275] || CT.C275, C[276] || CT.C276, C[277] || CT.C277], T._LocationL());
    },
    get C273() {
      return C[273] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[274] || CT.C274,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 389,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C280() {
      return C[280] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 17,
        [_Location_line]: 317,
        [_Location_file]: null
      });
    },
    get C281() {
      return C[281] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onKey",
        [_Location_column]: 17,
        [_Location_line]: 318,
        [_Location_file]: null
      });
    },
    get C282() {
      return C[282] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 389,
        [_Location_file]: null
      });
    },
    get C279() {
      return C[279] = dart.constList([C[280] || CT.C280, C[281] || CT.C281, C[282] || CT.C282], T._LocationL());
    },
    get C278() {
      return C[278] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[279] || CT.C279,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 316,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C285() {
      return C[285] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerSignal",
        [_Location_column]: 15,
        [_Location_line]: 292,
        [_Location_file]: null
      });
    },
    get C286() {
      return C[286] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 15,
        [_Location_line]: 299,
        [_Location_file]: null
      });
    },
    get C287() {
      return C[287] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 316,
        [_Location_file]: null
      });
    },
    get C284() {
      return C[284] = dart.constList([C[285] || CT.C285, C[286] || CT.C286, C[287] || CT.C287], T._LocationL());
    },
    get C283() {
      return C[283] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[284] || CT.C284,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 291,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C290() {
      return C[290] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 11,
        [_Location_line]: 496,
        [_Location_file]: null
      });
    },
    get C289() {
      return C[289] = dart.constList([C[290] || CT.C290], T._LocationL());
    },
    get C288() {
      return C[288] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[289] || CT.C289,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 495,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C293() {
      return C[293] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 22,
        [_Location_line]: 502,
        [_Location_file]: null
      });
    },
    get C292() {
      return C[292] = dart.constList([C[293] || CT.C293], T._LocationL());
    },
    get C291() {
      return C[291] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[292] || CT.C292,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 502,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C296() {
      return C[296] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 9,
        [_Location_line]: 506,
        [_Location_file]: null
      });
    },
    get C297() {
      return C[297] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 9,
        [_Location_line]: 507,
        [_Location_file]: null
      });
    },
    get C298() {
      return C[298] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 508,
        [_Location_file]: null
      });
    },
    get C299() {
      return C[299] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "foregroundDecoration",
        [_Location_column]: 9,
        [_Location_line]: 509,
        [_Location_file]: null
      });
    },
    get C295() {
      return C[295] = dart.constList([C[296] || CT.C296, C[297] || CT.C297, C[298] || CT.C298, C[299] || CT.C299], T._LocationL());
    },
    get C294() {
      return C[294] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[295] || CT.C295,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 505,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_page_view.dart"
      });
    },
    get C300() {
      return C[300] = dart.const({
        __proto__: pdf_container._GestureType.prototype,
        [_name$]: "_GestureType.scale",
        index: 1
      });
    },
    get C301() {
      return C[301] = dart.const({
        __proto__: pdf_container._GestureType.prototype,
        [_name$]: "_GestureType.pan",
        index: 0
      });
    },
    get C304() {
      return C[304] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 15,
        [_Location_line]: 931,
        [_Location_file]: null
      });
    },
    get C303() {
      return C[303] = dart.constList([C[304] || CT.C304], T._LocationL());
    },
    get C302() {
      return C[302] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[303] || CT.C303,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 930,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_container.dart"
      });
    },
    get C307() {
      return C[307] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 930,
        [_Location_file]: null
      });
    },
    get C306() {
      return C[306] = dart.constList([C[307] || CT.C307], T._LocationL());
    },
    get C305() {
      return C[305] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[306] || CT.C306,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 929,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_container.dart"
      });
    },
    get C310() {
      return C[310] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 928,
        [_Location_file]: null
      });
    },
    get C311() {
      return C[311] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 929,
        [_Location_file]: null
      });
    },
    get C309() {
      return C[309] = dart.constList([C[310] || CT.C310, C[311] || CT.C311], T._LocationL());
    },
    get C308() {
      return C[308] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[309] || CT.C309,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 927,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_container.dart"
      });
    },
    get C314() {
      return C[314] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 11,
        [_Location_line]: 940,
        [_Location_file]: null
      });
    },
    get C315() {
      return C[315] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "physics",
        [_Location_column]: 11,
        [_Location_line]: 941,
        [_Location_file]: null
      });
    },
    get C316() {
      return C[316] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 942,
        [_Location_file]: null
      });
    },
    get C313() {
      return C[313] = dart.constList([C[314] || CT.C314, C[315] || CT.C315, C[316] || CT.C316], T._LocationL());
    },
    get C312() {
      return C[312] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[313] || CT.C313,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 939,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_container.dart"
      });
    },
    get C319() {
      return C[319] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 11,
        [_Location_line]: 945,
        [_Location_file]: null
      });
    },
    get C320() {
      return C[320] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 48,
        [_Location_line]: 945,
        [_Location_file]: null
      });
    },
    get C318() {
      return C[318] = dart.constList([C[319] || CT.C319, C[320] || CT.C320], T._LocationL());
    },
    get C317() {
      return C[317] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[318] || CT.C318,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 944,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_container.dart"
      });
    },
    get C323() {
      return C[323] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "origin",
        [_Location_column]: 9,
        [_Location_line]: 959,
        [_Location_file]: null
      });
    },
    get C324() {
      return C[324] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transform",
        [_Location_column]: 9,
        [_Location_line]: 960,
        [_Location_file]: null
      });
    },
    get C325() {
      return C[325] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 961,
        [_Location_file]: null
      });
    },
    get C326() {
      return C[326] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 962,
        [_Location_file]: null
      });
    },
    get C322() {
      return C[322] = dart.constList([C[323] || CT.C323, C[324] || CT.C324, C[325] || CT.C325, C[326] || CT.C326], T._LocationL());
    },
    get C321() {
      return C[321] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[322] || CT.C322,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 958,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_container.dart"
      });
    },
    get C329() {
      return C[329] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 966,
        [_Location_file]: null
      });
    },
    get C330() {
      return C[330] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minWidth",
        [_Location_column]: 9,
        [_Location_line]: 967,
        [_Location_file]: null
      });
    },
    get C331() {
      return C[331] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minHeight",
        [_Location_column]: 9,
        [_Location_line]: 968,
        [_Location_file]: null
      });
    },
    get C332() {
      return C[332] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxWidth",
        [_Location_column]: 9,
        [_Location_line]: 969,
        [_Location_file]: null
      });
    },
    get C333() {
      return C[333] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 970,
        [_Location_file]: null
      });
    },
    get C328() {
      return C[328] = dart.constList([C[329] || CT.C329, C[330] || CT.C330, C[331] || CT.C331, C[332] || CT.C332, C[333] || CT.C333], T._LocationL());
    },
    get C327() {
      return C[327] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[328] || CT.C328,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 965,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_container.dart"
      });
    },
    get C336() {
      return C[336] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 15,
        [_Location_line]: 1079,
        [_Location_file]: null
      });
    },
    get C337() {
      return C[337] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 1080,
        [_Location_file]: null
      });
    },
    get C335() {
      return C[335] = dart.constList([C[336] || CT.C336, C[337] || CT.C337], T._LocationL());
    },
    get C334() {
      return C[334] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[335] || CT.C335,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 1078,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_container.dart"
      });
    },
    get C340() {
      return C[340] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 13,
        [_Location_line]: 1017,
        [_Location_file]: null
      });
    },
    get C341() {
      return C[341] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestures",
        [_Location_column]: 13,
        [_Location_line]: 1019,
        [_Location_file]: null
      });
    },
    get C342() {
      return C[342] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1078,
        [_Location_file]: null
      });
    },
    get C339() {
      return C[339] = dart.constList([C[340] || CT.C340, C[341] || CT.C341, C[342] || CT.C342], T._LocationL());
    },
    get C338() {
      return C[338] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[339] || CT.C339,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1016,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_container.dart"
      });
    },
    get C345() {
      return C[345] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 9,
        [_Location_line]: 985,
        [_Location_file]: null
      });
    },
    get C346() {
      return C[346] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerSignal",
        [_Location_column]: 9,
        [_Location_line]: 986,
        [_Location_file]: null
      });
    },
    get C347() {
      return C[347] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerUp",
        [_Location_column]: 9,
        [_Location_line]: 1000,
        [_Location_file]: null
      });
    },
    get C348() {
      return C[348] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1016,
        [_Location_file]: null
      });
    },
    get C344() {
      return C[344] = dart.constList([C[345] || CT.C345, C[346] || CT.C346, C[347] || CT.C347, C[348] || CT.C348], T._LocationL());
    },
    get C343() {
      return C[343] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[344] || CT.C344,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 984,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_container.dart"
      });
    },
    get C351() {
      return C[351] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursor",
        [_Location_column]: 7,
        [_Location_line]: 976,
        [_Location_file]: null
      });
    },
    get C352() {
      return C[352] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHover",
        [_Location_column]: 7,
        [_Location_line]: 977,
        [_Location_file]: null
      });
    },
    get C353() {
      return C[353] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 984,
        [_Location_file]: null
      });
    },
    get C350() {
      return C[350] = dart.constList([C[351] || CT.C351, C[352] || CT.C352, C[353] || CT.C353], T._LocationL());
    },
    get C349() {
      return C[349] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[350] || CT.C350,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 975,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_container.dart"
      });
    },
    get C354() {
      return C[354] = dart.constList([C[301] || CT.C301, C[300] || CT.C300], T._GestureTypeL());
    },
    get C355() {
      return C[355] = dart.const({
        __proto__: basic_types.Axis.prototype,
        [_name$0]: "Axis.horizontal",
        index: 0
      });
    },
    get C356() {
      return C[356] = dart.const({
        __proto__: basic_types.Axis.prototype,
        [_name$0]: "Axis.vertical",
        index: 1
      });
    },
    get C357() {
      return C[357] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
      });
    },
    get C358() {
      return C[358] = dart.const({
        __proto__: enums.PdfInteractionMode.prototype,
        [_name$1]: "PdfInteractionMode.selection",
        index: 0
      });
    },
    get C359() {
      return C[359] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293225984.0
      });
    },
    get C362() {
      return C[362] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 988,
        [_Location_file]: null
      });
    },
    get C361() {
      return C[361] = dart.constList([C[362] || CT.C362], T._LocationL());
    },
    get C360() {
      return C[360] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[361] || CT.C361,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 987,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/pdfviewer.dart"
      });
    },
    get C365() {
      return C[365] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "valueColor",
        [_Location_column]: 11,
        [_Location_line]: 994,
        [_Location_file]: null
      });
    },
    get C366() {
      return C[366] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 11,
        [_Location_line]: 997,
        [_Location_file]: null
      });
    },
    get C364() {
      return C[364] = dart.constList([C[365] || CT.C365, C[366] || CT.C366], T._LocationL());
    },
    get C363() {
      return C[363] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[364] || CT.C364,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 993,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/pdfviewer.dart"
      });
    },
    get C369() {
      return C[369] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 991,
        [_Location_file]: null
      });
    },
    get C368() {
      return C[368] = dart.constList([C[369] || CT.C369], T._LocationL());
    },
    get C367() {
      return C[367] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[368] || CT.C368,
        [_Location_name]: null,
        [_Location_column]: 37,
        [_Location_line]: 990,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/pdfviewer.dart"
      });
    },
    get C372() {
      return C[372] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 58,
        [_Location_line]: 1075,
        [_Location_file]: null
      });
    },
    get C373() {
      return C[373] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "imageStream",
        [_Location_column]: 45,
        [_Location_line]: 1076,
        [_Location_file]: null
      });
    },
    get C374() {
      return C[374] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportGlobalRect",
        [_Location_column]: 35,
        [_Location_line]: 1077,
        [_Location_file]: null
      });
    },
    get C375() {
      return C[375] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "interactionMode",
        [_Location_column]: 42,
        [_Location_line]: 1078,
        [_Location_file]: null
      });
    },
    get C376() {
      return C[376] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 39,
        [_Location_line]: 1080,
        [_Location_file]: null
      });
    },
    get C377() {
      return C[377] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 39,
        [_Location_line]: 1083,
        [_Location_file]: null
      });
    },
    get C378() {
      return C[378] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pageSpacing",
        [_Location_column]: 42,
        [_Location_line]: 1085,
        [_Location_file]: null
      });
    },
    get C379() {
      return C[379] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfDocument",
        [_Location_column]: 35,
        [_Location_line]: 1086,
        [_Location_file]: null
      });
    },
    get C380() {
      return C[380] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfPages",
        [_Location_column]: 35,
        [_Location_line]: 1087,
        [_Location_file]: null
      });
    },
    get C381() {
      return C[381] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pageIndex",
        [_Location_column]: 35,
        [_Location_line]: 1088,
        [_Location_file]: null
      });
    },
    get C382() {
      return C[382] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollController",
        [_Location_column]: 35,
        [_Location_line]: 1089,
        [_Location_file]: null
      });
    },
    get C383() {
      return C[383] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 35,
        [_Location_line]: 1090,
        [_Location_file]: null
      });
    },
    get C384() {
      return C[384] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDocumentLinkAnnotation",
        [_Location_column]: 42,
        [_Location_line]: 1091,
        [_Location_file]: null
      });
    },
    get C385() {
      return C[385] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableTextSelection",
        [_Location_column]: 42,
        [_Location_line]: 1092,
        [_Location_file]: null
      });
    },
    get C386() {
      return C[386] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionChanged",
        [_Location_column]: 42,
        [_Location_line]: 1093,
        [_Location_file]: null
      });
    },
    get C387() {
      return C[387] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionDragStarted",
        [_Location_column]: 35,
        [_Location_line]: 1094,
        [_Location_file]: null
      });
    },
    get C388() {
      return C[388] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTextSelectionDragEnded",
        [_Location_column]: 35,
        [_Location_line]: 1095,
        [_Location_file]: null
      });
    },
    get C389() {
      return C[389] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDocumentLinkNavigationInvoked",
        [_Location_column]: 35,
        [_Location_line]: 1096,
        [_Location_file]: null
      });
    },
    get C390() {
      return C[390] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "searchTextHighlightColor",
        [_Location_column]: 42,
        [_Location_line]: 1097,
        [_Location_file]: null
      });
    },
    get C391() {
      return C[391] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textCollection",
        [_Location_column]: 35,
        [_Location_line]: 1098,
        [_Location_file]: null
      });
    },
    get C392() {
      return C[392] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 35,
        [_Location_line]: 1099,
        [_Location_file]: null
      });
    },
    get C393() {
      return C[393] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfTextSearchResult",
        [_Location_column]: 56,
        [_Location_line]: 1100,
        [_Location_file]: null
      });
    },
    get C371() {
      return C[371] = dart.constList([C[372] || CT.C372, C[373] || CT.C373, C[374] || CT.C374, C[375] || CT.C375, C[376] || CT.C376, C[377] || CT.C377, C[378] || CT.C378, C[379] || CT.C379, C[380] || CT.C380, C[381] || CT.C381, C[382] || CT.C382, C[383] || CT.C383, C[384] || CT.C384, C[385] || CT.C385, C[386] || CT.C386, C[387] || CT.C387, C[388] || CT.C388, C[389] || CT.C389, C[390] || CT.C390, C[391] || CT.C391, C[392] || CT.C392, C[393] || CT.C393], T._LocationL());
    },
    get C370() {
      return C[370] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[371] || CT.C371,
        [_Location_name]: null,
        [_Location_column]: 58,
        [_Location_line]: 1074,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/pdfviewer.dart"
      });
    },
    get C396() {
      return C[396] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 31,
        [_Location_line]: 1035,
        [_Location_file]: null
      });
    },
    get C397() {
      return C[397] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 31,
        [_Location_line]: 1036,
        [_Location_file]: null
      });
    },
    get C398() {
      return C[398] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "initialScrollOffset",
        [_Location_column]: 38,
        [_Location_line]: 1037,
        [_Location_file]: null
      });
    },
    get C399() {
      return C[399] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "initialZoomLevel",
        [_Location_column]: 38,
        [_Location_line]: 1038,
        [_Location_file]: null
      });
    },
    get C400() {
      return C[400] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDoubleTapZooming",
        [_Location_column]: 38,
        [_Location_line]: 1039,
        [_Location_file]: null
      });
    },
    get C401() {
      return C[401] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onZoomLevelChanged",
        [_Location_column]: 38,
        [_Location_line]: 1040,
        [_Location_file]: null
      });
    },
    get C402() {
      return C[402] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfController",
        [_Location_column]: 31,
        [_Location_line]: 1041,
        [_Location_file]: null
      });
    },
    get C403() {
      return C[403] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 31,
        [_Location_line]: 1042,
        [_Location_file]: null
      });
    },
    get C404() {
      return C[404] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "interactionMode",
        [_Location_column]: 38,
        [_Location_line]: 1043,
        [_Location_file]: null
      });
    },
    get C405() {
      return C[405] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportConstraints",
        [_Location_column]: 31,
        [_Location_line]: 1044,
        [_Location_file]: null
      });
    },
    get C406() {
      return C[406] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxPdfPageWidth",
        [_Location_column]: 31,
        [_Location_line]: 1045,
        [_Location_file]: null
      });
    },
    get C407() {
      return C[407] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "panEnabled",
        [_Location_column]: 31,
        [_Location_line]: 1046,
        [_Location_file]: null
      });
    },
    get C408() {
      return C[408] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollController",
        [_Location_column]: 31,
        [_Location_line]: 1047,
        [_Location_file]: null
      });
    },
    get C409() {
      return C[409] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemBuilder",
        [_Location_column]: 31,
        [_Location_line]: 1048,
        [_Location_file]: null
      });
    },
    get C395() {
      return C[395] = dart.constList([C[396] || CT.C396, C[397] || CT.C397, C[398] || CT.C398, C[399] || CT.C399, C[400] || CT.C400, C[401] || CT.C401, C[402] || CT.C402, C[403] || CT.C403, C[404] || CT.C404, C[405] || CT.C405, C[406] || CT.C406, C[407] || CT.C407, C[408] || CT.C408, C[409] || CT.C409], T._LocationL());
    },
    get C394() {
      return C[394] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[395] || CT.C395,
        [_Location_name]: null,
        [_Location_column]: 36,
        [_Location_line]: 1034,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/pdfviewer.dart"
      });
    },
    get C412() {
      return C[412] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 29,
        [_Location_line]: 1034,
        [_Location_file]: null
      });
    },
    get C411() {
      return C[411] = dart.constList([C[412] || CT.C412], T._LocationL());
    },
    get C410() {
      return C[410] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[411] || CT.C411,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 1033,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/pdfviewer.dart"
      });
    },
    get C415() {
      return C[415] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 31,
        [_Location_line]: 1149,
        [_Location_file]: null
      });
    },
    get C416() {
      return C[416] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowScrollHead",
        [_Location_column]: 38,
        [_Location_line]: 1150,
        [_Location_file]: null
      });
    },
    get C417() {
      return C[417] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canShowPaginationDialog",
        [_Location_column]: 38,
        [_Location_line]: 1151,
        [_Location_file]: null
      });
    },
    get C418() {
      return C[418] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onScrollHeadDragEnd",
        [_Location_column]: 31,
        [_Location_line]: 1152,
        [_Location_file]: null
      });
    },
    get C419() {
      return C[419] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollController",
        [_Location_column]: 31,
        [_Location_line]: 1153,
        [_Location_file]: null
      });
    },
    get C420() {
      return C[420] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMobileWebView",
        [_Location_column]: 31,
        [_Location_line]: 1154,
        [_Location_file]: null
      });
    },
    get C421() {
      return C[421] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 31,
        [_Location_line]: 1155,
        [_Location_file]: null
      });
    },
    get C414() {
      return C[414] = dart.constList([C[415] || CT.C415, C[416] || CT.C416, C[417] || CT.C417, C[418] || CT.C418, C[419] || CT.C419, C[420] || CT.C420, C[421] || CT.C421], T._LocationL());
    },
    get C413() {
      return C[413] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[414] || CT.C414,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 1148,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/pdfviewer.dart"
      });
    },
    get C424() {
      return C[424] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfViewerController",
        [_Location_column]: 51,
        [_Location_line]: 1163,
        [_Location_file]: null
      });
    },
    get C423() {
      return C[423] = dart.constList([C[424] || CT.C424], T._LocationL());
    },
    get C422() {
      return C[422] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[423] || CT.C423,
        [_Location_name]: null,
        [_Location_column]: 38,
        [_Location_line]: 1163,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/pdfviewer.dart"
      });
    },
    get C427() {
      return C[427] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visible",
        [_Location_column]: 31,
        [_Location_line]: 1157,
        [_Location_file]: null
      });
    },
    get C428() {
      return C[428] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 31,
        [_Location_line]: 1163,
        [_Location_file]: null
      });
    },
    get C426() {
      return C[426] = dart.constList([C[427] || CT.C427, C[428] || CT.C428], T._LocationL());
    },
    get C425() {
      return C[425] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[426] || CT.C426,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 1156,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/pdfviewer.dart"
      });
    },
    get C431() {
      return C[431] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 31,
        [_Location_line]: 1165,
        [_Location_file]: null
      });
    },
    get C432() {
      return C[432] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pdfDocument",
        [_Location_column]: 45,
        [_Location_line]: 1165,
        [_Location_file]: null
      });
    },
    get C433() {
      return C[433] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 56,
        [_Location_line]: 1165,
        [_Location_file]: null
      });
    },
    get C430() {
      return C[430] = dart.constList([C[431] || CT.C431, C[432] || CT.C432, C[433] || CT.C433], T._LocationL());
    },
    get C429() {
      return C[429] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[430] || CT.C430,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 1164,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/pdfviewer.dart"
      });
    },
    get C436() {
      return C[436] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 25,
        [_Location_line]: 1032,
        [_Location_file]: null
      });
    },
    get C435() {
      return C[435] = dart.constList([C[436] || CT.C436], T._LocationL());
    },
    get C434() {
      return C[434] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[435] || CT.C435,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 1031,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/pdfviewer.dart"
      });
    },
    get C439() {
      return C[439] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 23,
        [_Location_line]: 1027,
        [_Location_file]: null
      });
    },
    get C440() {
      return C[440] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 1031,
        [_Location_file]: null
      });
    },
    get C438() {
      return C[438] = dart.constList([C[439] || CT.C439, C[440] || CT.C440], T._LocationL());
    },
    get C437() {
      return C[437] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[438] || CT.C438,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 1026,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/pdfviewer.dart"
      });
    },
    get C443() {
      return C[443] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "future",
        [_Location_column]: 17,
        [_Location_line]: 1017,
        [_Location_file]: null
      });
    },
    get C444() {
      return C[444] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 17,
        [_Location_line]: 1018,
        [_Location_file]: null
      });
    },
    get C442() {
      return C[442] = dart.constList([C[443] || CT.C443, C[444] || CT.C444], T._LocationL());
    },
    get C441() {
      return C[441] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[442] || CT.C442,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 1016,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/pdfviewer.dart"
      });
    },
    get C447() {
      return C[447] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 13,
        [_Location_line]: 1015,
        [_Location_file]: null
      });
    },
    get C448() {
      return C[448] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1016,
        [_Location_file]: null
      });
    },
    get C446() {
      return C[446] = dart.constList([C[447] || CT.C447, C[448] || CT.C448], T._LocationL());
    },
    get C445() {
      return C[445] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[446] || CT.C446,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 1014,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/pdfviewer.dart"
      });
    },
    get C449() {
      return C[449] = dart.const({
        __proto__: pdfviewer_helper.Navigation.prototype,
        [_name$2]: "Navigation.jumpToPage",
        index: 0
      });
    },
    get C450() {
      return C[450] = dart.const({
        __proto__: pdfviewer_helper.Navigation.prototype,
        [_name$2]: "Navigation.firstPage",
        index: 1
      });
    },
    get C451() {
      return C[451] = dart.const({
        __proto__: pdfviewer_helper.Navigation.prototype,
        [_name$2]: "Navigation.lastPage",
        index: 3
      });
    },
    get C452() {
      return C[452] = dart.const({
        __proto__: pdfviewer_helper.Navigation.prototype,
        [_name$2]: "Navigation.previousPage",
        index: 4
      });
    },
    get C453() {
      return C[453] = dart.const({
        __proto__: pdfviewer_helper.Navigation.prototype,
        [_name$2]: "Navigation.nextPage",
        index: 2
      });
    }
  }, false);
  var C = Array(454).fill(void 0);
  var I = [
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_head.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_head_overlay.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_head_overlay.dart",
    "package:syncfusion_flutter_pdfviewer/src/common/pdf_provider.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/common/pdf_provider.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/bookmark/bookmark_view.dart",
    "package:syncfusion_flutter_pdfviewer/src/bookmark/bookmark_view.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/scroll_status.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_status.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdfviewer_canvas.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/pdfviewer_canvas.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_page_view.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/pdf_page_view.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/control/pdf_container.dart",
    "package:syncfusion_flutter_pdfviewer/src/control/pdf_container.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/syncfusion_flutter_pdfviewer-19.1.58-beta/lib/src/pdfviewer.dart",
    "package:syncfusion_flutter_pdfviewer/src/pdfviewer.dart"
  ];
  var scrollHeadOffset$ = dart.privateName(scroll_head, "ScrollHead.scrollHeadOffset");
  var pdfViewerController$ = dart.privateName(scroll_head, "ScrollHead.pdfViewerController");
  var isMobileWebView$ = dart.privateName(scroll_head, "ScrollHead.isMobileWebView");
  scroll_head.ScrollHead = class ScrollHead extends framework.StatefulWidget {
    get scrollHeadOffset() {
      return this[scrollHeadOffset$];
    }
    set scrollHeadOffset(value) {
      super.scrollHeadOffset = value;
    }
    get pdfViewerController() {
      return this[pdfViewerController$];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    get isMobileWebView() {
      return this[isMobileWebView$];
    }
    set isMobileWebView(value) {
      super.isMobileWebView = value;
    }
    createState() {
      return new scroll_head._ScrollHeadState.new();
    }
  };
  (scroll_head.ScrollHead.new = function(scrollHeadOffset, pdfViewerController, isMobileWebView, opts) {
    if (scrollHeadOffset == null) dart.nullFailed(I[0], 18, 12, "scrollHeadOffset");
    if (pdfViewerController == null) dart.nullFailed(I[0], 18, 35, "pdfViewerController");
    if (isMobileWebView == null) dart.nullFailed(I[0], 18, 61, "isMobileWebView");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[scrollHeadOffset$] = scrollHeadOffset;
    this[pdfViewerController$] = pdfViewerController;
    this[isMobileWebView$] = isMobileWebView;
    scroll_head.ScrollHead.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_head.ScrollHead.prototype;
  dart.addTypeTests(scroll_head.ScrollHead);
  dart.addTypeCaches(scroll_head.ScrollHead);
  dart.setMethodSignature(scroll_head.ScrollHead, () => ({
    __proto__: dart.getMethods(scroll_head.ScrollHead.__proto__),
    createState: dart.fnType(scroll_head._ScrollHeadState, [])
  }));
  dart.setLibraryUri(scroll_head.ScrollHead, I[1]);
  dart.setFieldSignature(scroll_head.ScrollHead, () => ({
    __proto__: dart.getFields(scroll_head.ScrollHead.__proto__),
    scrollHeadOffset: dart.finalFieldType(core.double),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController),
    isMobileWebView: dart.finalFieldType(core.bool)
  }));
  var _pdfViewerThemeData = dart.privateName(scroll_head, "_pdfViewerThemeData");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  scroll_head._ScrollHeadState = class _ScrollHeadState extends framework.State$(scroll_head.ScrollHead) {
    didChangeDependencies() {
      this[_pdfViewerThemeData] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
      super.didChangeDependencies();
    }
    dispose() {
      this[_pdfViewerThemeData] = null;
      super.dispose();
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 50, 29, "context");
      if (true) {
        return new container.Container.new({alignment: alignment$.Alignment.topRight, margin: new edge_insets.EdgeInsets.only({top: this.widget.scrollHeadOffset}), child: new material.Material.new({color: colors.Colors.grey, borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(7.0)), child: new container.Container.new({constraints: new box.BoxConstraints.tight(new ui.Size.new(10.0, 54.0)), $creationLocationd_0dea112b090073317d4: C[0] || CT.C0}), $creationLocationd_0dea112b090073317d4: C[3] || CT.C3}), $creationLocationd_0dea112b090073317d4: C[8] || CT.C8});
      }
      return new container.Container.new({margin: new edge_insets.EdgeInsets.only({top: this.widget.scrollHeadOffset}), child: new basic.Stack.new({children: T.JSArrayOfWidget().of([new material.Material.new({borderRadius: new border_radius.BorderRadius.only({topLeft: new ui.Radius.circular(32), bottomLeft: new ui.Radius.circular(32)}), child: new container.Container.new({decoration: new box_decoration.BoxDecoration.new({color: dart.nullCheck(this[_pdfViewerThemeData]).scrollHeadStyle.backgroundColor, borderRadius: new border_radius.BorderRadius.only({topLeft: new ui.Radius.circular(32), bottomLeft: new ui.Radius.circular(32)}), boxShadow: T.JSArrayOfBoxShadow().of([new box_shadow.BoxShadow.new({color: new ui.Color.fromRGBO(0, 0, 0, 0.14), blurRadius: 2.0, offset: new ui.Offset.new(0.0, 0.0)}), new box_shadow.BoxShadow.new({color: new ui.Color.fromRGBO(0, 0, 0, 0.12), blurRadius: 2.0, offset: new ui.Offset.new(0.0, 2.0)}), new box_shadow.BoxShadow.new({color: new ui.Color.fromRGBO(0, 0, 0, 0.2), blurRadius: 3.0, offset: new ui.Offset.new(0.0, 1.0)})])}), constraints: new box.BoxConstraints.tightFor({width: 32, height: 32}), $creationLocationd_0dea112b090073317d4: C[13] || CT.C13}), $creationLocationd_0dea112b090073317d4: C[17] || CT.C17}), new basic.Positioned.fill({child: new basic.Align.new({alignment: alignment$.Alignment.center, child: new text.Text.new(dart.str(this.widget.pdfViewerController.pageNumber), {style: dart.nullCheck(this[_pdfViewerThemeData]).scrollHeadStyle.pageNumberTextStyle, $creationLocationd_0dea112b090073317d4: C[21] || CT.C21}), $creationLocationd_0dea112b090073317d4: C[25] || CT.C25}), $creationLocationd_0dea112b090073317d4: C[29] || CT.C29})]), $creationLocationd_0dea112b090073317d4: C[32] || CT.C32}), $creationLocationd_0dea112b090073317d4: C[35] || CT.C35});
    }
  };
  (scroll_head._ScrollHeadState.new = function() {
    this[_pdfViewerThemeData] = null;
    scroll_head._ScrollHeadState.__proto__.new.call(this);
    ;
  }).prototype = scroll_head._ScrollHeadState.prototype;
  dart.addTypeTests(scroll_head._ScrollHeadState);
  dart.addTypeCaches(scroll_head._ScrollHeadState);
  dart.setMethodSignature(scroll_head._ScrollHeadState, () => ({
    __proto__: dart.getMethods(scroll_head._ScrollHeadState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scroll_head._ScrollHeadState, I[1]);
  dart.setFieldSignature(scroll_head._ScrollHeadState, () => ({
    __proto__: dart.getFields(scroll_head._ScrollHeadState.__proto__),
    [_pdfViewerThemeData]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData))
  }));
  dart.defineLazy(scroll_head, {
    /*scroll_head.kPdfScrollHeadHeight*/get kPdfScrollHeadHeight() {
      return 32;
    }
  }, false);
  var onScrollHeadDragEnd$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.onScrollHeadDragEnd");
  var canShowPaginationDialog$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.canShowPaginationDialog");
  var canShowScrollHead$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.canShowScrollHead");
  var scrollController$ = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.scrollController");
  var pdfViewerController$0 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.pdfViewerController");
  var isMobileWebView$0 = dart.privateName(scroll_head_overlay, "ScrollHeadOverlay.isMobileWebView");
  scroll_head_overlay.ScrollHeadOverlay = class ScrollHeadOverlay extends framework.StatefulWidget {
    get onScrollHeadDragEnd() {
      return this[onScrollHeadDragEnd$];
    }
    set onScrollHeadDragEnd(value) {
      super.onScrollHeadDragEnd = value;
    }
    get canShowPaginationDialog() {
      return this[canShowPaginationDialog$];
    }
    set canShowPaginationDialog(value) {
      super.canShowPaginationDialog = value;
    }
    get canShowScrollHead() {
      return this[canShowScrollHead$];
    }
    set canShowScrollHead(value) {
      super.canShowScrollHead = value;
    }
    get scrollController() {
      return this[scrollController$];
    }
    set scrollController(value) {
      super.scrollController = value;
    }
    get pdfViewerController() {
      return this[pdfViewerController$0];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    get isMobileWebView() {
      return this[isMobileWebView$0];
    }
    set isMobileWebView(value) {
      super.isMobileWebView = value;
    }
    createState() {
      return new scroll_head_overlay.ScrollHeadOverlayState.new();
    }
  };
  (scroll_head_overlay.ScrollHeadOverlay.new = function(key, canShowScrollHead, canShowPaginationDialog, onScrollHeadDragEnd, scrollController, isMobileWebView, pdfViewerController, opts) {
    if (key == null) dart.nullFailed(I[2], 22, 11, "key");
    if (canShowScrollHead == null) dart.nullFailed(I[2], 23, 12, "canShowScrollHead");
    if (canShowPaginationDialog == null) dart.nullFailed(I[2], 24, 12, "canShowPaginationDialog");
    if (onScrollHeadDragEnd == null) dart.nullFailed(I[2], 25, 12, "onScrollHeadDragEnd");
    if (scrollController == null) dart.nullFailed(I[2], 26, 12, "scrollController");
    if (isMobileWebView == null) dart.nullFailed(I[2], 27, 12, "isMobileWebView");
    if (pdfViewerController == null) dart.nullFailed(I[2], 28, 12, "pdfViewerController");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowScrollHead$] = canShowScrollHead;
    this[canShowPaginationDialog$] = canShowPaginationDialog;
    this[onScrollHeadDragEnd$] = onScrollHeadDragEnd;
    this[scrollController$] = scrollController;
    this[isMobileWebView$0] = isMobileWebView;
    this[pdfViewerController$0] = pdfViewerController;
    scroll_head_overlay.ScrollHeadOverlay.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_head_overlay.ScrollHeadOverlay.prototype;
  dart.addTypeTests(scroll_head_overlay.ScrollHeadOverlay);
  dart.addTypeCaches(scroll_head_overlay.ScrollHeadOverlay);
  dart.setMethodSignature(scroll_head_overlay.ScrollHeadOverlay, () => ({
    __proto__: dart.getMethods(scroll_head_overlay.ScrollHeadOverlay.__proto__),
    createState: dart.fnType(scroll_head_overlay.ScrollHeadOverlayState, [])
  }));
  dart.setLibraryUri(scroll_head_overlay.ScrollHeadOverlay, I[3]);
  dart.setFieldSignature(scroll_head_overlay.ScrollHeadOverlay, () => ({
    __proto__: dart.getFields(scroll_head_overlay.ScrollHeadOverlay.__proto__),
    onScrollHeadDragEnd: dart.finalFieldType(dart.fnType(dart.void, [])),
    canShowPaginationDialog: dart.finalFieldType(core.bool),
    canShowScrollHead: dart.finalFieldType(core.bool),
    scrollController: dart.finalFieldType(scroll_controller.ScrollController),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController),
    isMobileWebView: dart.finalFieldType(core.bool)
  }));
  var isScrollHeadDragged = dart.privateName(scroll_head_overlay, "ScrollHeadOverlayState.isScrollHeadDragged");
  var _textFieldController = dart.privateName(scroll_head_overlay, "_textFieldController");
  var _formKey = dart.privateName(scroll_head_overlay, "_formKey");
  var _focusNode = dart.privateName(scroll_head_overlay, "_focusNode");
  var _pdfViewerThemeData$ = dart.privateName(scroll_head_overlay, "_pdfViewerThemeData");
  var _localizations = dart.privateName(scroll_head_overlay, "_localizations");
  var __ScrollHeadOverlayState_scrollHeadOffset = dart.privateName(scroll_head_overlay, "_#ScrollHeadOverlayState#scrollHeadOffset");
  var __ScrollHeadOverlayState_scrollHeadOffset_isSet = dart.privateName(scroll_head_overlay, "_#ScrollHeadOverlayState#scrollHeadOffset#isSet");
  var _handleScrollHeadDragStart = dart.privateName(scroll_head_overlay, "_handleScrollHeadDragStart");
  var _handleScrollHeadDragUpdate = dart.privateName(scroll_head_overlay, "_handleScrollHeadDragUpdate");
  var _handleScrollHeadDragEnd = dart.privateName(scroll_head_overlay, "_handleScrollHeadDragEnd");
  var _showPaginationDialog = dart.privateName(scroll_head_overlay, "_showPaginationDialog");
  var _clearSelection = dart.privateName(scroll_head_overlay, "_clearSelection");
  var _paginationTextField = dart.privateName(scroll_head_overlay, "_paginationTextField");
  var _handlePageNumberValidation = dart.privateName(scroll_head_overlay, "_handlePageNumberValidation");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  scroll_head_overlay.ScrollHeadOverlayState = class ScrollHeadOverlayState extends framework.State$(scroll_head_overlay.ScrollHeadOverlay) {
    get isScrollHeadDragged() {
      return this[isScrollHeadDragged];
    }
    set isScrollHeadDragged(value) {
      this[isScrollHeadDragged] = value;
    }
    get scrollHeadOffset() {
      let t0;
      return dart.test(this[__ScrollHeadOverlayState_scrollHeadOffset_isSet]) ? (t0 = this[__ScrollHeadOverlayState_scrollHeadOffset], t0) : dart.throw(new _internal.LateError.fieldNI("scrollHeadOffset"));
    }
    set scrollHeadOffset(t0) {
      if (t0 == null) dart.nullFailed(I[2], 64, 15, "null");
      this[__ScrollHeadOverlayState_scrollHeadOffset_isSet] = true;
      this[__ScrollHeadOverlayState_scrollHeadOffset] = t0;
    }
    initState() {
      super.initState();
      this.scrollHeadOffset = 0.0;
      this.isScrollHeadDragged = true;
    }
    didChangeDependencies() {
      this[_pdfViewerThemeData$] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
      this[_localizations] = global_localizations.SfLocalizations.of(this.context);
      super.didChangeDependencies();
    }
    dispose() {
      this[_pdfViewerThemeData$] = null;
      this[_localizations] = null;
      this[_focusNode].dispose();
      super.dispose();
    }
    build(context) {
      if (context == null) dart.nullFailed(I[2], 92, 29, "context");
      return new basic.Align.new({alignment: alignment$.Alignment.topRight, child: new gesture_detector.GestureDetector.new({onVerticalDragStart: dart.bind(this, _handleScrollHeadDragStart), onVerticalDragUpdate: dart.bind(this, _handleScrollHeadDragUpdate), onVerticalDragEnd: dart.bind(this, _handleScrollHeadDragEnd), onTap: dart.fn(() => {
            if (!true || true && dart.test(this.widget.isMobileWebView)) {
              this[_textFieldController].clear();
              if (!dart.test(focus_scope.FocusScope.of(context).hasPrimaryFocus)) {
                focus_scope.FocusScope.of(context).unfocus();
              }
              if (dart.test(this.widget.canShowPaginationDialog)) {
                this[_showPaginationDialog]();
              }
            }
          }, T.VoidTovoid()), child: new visibility.Visibility.new({visible: true ? dart.notNull(this.widget.pdfViewerController.pageCount) > 1 : dart.test(this.widget.canShowScrollHead) && dart.notNull(this.widget.pdfViewerController.pageCount) > 1, child: new scroll_head.ScrollHead.new(this.scrollHeadOffset, this.widget.pdfViewerController, this.widget.isMobileWebView, {$creationLocationd_0dea112b090073317d4: C[39] || CT.C39}), $creationLocationd_0dea112b090073317d4: C[44] || CT.C44}), $creationLocationd_0dea112b090073317d4: C[48] || CT.C48}), $creationLocationd_0dea112b090073317d4: C[55] || CT.C55});
    }
    [_clearSelection]() {
      return async.async(core.bool, (function* _clearSelection() {
        return this.widget.pdfViewerController.clearSelection();
      }).bind(this));
    }
    [_showPaginationDialog]() {
      return async.async(dart.void, (function* _showPaginationDialog() {
        yield this[_clearSelection]();
        return dialog.showDialog(dart.void, {context: this.context, barrierDismissible: true, builder: dart.fn(context => {
            if (context == null) dart.nullFailed(I[2], 132, 32, "context");
            let orientation = media_query.MediaQuery.of(context).orientation;
            return new dialog.AlertDialog.new({scrollable: true, insetPadding: new edge_insets.EdgeInsets.all(0.0), contentPadding: orientation == media_query.Orientation.portrait ? new edge_insets.EdgeInsets.all(24.0) : new edge_insets.EdgeInsets.only({top: 0.0, right: 24.0, left: 24.0, bottom: 0.0}), buttonPadding: orientation == media_query.Orientation.portrait ? new edge_insets.EdgeInsets.all(8.0) : new edge_insets.EdgeInsets.all(4.0), backgroundColor: dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.backgroundColor, title: new text.Text.new(dart.nullCheck(this[_localizations]).pdfGoToPageLabel, {style: dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.headerTextStyle, $creationLocationd_0dea112b090073317d4: C[59] || CT.C59}), shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(4.0))}), content: new single_child_scroll_view.SingleChildScrollView.new({child: this[_paginationTextField](), $creationLocationd_0dea112b090073317d4: C[63] || CT.C63}), actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => {
                    this[_textFieldController].clear();
                    navigator.Navigator.of(context).pop(T.ObjectN());
                  }, T.VoidTovoid()), child: new text.Text.new(dart.nullCheck(this[_localizations]).pdfPaginationDialogCancelLabel, {style: dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.cancelTextStyle).color == null ? dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.cancelTextStyle).copyWith({color: theme$.Theme.of(context).primaryColor}) : dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.cancelTextStyle, $creationLocationd_0dea112b090073317d4: C[66] || CT.C66}), $creationLocationd_0dea112b090073317d4: C[70] || CT.C70}), new text_button.TextButton.new({onPressed: dart.fn(() => {
                    this[_handlePageNumberValidation]();
                  }, T.VoidTovoid()), child: new text.Text.new(dart.nullCheck(this[_localizations]).pdfPaginationDialogOkLabel, {style: dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.okTextStyle).color == null ? dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.okTextStyle).copyWith({color: theme$.Theme.of(context).primaryColor}) : dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.okTextStyle, $creationLocationd_0dea112b090073317d4: C[74] || CT.C74}), $creationLocationd_0dea112b090073317d4: C[78] || CT.C78})]), $creationLocationd_0dea112b090073317d4: C[82] || CT.C82});
          }, T.BuildContextToAlertDialog())});
      }).bind(this));
    }
    [_paginationTextField]() {
      return new form.Form.new({key: this[_formKey], child: new container.Container.new({width: 328, child: new text_form_field.TextFormField.new({style: dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.inputFieldTextStyle, focusNode: this[_focusNode], decoration: new input_decorator.InputDecoration.new({isDense: true, focusedBorder: new input_border.UnderlineInputBorder.new({borderSide: new borders.BorderSide.new({color: theme$.Theme.of(this.context).primaryColor})}), contentPadding: C[93] || CT.C93, hintText: dart.nullCheck(this[_localizations]).pdfEnterPageNumberLabel, hintStyle: dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.hintTextStyle, counterText: dart.str(this.widget.pdfViewerController.pageNumber) + "/" + dart.str(this.widget.pdfViewerController.pageCount), counterStyle: dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.pageInfoTextStyle, errorStyle: dart.nullCheck(this[_pdfViewerThemeData$]).paginationDialogStyle.validationTextStyle}), keyboardType: text_input.TextInputType.number, enableInteractiveSelection: false, controller: this[_textFieldController], autofocus: true, onEditingComplete: dart.bind(this, _handlePageNumberValidation), onFieldSubmitted: dart.fn(value => {
              if (value == null) dart.nullFailed(I[2], 218, 37, "value");
              this[_handlePageNumberValidation]();
            }, T.StringTovoid()), validator: dart.fn(value => {
              try {
                if (value != null) {
                  let index = core.int.parse(value);
                  if (dart.notNull(index) <= 0 || dart.notNull(index) > dart.notNull(this.widget.pdfViewerController.pageCount)) {
                    this[_textFieldController].clear();
                    return dart.nullCheck(this[_localizations]).pdfInvalidPageNumberLabel;
                  }
                }
              } catch (e) {
                let ex = dart.getThrown(e);
                if (core.Exception.is(ex)) {
                  this[_textFieldController].clear();
                  return dart.nullCheck(this[_localizations]).pdfInvalidPageNumberLabel;
                } else
                  throw e;
              }
            }, T.StringNToStringN()), $creationLocationd_0dea112b090073317d4: C[94] || CT.C94}), $creationLocationd_0dea112b090073317d4: C[106] || CT.C106}), $creationLocationd_0dea112b090073317d4: C[110] || CT.C110});
    }
    [_handlePageNumberValidation]() {
      if (this[_formKey].currentState != null && dart.test(dart.nullCheck(this[_formKey].currentState).validate())) {
        let index = core.int.parse(this[_textFieldController].text);
        this[_textFieldController].clear();
        navigator.Navigator.of(this.context).pop(T.ObjectN());
        this.widget.pdfViewerController.jumpToPage(index);
      }
    }
    updateScrollHeadPosition(height, opts) {
      let t3;
      if (height == null) dart.nullFailed(I[2], 253, 40, "height");
      let maxScrollExtent = opts && 'maxScrollExtent' in opts ? opts.maxScrollExtent : null;
      if (dart.test(this.widget.scrollController.hasClients)) {
        if (dart.notNull(this.widget.scrollController.offset) > 0) {
          let positionRatio = dart.notNull(this.widget.scrollController.position.pixels) / dart.notNull((t3 = maxScrollExtent, t3 == null ? this.widget.scrollController.position.maxScrollExtent : t3));
          this.scrollHeadOffset = positionRatio * (dart.notNull(height) - (true ? 54 : 32));
        } else {
          this.scrollHeadOffset = 0.0;
        }
      }
    }
    [_handleScrollHeadDragStart](details) {
      if (details == null) dart.nullFailed(I[2], 272, 52, "details");
      this.isScrollHeadDragged = false;
    }
    [_handleScrollHeadDragUpdate](details) {
      if (details == null) dart.nullFailed(I[2], 277, 54, "details");
      let dragOffset = dart.notNull(details.delta.dy) + dart.notNull(this.scrollHeadOffset);
      let scrollHeadPosition = dart.notNull(this.widget.scrollController.position.viewportDimension) - (true ? 54 : 32);
      if (dragOffset < scrollHeadPosition && dragOffset >= 0) {
        this.widget.scrollController.jumpTo(dart.notNull(this.widget.scrollController.position.maxScrollExtent) * (dragOffset / scrollHeadPosition));
        this.scrollHeadOffset = dragOffset;
      } else {
        if (dragOffset < 0) {
          this.widget.scrollController.jumpTo(this.widget.scrollController.position.minScrollExtent);
          this.scrollHeadOffset = 0.0;
        } else {
          this.widget.scrollController.jumpTo(this.widget.scrollController.position.maxScrollExtent);
          this.scrollHeadOffset = scrollHeadPosition;
        }
      }
    }
    [_handleScrollHeadDragEnd](details) {
      if (details == null) dart.nullFailed(I[2], 311, 48, "details");
      this.isScrollHeadDragged = true;
      this.widget.onScrollHeadDragEnd();
    }
  };
  (scroll_head_overlay.ScrollHeadOverlayState.new = function() {
    this[_textFieldController] = new editable_text.TextEditingController.new();
    this[_formKey] = T.GlobalKeyOfFormState().new();
    this[_focusNode] = new focus_manager.FocusNode.new();
    this[_pdfViewerThemeData$] = null;
    this[_localizations] = null;
    this[__ScrollHeadOverlayState_scrollHeadOffset] = null;
    this[__ScrollHeadOverlayState_scrollHeadOffset_isSet] = false;
    this[isScrollHeadDragged] = false;
    scroll_head_overlay.ScrollHeadOverlayState.__proto__.new.call(this);
    ;
  }).prototype = scroll_head_overlay.ScrollHeadOverlayState.prototype;
  dart.addTypeTests(scroll_head_overlay.ScrollHeadOverlayState);
  dart.addTypeCaches(scroll_head_overlay.ScrollHeadOverlayState);
  dart.setMethodSignature(scroll_head_overlay.ScrollHeadOverlayState, () => ({
    __proto__: dart.getMethods(scroll_head_overlay.ScrollHeadOverlayState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_clearSelection]: dart.fnType(async.Future$(core.bool), []),
    [_showPaginationDialog]: dart.fnType(async.Future$(dart.void), []),
    [_paginationTextField]: dart.fnType(framework.Widget, []),
    [_handlePageNumberValidation]: dart.fnType(dart.void, []),
    updateScrollHeadPosition: dart.fnType(dart.void, [core.double], {maxScrollExtent: dart.nullable(core.double)}, {}),
    [_handleScrollHeadDragStart]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [_handleScrollHeadDragUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_handleScrollHeadDragEnd]: dart.fnType(dart.void, [drag_details.DragEndDetails])
  }));
  dart.setGetterSignature(scroll_head_overlay.ScrollHeadOverlayState, () => ({
    __proto__: dart.getGetters(scroll_head_overlay.ScrollHeadOverlayState.__proto__),
    scrollHeadOffset: core.double
  }));
  dart.setSetterSignature(scroll_head_overlay.ScrollHeadOverlayState, () => ({
    __proto__: dart.getSetters(scroll_head_overlay.ScrollHeadOverlayState.__proto__),
    scrollHeadOffset: core.double
  }));
  dart.setLibraryUri(scroll_head_overlay.ScrollHeadOverlayState, I[3]);
  dart.setFieldSignature(scroll_head_overlay.ScrollHeadOverlayState, () => ({
    __proto__: dart.getFields(scroll_head_overlay.ScrollHeadOverlayState.__proto__),
    [_textFieldController]: dart.finalFieldType(editable_text.TextEditingController),
    [_formKey]: dart.finalFieldType(framework.GlobalKey$(form.FormState)),
    [_focusNode]: dart.finalFieldType(focus_manager.FocusNode),
    [_pdfViewerThemeData$]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData)),
    [_localizations]: dart.fieldType(dart.nullable(global_localizations.SfLocalizations)),
    [__ScrollHeadOverlayState_scrollHeadOffset]: dart.fieldType(dart.nullable(core.double)),
    [__ScrollHeadOverlayState_scrollHeadOffset_isSet]: dart.fieldType(core.bool),
    isScrollHeadDragged: dart.fieldType(core.bool)
  }));
  dart.defineLazy(scroll_head_overlay, {
    /*scroll_head_overlay._kPdfScrollHeadHeight*/get _kPdfScrollHeadHeight() {
      return 32;
    },
    /*scroll_head_overlay._kPdfScrollBarHeight*/get _kPdfScrollBarHeight() {
      return 54;
    },
    /*scroll_head_overlay._kPdfPaginationTextFieldWidth*/get _kPdfPaginationTextFieldWidth() {
      return 328;
    }
  }, false);
  pdf_provider.PdfProvider = class PdfProvider extends core.Object {};
  (pdf_provider.PdfProvider.new = function() {
    ;
  }).prototype = pdf_provider.PdfProvider.prototype;
  dart.addTypeTests(pdf_provider.PdfProvider);
  dart.addTypeCaches(pdf_provider.PdfProvider);
  dart.setLibraryUri(pdf_provider.PdfProvider, I[4]);
  var __NetworkPdf__url = dart.privateName(pdf_provider, "_#NetworkPdf#_url");
  var __NetworkPdf__url_isSet = dart.privateName(pdf_provider, "_#NetworkPdf#_url#isSet");
  var _headers = dart.privateName(pdf_provider, "_headers");
  var _documentBytes = dart.privateName(pdf_provider, "_documentBytes");
  var _url = dart.privateName(pdf_provider, "_url");
  pdf_provider.NetworkPdf = class NetworkPdf extends pdf_provider.PdfProvider {
    get [_url]() {
      let t3;
      return dart.test(this[__NetworkPdf__url_isSet]) ? (t3 = this[__NetworkPdf__url], t3) : dart.throw(new _internal.LateError.fieldNI("_url"));
    }
    set [_url](t3) {
      if (t3 == null) dart.nullFailed(I[5], 40, 15, "null");
      this[__NetworkPdf__url_isSet] = true;
      this[__NetworkPdf__url] = t3;
    }
    getPdfBytes(context) {
      if (context == null) dart.nullFailed(I[5], 49, 46, "context");
      return async.async(typed_data.Uint8List, (function* getPdfBytes() {
        if (this[_documentBytes] == null) {
          try {
            this[_documentBytes] = (yield http.readBytes(core.Uri.parse(this[_url]), {headers: this[_headers]}));
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Exception.is(e)) {
              dart.throw(dart.toString(e));
            } else
              throw e$;
          }
        }
        return T.FutureOfUint8List().value(this[_documentBytes]);
      }).bind(this));
    }
  };
  (pdf_provider.NetworkPdf.new = function(url, headers) {
    if (url == null) dart.nullFailed(I[5], 33, 21, "url");
    this[__NetworkPdf__url] = null;
    this[__NetworkPdf__url_isSet] = false;
    this[_headers] = null;
    this[_documentBytes] = null;
    if (!url[$isNotEmpty]) dart.assertFailed(null, I[5], 34, 16, "url.isNotEmpty");
    pdf_provider.NetworkPdf.__proto__.new.call(this);
    this[_url] = url;
    this[_headers] = headers;
  }).prototype = pdf_provider.NetworkPdf.prototype;
  dart.addTypeTests(pdf_provider.NetworkPdf);
  dart.addTypeCaches(pdf_provider.NetworkPdf);
  dart.setMethodSignature(pdf_provider.NetworkPdf, () => ({
    __proto__: dart.getMethods(pdf_provider.NetworkPdf.__proto__),
    getPdfBytes: dart.fnType(async.Future$(typed_data.Uint8List), [framework.BuildContext])
  }));
  dart.setGetterSignature(pdf_provider.NetworkPdf, () => ({
    __proto__: dart.getGetters(pdf_provider.NetworkPdf.__proto__),
    [_url]: core.String
  }));
  dart.setSetterSignature(pdf_provider.NetworkPdf, () => ({
    __proto__: dart.getSetters(pdf_provider.NetworkPdf.__proto__),
    [_url]: core.String
  }));
  dart.setLibraryUri(pdf_provider.NetworkPdf, I[4]);
  dart.setFieldSignature(pdf_provider.NetworkPdf, () => ({
    __proto__: dart.getFields(pdf_provider.NetworkPdf.__proto__),
    [__NetworkPdf__url]: dart.fieldType(dart.nullable(core.String)),
    [__NetworkPdf__url_isSet]: dart.fieldType(core.bool),
    [_headers]: dart.fieldType(dart.nullable(core.Map$(core.String, core.String))),
    [_documentBytes]: dart.fieldType(dart.nullable(typed_data.Uint8List))
  }));
  var __MemoryPdf__pdfBytes = dart.privateName(pdf_provider, "_#MemoryPdf#_pdfBytes");
  var __MemoryPdf__pdfBytes_isSet = dart.privateName(pdf_provider, "_#MemoryPdf#_pdfBytes#isSet");
  var _pdfBytes = dart.privateName(pdf_provider, "_pdfBytes");
  pdf_provider.MemoryPdf = class MemoryPdf extends pdf_provider.PdfProvider {
    get [_pdfBytes]() {
      let t5;
      return dart.test(this[__MemoryPdf__pdfBytes_isSet]) ? (t5 = this[__MemoryPdf__pdfBytes], t5) : dart.throw(new _internal.LateError.fieldNI("_pdfBytes"));
    }
    set [_pdfBytes](t5) {
      if (t5 == null) dart.nullFailed(I[5], 78, 18, "null");
      this[__MemoryPdf__pdfBytes_isSet] = true;
      this[__MemoryPdf__pdfBytes] = t5;
    }
    getPdfBytes(context) {
      if (context == null) dart.nullFailed(I[5], 81, 46, "context");
      return async.async(typed_data.Uint8List, (function* getPdfBytes() {
        return T.FutureOfUint8List().value(this[_pdfBytes]);
      }).bind(this));
    }
  };
  (pdf_provider.MemoryPdf.new = function(bytes) {
    if (bytes == null) dart.nullFailed(I[5], 74, 23, "bytes");
    this[__MemoryPdf__pdfBytes] = null;
    this[__MemoryPdf__pdfBytes_isSet] = false;
    pdf_provider.MemoryPdf.__proto__.new.call(this);
    this[_pdfBytes] = bytes;
  }).prototype = pdf_provider.MemoryPdf.prototype;
  dart.addTypeTests(pdf_provider.MemoryPdf);
  dart.addTypeCaches(pdf_provider.MemoryPdf);
  dart.setMethodSignature(pdf_provider.MemoryPdf, () => ({
    __proto__: dart.getMethods(pdf_provider.MemoryPdf.__proto__),
    getPdfBytes: dart.fnType(async.Future$(typed_data.Uint8List), [framework.BuildContext])
  }));
  dart.setGetterSignature(pdf_provider.MemoryPdf, () => ({
    __proto__: dart.getGetters(pdf_provider.MemoryPdf.__proto__),
    [_pdfBytes]: typed_data.Uint8List
  }));
  dart.setSetterSignature(pdf_provider.MemoryPdf, () => ({
    __proto__: dart.getSetters(pdf_provider.MemoryPdf.__proto__),
    [_pdfBytes]: typed_data.Uint8List
  }));
  dart.setLibraryUri(pdf_provider.MemoryPdf, I[4]);
  dart.setFieldSignature(pdf_provider.MemoryPdf, () => ({
    __proto__: dart.getFields(pdf_provider.MemoryPdf.__proto__),
    [__MemoryPdf__pdfBytes]: dart.fieldType(dart.nullable(typed_data.Uint8List)),
    [__MemoryPdf__pdfBytes_isSet]: dart.fieldType(core.bool)
  }));
  var __AssetPdf__pdfPath = dart.privateName(pdf_provider, "_#AssetPdf#_pdfPath");
  var __AssetPdf__pdfPath_isSet = dart.privateName(pdf_provider, "_#AssetPdf#_pdfPath#isSet");
  var _bundle = dart.privateName(pdf_provider, "_bundle");
  var _pdfPath = dart.privateName(pdf_provider, "_pdfPath");
  pdf_provider.AssetPdf = class AssetPdf extends pdf_provider.PdfProvider {
    get [_pdfPath]() {
      let t6;
      return dart.test(this[__AssetPdf__pdfPath_isSet]) ? (t6 = this[__AssetPdf__pdfPath], t6) : dart.throw(new _internal.LateError.fieldNI("_pdfPath"));
    }
    set [_pdfPath](t6) {
      if (t6 == null) dart.nullFailed(I[5], 104, 15, "null");
      this[__AssetPdf__pdfPath_isSet] = true;
      this[__AssetPdf__pdfPath] = t6;
    }
    getPdfBytes(context) {
      if (context == null) dart.nullFailed(I[5], 109, 46, "context");
      return async.async(typed_data.Uint8List, (function* getPdfBytes() {
        if (this[_documentBytes] == null) {
          try {
            let bytes = (yield this[_bundle] != null ? dart.nullCheck(this[_bundle]).load(this[_pdfPath]) : basic.DefaultAssetBundle.of(context).load(this[_pdfPath]));
            this[_documentBytes] = bytes[$buffer][$asUint8List]();
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Exception.is(e)) {
              dart.throw(dart.toString(e));
            } else
              throw e$;
          }
        }
        return T.FutureOfUint8List().value(this[_documentBytes]);
      }).bind(this));
    }
  };
  (pdf_provider.AssetPdf.new = function(assetName, bundle) {
    if (assetName == null) dart.nullFailed(I[5], 98, 19, "assetName");
    this[__AssetPdf__pdfPath] = null;
    this[__AssetPdf__pdfPath_isSet] = false;
    this[_bundle] = null;
    this[_documentBytes] = null;
    if (!assetName[$isNotEmpty]) dart.assertFailed(null, I[5], 99, 16, "assetName.isNotEmpty");
    pdf_provider.AssetPdf.__proto__.new.call(this);
    this[_pdfPath] = assetName;
    this[_bundle] = bundle;
  }).prototype = pdf_provider.AssetPdf.prototype;
  dart.addTypeTests(pdf_provider.AssetPdf);
  dart.addTypeCaches(pdf_provider.AssetPdf);
  dart.setMethodSignature(pdf_provider.AssetPdf, () => ({
    __proto__: dart.getMethods(pdf_provider.AssetPdf.__proto__),
    getPdfBytes: dart.fnType(async.Future$(typed_data.Uint8List), [framework.BuildContext])
  }));
  dart.setGetterSignature(pdf_provider.AssetPdf, () => ({
    __proto__: dart.getGetters(pdf_provider.AssetPdf.__proto__),
    [_pdfPath]: core.String
  }));
  dart.setSetterSignature(pdf_provider.AssetPdf, () => ({
    __proto__: dart.getSetters(pdf_provider.AssetPdf.__proto__),
    [_pdfPath]: core.String
  }));
  dart.setLibraryUri(pdf_provider.AssetPdf, I[4]);
  dart.setFieldSignature(pdf_provider.AssetPdf, () => ({
    __proto__: dart.getFields(pdf_provider.AssetPdf.__proto__),
    [__AssetPdf__pdfPath]: dart.fieldType(dart.nullable(core.String)),
    [__AssetPdf__pdfPath_isSet]: dart.fieldType(core.bool),
    [_bundle]: dart.fieldType(dart.nullable(asset_bundle.AssetBundle)),
    [_documentBytes]: dart.fieldType(dart.nullable(typed_data.Uint8List))
  }));
  var __FilePdf__file = dart.privateName(pdf_provider, "_#FilePdf#_file");
  var __FilePdf__file_isSet = dart.privateName(pdf_provider, "_#FilePdf#_file#isSet");
  var _file = dart.privateName(pdf_provider, "_file");
  pdf_provider.FilePdf = class FilePdf extends pdf_provider.PdfProvider {
    get [_file]() {
      let t8;
      return dart.test(this[__FilePdf__file_isSet]) ? (t8 = this[__FilePdf__file], t8) : dart.throw(new _internal.LateError.fieldNI("_file"));
    }
    set [_file](t8) {
      if (t8 == null) dart.nullFailed(I[5], 137, 13, "null");
      this[__FilePdf__file_isSet] = true;
      this[__FilePdf__file] = t8;
    }
    getPdfBytes(context) {
      if (context == null) dart.nullFailed(I[5], 143, 46, "context");
      return async.async(typed_data.Uint8List, (function* getPdfBytes() {
        if (this[_documentBytes] == null) {
          try {
            this[_documentBytes] = (yield this[_file].readAsBytes());
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Exception.is(e)) {
              dart.throw(dart.toString(e));
            } else
              throw e$;
          }
        }
        return T.FutureOfUint8List().value(this[_documentBytes]);
      }).bind(this));
    }
  };
  (pdf_provider.FilePdf.new = function(file) {
    if (file == null) dart.nullFailed(I[5], 133, 16, "file");
    this[__FilePdf__file] = null;
    this[__FilePdf__file_isSet] = false;
    this[_documentBytes] = null;
    pdf_provider.FilePdf.__proto__.new.call(this);
    this[_file] = file;
  }).prototype = pdf_provider.FilePdf.prototype;
  dart.addTypeTests(pdf_provider.FilePdf);
  dart.addTypeCaches(pdf_provider.FilePdf);
  dart.setMethodSignature(pdf_provider.FilePdf, () => ({
    __proto__: dart.getMethods(pdf_provider.FilePdf.__proto__),
    getPdfBytes: dart.fnType(async.Future$(typed_data.Uint8List), [framework.BuildContext])
  }));
  dart.setGetterSignature(pdf_provider.FilePdf, () => ({
    __proto__: dart.getGetters(pdf_provider.FilePdf.__proto__),
    [_file]: io.File
  }));
  dart.setSetterSignature(pdf_provider.FilePdf, () => ({
    __proto__: dart.getSetters(pdf_provider.FilePdf.__proto__),
    [_file]: io.File
  }));
  dart.setLibraryUri(pdf_provider.FilePdf, I[4]);
  dart.setFieldSignature(pdf_provider.FilePdf, () => ({
    __proto__: dart.getFields(pdf_provider.FilePdf.__proto__),
    [__FilePdf__file]: dart.fieldType(dart.nullable(io.File)),
    [__FilePdf__file_isSet]: dart.fieldType(core.bool),
    [_documentBytes]: dart.fieldType(dart.nullable(typed_data.Uint8List))
  }));
  var controller$ = dart.privateName(bookmark_view, "BookmarkView.controller");
  var pdfDocument$ = dart.privateName(bookmark_view, "BookmarkView.pdfDocument");
  bookmark_view.BookmarkView = class BookmarkView extends framework.StatefulWidget {
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
    get pdfDocument() {
      return this[pdfDocument$];
    }
    set pdfDocument(value) {
      super.pdfDocument = value;
    }
    createState() {
      return new bookmark_view.BookmarkViewControllerState.new();
    }
  };
  (bookmark_view.BookmarkView.new = function(key, pdfDocument, controller, opts) {
    if (key == null) dart.nullFailed(I[6], 24, 20, "key");
    if (controller == null) dart.nullFailed(I[6], 24, 48, "controller");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[pdfDocument$] = pdfDocument;
    this[controller$] = controller;
    bookmark_view.BookmarkView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bookmark_view.BookmarkView.prototype;
  dart.addTypeTests(bookmark_view.BookmarkView);
  dart.addTypeCaches(bookmark_view.BookmarkView);
  dart.setMethodSignature(bookmark_view.BookmarkView, () => ({
    __proto__: dart.getMethods(bookmark_view.BookmarkView.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(bookmark_view.BookmarkView, I[7]);
  dart.setFieldSignature(bookmark_view.BookmarkView, () => ({
    __proto__: dart.getFields(bookmark_view.BookmarkView.__proto__),
    controller: dart.finalFieldType(pdfviewer.PdfViewerController),
    pdfDocument: dart.finalFieldType(dart.nullable(pdf.PdfDocument))
  }));
  var showBookmark = dart.privateName(bookmark_view, "BookmarkViewControllerState.showBookmark");
  var _bookmarkList = dart.privateName(bookmark_view, "_bookmarkList");
  var _bookmarkBase = dart.privateName(bookmark_view, "_bookmarkBase");
  var _parentBookmark = dart.privateName(bookmark_view, "_parentBookmark");
  var _childBookmark = dart.privateName(bookmark_view, "_childBookmark");
  var _isExpanded = dart.privateName(bookmark_view, "_isExpanded");
  var _totalWidth = dart.privateName(bookmark_view, "_totalWidth");
  var _isTablet = dart.privateName(bookmark_view, "_isTablet");
  var _listCount = dart.privateName(bookmark_view, "_listCount");
  var _historyEntry = dart.privateName(bookmark_view, "_historyEntry");
  var _pdfViewerThemeData$0 = dart.privateName(bookmark_view, "_pdfViewerThemeData");
  var _localizations$ = dart.privateName(bookmark_view, "_localizations");
  var _handleHistoryEntryRemoved = dart.privateName(bookmark_view, "_handleHistoryEntryRemoved");
  var _ensureHistoryEntry = dart.privateName(bookmark_view, "_ensureHistoryEntry");
  var _handleClose = dart.privateName(bookmark_view, "_handleClose");
  var _populateBookmarkList = dart.privateName(bookmark_view, "_populateBookmarkList");
  var _findDevice = dart.privateName(bookmark_view, "_findDevice");
  var _handleBackPress = dart.privateName(bookmark_view, "_handleBackPress");
  var _handleExpandPress = dart.privateName(bookmark_view, "_handleExpandPress");
  bookmark_view.BookmarkViewControllerState = class BookmarkViewControllerState extends framework.State$(bookmark_view.BookmarkView) {
    get showBookmark() {
      return this[showBookmark];
    }
    set showBookmark(value) {
      this[showBookmark] = value;
    }
    didChangeDependencies() {
      this[_pdfViewerThemeData$0] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
      this[_localizations$] = global_localizations.SfLocalizations.of(this.context);
      super.didChangeDependencies();
    }
    dispose() {
      dart.nullCheck(this[_bookmarkList])[$clear]();
      this[_bookmarkList] = null;
      this[_pdfViewerThemeData$0] = null;
      this[_localizations$] = null;
      super.dispose();
    }
    [_ensureHistoryEntry]() {
      if (this[_historyEntry] == null) {
        let route = routes.ModalRoute.of(T.ObjectN(), this.context);
        if (route != null) {
          this[_historyEntry] = new routes.LocalHistoryEntry.new({onRemove: dart.bind(this, _handleHistoryEntryRemoved)});
          route.addLocalHistoryEntry(dart.nullCheck(this[_historyEntry]));
        }
      }
    }
    [_handleHistoryEntryRemoved]() {
      this[_historyEntry] = null;
      this[_handleClose]();
    }
    open() {
      this[_ensureHistoryEntry]();
      if (!dart.test(this.showBookmark) && this.widget.pdfDocument != null) {
        this[_bookmarkBase] = dart.nullCheck(this.widget.pdfDocument).bookmarks;
        this[_bookmarkList] = this[_populateBookmarkList]();
      }
      this.setState(dart.fn(() => {
        this.showBookmark = true;
      }, T.VoidTovoid()));
    }
    [_handleClose]() {
      return async.async(dart.void, (function* _handleClose() {
        this.widget.controller.clearSelection();
        if (dart.test(this.showBookmark)) {
          this.setState(dart.fn(() => {
            this[_isExpanded] = false;
            this.showBookmark = false;
          }, T.VoidTovoid()));
          if (this[_historyEntry] != null && dart.test(navigator.Navigator.canPop(this.context))) {
            yield navigator.Navigator.of(this.context).maybePop(T.ObjectN());
          }
        }
      }).bind(this));
    }
    [_findDevice](context) {
      if (context == null) dart.nullFailed(I[6], 114, 33, "context");
      this[_totalWidth] = media_query.MediaQuery.of(context).size.width;
      let size = media_query.MediaQuery.of(context).size;
      let diagonal = math.sqrt(dart.notNull(size.width) * dart.notNull(size.width) + dart.notNull(size.height) * dart.notNull(size.height));
      this[_isTablet] = true && !(diagonal < 1100) ? true : diagonal > 1100;
    }
    [_handleBackPress]() {
      this.setState(dart.fn(() => {
        if (dart.equals(this[_childBookmark], this[_parentBookmark])) {
          this[_isExpanded] = false;
          this[_populateBookmarkList]();
        } else {
          this[_childBookmark] = this[_parentBookmark];
          this[_populateBookmarkList]();
        }
      }, T.VoidTovoid()));
    }
    [_handleExpandPress](index) {
      if (index == null) dart.nullFailed(I[6], 136, 31, "index");
      this.setState(dart.fn(() => {
        this[_parentBookmark] = dart.test(this[_isExpanded]) ? this[_childBookmark] : dart.nullCheck(this[_bookmarkBase])._get(index);
        this[_childBookmark] = dart.test(this[_isExpanded]) ? dart.nullCheck(this[_childBookmark])._get(index) : dart.nullCheck(this[_bookmarkBase])._get(index);
        this[_isExpanded] = true;
        this[_populateBookmarkList]();
      }, T.VoidTovoid()));
    }
    [_populateBookmarkList]() {
      let t10, t10$, t10$0, t10$1;
      t10 = this[_bookmarkList];
      t10 == null ? null : t10[$clear]();
      if (dart.test(this[_isExpanded])) {
        t10$ = this[_bookmarkList];
        t10$ == null ? null : t10$[$add](new bookmark_item.BookmarkItem.new({title: dart.nullCheck(this[_childBookmark]).title, isBackIconVisible: true, textPosition: 55, onBackPressed: dart.bind(this, _handleBackPress), isMobileWebView: !dart.test(this[_isTablet]), onNavigate: dart.fn(() => {
            this.widget.controller.jumpToBookmark(dart.nullCheck(this[_childBookmark]));
            this[_handleClose]();
          }, T.VoidTovoid()), isBorderEnabled: true, onExpandPressed: dart.fn(() => {
          }, T.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[114] || CT.C114}));
      }
      let bookmarkListCount = dart.test(this[_isExpanded]) ? dart.nullCheck(this[_childBookmark]).count : dart.nullCheck(this[_bookmarkBase]).count;
      for (let i = 0; i < dart.notNull(bookmarkListCount); i = i + 1) {
        let bookmarkItem = new bookmark_item.BookmarkItem.new({title: dart.test(this[_isExpanded]) ? dart.nullCheck(this[_childBookmark])._get(i).title : dart.nullCheck(this[_bookmarkBase])._get(i).title, isMobileWebView: !dart.test(this[_isTablet]), isExpandIconVisible: dart.test(this[_isExpanded]) ? dart.nullCheck(this[_childBookmark])._get(i).count !== 0 : dart.nullCheck(this[_bookmarkBase])._get(i).count !== 0, onNavigate: dart.fn(() => {
            let bookmark = dart.test(this[_isExpanded]) ? dart.nullCheck(this[_childBookmark])._get(i) : dart.nullCheck(this[_bookmarkBase])._get(i);
            this.widget.controller.jumpToBookmark(bookmark);
            this[_handleClose]();
          }, T.VoidTovoid()), onExpandPressed: dart.fn(() => {
            this[_handleExpandPress](i);
          }, T.VoidTovoid()), onBackPressed: dart.fn(() => {
          }, T.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[124] || CT.C124});
        t10$0 = this[_bookmarkList];
        t10$0 == null ? null : t10$0[$add](bookmarkItem);
      }
      this[_listCount] = dart.test(this[_isExpanded]) ? dart.notNull(bookmarkListCount) + 1 : (t10$1 = this[_bookmarkBase], t10$1 == null ? null : t10$1.count);
      return dart.nullCheck(this[_bookmarkList]);
    }
    build(context) {
      if (context == null) dart.nullFailed(I[6], 190, 29, "context");
      this[_findDevice](context);
      let hasBookmark = this.widget.pdfDocument != null && dart.notNull(dart.nullCheck(this.widget.pdfDocument).bookmarks.count) > 0 ? true : false;
      return new visibility.Visibility.new({visible: this.showBookmark, child: new basic.Stack.new({children: T.JSArrayOfWidget().of([new visibility.Visibility.new({visible: this[_isTablet], child: new gesture_detector.GestureDetector.new({onTap: dart.bind(this, _handleClose), child: new container.Container.new({color: colors.Colors.black.withOpacity(0.3), $creationLocationd_0dea112b090073317d4: C[132] || CT.C132}), $creationLocationd_0dea112b090073317d4: C[135] || CT.C135}), $creationLocationd_0dea112b090073317d4: C[139] || CT.C139}), new basic.Align.new({alignment: dart.test(this[_isTablet]) ? alignment$.Alignment.topRight : alignment$.Alignment.center, child: new container.Container.new({color: dart.nullCheck(this[_pdfViewerThemeData$0]).bookmarkViewStyle.backgroundColor, width: dart.test(this[_isTablet]) ? 400 : this[_totalWidth], child: new basic.Column.new({children: T.JSArrayOfWidget().of([new bookmark_toolbar.BookmarkToolbar.new(dart.bind(this, _handleClose), {$creationLocationd_0dea112b090073317d4: C[143] || CT.C143}), new basic.Expanded.new({child: hasBookmark ? new scroll_view.ListView.builder({itemCount: this[_listCount], itemBuilder: dart.fn((context, index) => {
                          if (context == null) dart.nullFailed(I[6], 219, 52, "context");
                          if (index == null) dart.nullFailed(I[6], 219, 65, "index");
                          return dart.nullCheck(this[_bookmarkList])[$_get](index);
                        }, T.BuildContextAndintToBookmarkItem()), $creationLocationd_0dea112b090073317d4: C[146] || CT.C146}) : new basic.Center.new({child: new text.Text.new(dart.nullCheck(this[_localizations$]).pdfNoBookmarksLabel, {style: dart.nullCheck(this[_pdfViewerThemeData$0]).bookmarkViewStyle.titleTextStyle, $creationLocationd_0dea112b090073317d4: C[150] || CT.C150}), $creationLocationd_0dea112b090073317d4: C[154] || CT.C154}), $creationLocationd_0dea112b090073317d4: C[157] || CT.C157})]), $creationLocationd_0dea112b090073317d4: C[160] || CT.C160}), $creationLocationd_0dea112b090073317d4: C[163] || CT.C163}), $creationLocationd_0dea112b090073317d4: C[168] || CT.C168})]), $creationLocationd_0dea112b090073317d4: C[172] || CT.C172}), $creationLocationd_0dea112b090073317d4: C[175] || CT.C175});
    }
  };
  (bookmark_view.BookmarkViewControllerState.new = function() {
    this[_bookmarkList] = T.JSArrayOfBookmarkItem().of([]);
    this[_bookmarkBase] = null;
    this[_parentBookmark] = null;
    this[_childBookmark] = null;
    this[_isExpanded] = false;
    this[_totalWidth] = null;
    this[_isTablet] = false;
    this[_listCount] = null;
    this[_historyEntry] = null;
    this[_pdfViewerThemeData$0] = null;
    this[_localizations$] = null;
    this[showBookmark] = false;
    bookmark_view.BookmarkViewControllerState.__proto__.new.call(this);
    ;
  }).prototype = bookmark_view.BookmarkViewControllerState.prototype;
  dart.addTypeTests(bookmark_view.BookmarkViewControllerState);
  dart.addTypeCaches(bookmark_view.BookmarkViewControllerState);
  dart.setMethodSignature(bookmark_view.BookmarkViewControllerState, () => ({
    __proto__: dart.getMethods(bookmark_view.BookmarkViewControllerState.__proto__),
    [_ensureHistoryEntry]: dart.fnType(dart.void, []),
    [_handleHistoryEntryRemoved]: dart.fnType(dart.void, []),
    open: dart.fnType(dart.void, []),
    [_handleClose]: dart.fnType(async.Future$(dart.void), []),
    [_findDevice]: dart.fnType(dart.void, [framework.BuildContext]),
    [_handleBackPress]: dart.fnType(dart.void, []),
    [_handleExpandPress]: dart.fnType(dart.void, [core.int]),
    [_populateBookmarkList]: dart.fnType(core.List$(bookmark_item.BookmarkItem), []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(bookmark_view.BookmarkViewControllerState, I[7]);
  dart.setFieldSignature(bookmark_view.BookmarkViewControllerState, () => ({
    __proto__: dart.getFields(bookmark_view.BookmarkViewControllerState.__proto__),
    [_bookmarkList]: dart.fieldType(dart.nullable(core.List$(bookmark_item.BookmarkItem))),
    [_bookmarkBase]: dart.fieldType(dart.nullable(pdf.PdfBookmarkBase)),
    [_parentBookmark]: dart.fieldType(dart.nullable(pdf.PdfBookmark)),
    [_childBookmark]: dart.fieldType(dart.nullable(pdf.PdfBookmark)),
    [_isExpanded]: dart.fieldType(core.bool),
    [_totalWidth]: dart.fieldType(dart.nullable(core.double)),
    [_isTablet]: dart.fieldType(core.bool),
    [_listCount]: dart.fieldType(dart.nullable(core.int)),
    [_historyEntry]: dart.fieldType(dart.nullable(routes.LocalHistoryEntry)),
    [_pdfViewerThemeData$0]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData)),
    [_localizations$]: dart.fieldType(dart.nullable(global_localizations.SfLocalizations)),
    showBookmark: dart.fieldType(core.bool)
  }));
  dart.defineLazy(bookmark_view, {
    /*bookmark_view._kPdfTabletBookmarkWidth*/get _kPdfTabletBookmarkWidth() {
      return 400;
    },
    /*bookmark_view._kPdfStandardDiagonalOffset*/get _kPdfStandardDiagonalOffset() {
      return 1100;
    },
    /*bookmark_view._kPdfSubBookmarkTitlePosition*/get _kPdfSubBookmarkTitlePosition() {
      return 55;
    }
  }, false);
  var pdfViewerController$1 = dart.privateName(scroll_status, "ScrollStatus.pdfViewerController");
  scroll_status.ScrollStatus = class ScrollStatus extends framework.StatefulWidget {
    get pdfViewerController() {
      return this[pdfViewerController$1];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    createState() {
      return new scroll_status._ScrollStatusState.new();
    }
  };
  (scroll_status.ScrollStatus.new = function(pdfViewerController, opts) {
    if (pdfViewerController == null) dart.nullFailed(I[8], 13, 21, "pdfViewerController");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[pdfViewerController$1] = pdfViewerController;
    scroll_status.ScrollStatus.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_status.ScrollStatus.prototype;
  dart.addTypeTests(scroll_status.ScrollStatus);
  dart.addTypeCaches(scroll_status.ScrollStatus);
  dart.setMethodSignature(scroll_status.ScrollStatus, () => ({
    __proto__: dart.getMethods(scroll_status.ScrollStatus.__proto__),
    createState: dart.fnType(scroll_status._ScrollStatusState, [])
  }));
  dart.setLibraryUri(scroll_status.ScrollStatus, I[9]);
  dart.setFieldSignature(scroll_status.ScrollStatus, () => ({
    __proto__: dart.getFields(scroll_status.ScrollStatus.__proto__),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController)
  }));
  var _pdfViewerThemeData$1 = dart.privateName(scroll_status, "_pdfViewerThemeData");
  var _localizations$0 = dart.privateName(scroll_status, "_localizations");
  scroll_status._ScrollStatusState = class _ScrollStatusState extends framework.State$(scroll_status.ScrollStatus) {
    didChangeDependencies() {
      this[_pdfViewerThemeData$1] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
      this[_localizations$0] = global_localizations.SfLocalizations.of(this.context);
      super.didChangeDependencies();
    }
    dispose() {
      this[_pdfViewerThemeData$1] = null;
      this[_localizations$0] = null;
      super.dispose();
    }
    build(context) {
      if (context == null) dart.nullFailed(I[8], 42, 29, "context");
      return new basic.Positioned.fill({bottom: 25, child: new basic.Align.new({alignment: alignment$.Alignment.bottomCenter, child: new basic.Flex.new({direction: basic_types.Axis.horizontal, mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new container.Container.new({padding: new edge_insets.EdgeInsets.only({left: 16.0, top: 6.0, right: 16.0, bottom: 6.0}), constraints: new box.BoxConstraints.new({maxWidth: dart.notNull(media_query.MediaQuery.of(context).size.width) * 0.7}), decoration: new box_decoration.BoxDecoration.new({color: dart.nullCheck(this[_pdfViewerThemeData$1]).scrollStatusStyle.backgroundColor, borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(16.0))}), child: new text.Text.new(dart.str(this.widget.pdfViewerController.pageNumber) + " " + dart.str(dart.nullCheck(this[_localizations$0]).pdfScrollStatusOfLabel) + " " + dart.str(this.widget.pdfViewerController.pageCount), {textAlign: ui.TextAlign.center, style: dart.nullCheck(this[_pdfViewerThemeData$1]).scrollStatusStyle.pageInfoTextStyle, $creationLocationd_0dea112b090073317d4: C[179] || CT.C179}), $creationLocationd_0dea112b090073317d4: C[184] || CT.C184})]), $creationLocationd_0dea112b090073317d4: C[190] || CT.C190}), $creationLocationd_0dea112b090073317d4: C[195] || CT.C195}), $creationLocationd_0dea112b090073317d4: C[199] || CT.C199});
    }
  };
  (scroll_status._ScrollStatusState.new = function() {
    this[_pdfViewerThemeData$1] = null;
    this[_localizations$0] = null;
    scroll_status._ScrollStatusState.__proto__.new.call(this);
    ;
  }).prototype = scroll_status._ScrollStatusState.prototype;
  dart.addTypeTests(scroll_status._ScrollStatusState);
  dart.addTypeCaches(scroll_status._ScrollStatusState);
  dart.setMethodSignature(scroll_status._ScrollStatusState, () => ({
    __proto__: dart.getMethods(scroll_status._ScrollStatusState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scroll_status._ScrollStatusState, I[9]);
  dart.setFieldSignature(scroll_status._ScrollStatusState, () => ({
    __proto__: dart.getFields(scroll_status._ScrollStatusState.__proto__),
    [_pdfViewerThemeData$1]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData)),
    [_localizations$0]: dart.fieldType(dart.nullable(global_localizations.SfLocalizations))
  }));
  dart.defineLazy(scroll_status, {
    /*scroll_status._kPdfScrollStatusBottomPosition*/get _kPdfScrollStatusBottomPosition() {
      return 25;
    }
  }, false);
  var height$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.height");
  var enableDocumentLinkNavigation$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.enableDocumentLinkNavigation");
  var width$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.width");
  var pdfDocument$0 = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.pdfDocument");
  var pageIndex$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.pageIndex");
  var pdfPages$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.pdfPages");
  var scrollController$0 = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.scrollController");
  var pdfViewerController$2 = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.pdfViewerController");
  var enableTextSelection$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.enableTextSelection");
  var onTextSelectionDragStarted$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.onTextSelectionDragStarted");
  var onTextSelectionDragEnded$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.onTextSelectionDragEnded");
  var onTextSelectionChanged$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.onTextSelectionChanged");
  var searchTextHighlightColor$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.searchTextHighlightColor");
  var textCollection$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.textCollection");
  var pdfTextSearchResult$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.pdfTextSearchResult");
  var onDocumentLinkNavigationInvoked$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.onDocumentLinkNavigationInvoked");
  var interactionMode$ = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.interactionMode");
  var isMobileWebView$1 = dart.privateName(pdfviewer_canvas, "PdfViewerCanvas.isMobileWebView");
  pdfviewer_canvas.PdfViewerCanvas = class PdfViewerCanvas extends framework.LeafRenderObjectWidget {
    get height() {
      return this[height$];
    }
    set height(value) {
      super.height = value;
    }
    get enableDocumentLinkNavigation() {
      return this[enableDocumentLinkNavigation$];
    }
    set enableDocumentLinkNavigation(value) {
      super.enableDocumentLinkNavigation = value;
    }
    get width() {
      return this[width$];
    }
    set width(value) {
      super.width = value;
    }
    get pdfDocument() {
      return this[pdfDocument$0];
    }
    set pdfDocument(value) {
      super.pdfDocument = value;
    }
    get pageIndex() {
      return this[pageIndex$];
    }
    set pageIndex(value) {
      super.pageIndex = value;
    }
    get pdfPages() {
      return this[pdfPages$];
    }
    set pdfPages(value) {
      super.pdfPages = value;
    }
    get scrollController() {
      return this[scrollController$0];
    }
    set scrollController(value) {
      super.scrollController = value;
    }
    get pdfViewerController() {
      return this[pdfViewerController$2];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    get enableTextSelection() {
      return this[enableTextSelection$];
    }
    set enableTextSelection(value) {
      super.enableTextSelection = value;
    }
    get onTextSelectionDragStarted() {
      return this[onTextSelectionDragStarted$];
    }
    set onTextSelectionDragStarted(value) {
      super.onTextSelectionDragStarted = value;
    }
    get onTextSelectionDragEnded() {
      return this[onTextSelectionDragEnded$];
    }
    set onTextSelectionDragEnded(value) {
      super.onTextSelectionDragEnded = value;
    }
    get onTextSelectionChanged() {
      return this[onTextSelectionChanged$];
    }
    set onTextSelectionChanged(value) {
      super.onTextSelectionChanged = value;
    }
    get searchTextHighlightColor() {
      return this[searchTextHighlightColor$];
    }
    set searchTextHighlightColor(value) {
      super.searchTextHighlightColor = value;
    }
    get textCollection() {
      return this[textCollection$];
    }
    set textCollection(value) {
      super.textCollection = value;
    }
    get pdfTextSearchResult() {
      return this[pdfTextSearchResult$];
    }
    set pdfTextSearchResult(value) {
      super.pdfTextSearchResult = value;
    }
    get onDocumentLinkNavigationInvoked() {
      return this[onDocumentLinkNavigationInvoked$];
    }
    set onDocumentLinkNavigationInvoked(value) {
      super.onDocumentLinkNavigationInvoked = value;
    }
    get interactionMode() {
      return this[interactionMode$];
    }
    set interactionMode(value) {
      super.interactionMode = value;
    }
    get isMobileWebView() {
      return this[isMobileWebView$1];
    }
    set isMobileWebView(value) {
      super.isMobileWebView = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[10], 97, 48, "context");
      return new pdfviewer_canvas.CanvasRenderBox.new(this.height, this.width, context, this.pdfDocument, this.pdfPages, this.pageIndex, this.interactionMode, this.scrollController, this.pdfViewerController, this.enableDocumentLinkNavigation, this.enableTextSelection, this.onTextSelectionChanged, this.onTextSelectionDragStarted, this.onTextSelectionDragEnded, this.onDocumentLinkNavigationInvoked, this.textCollection, this.searchTextHighlightColor, this.isMobileWebView, this.pdfTextSearchResult);
    }
    updateRenderObject(context, renderObject) {
      let t10;
      if (context == null) dart.nullFailed(I[10], 121, 40, "context");
      pdfviewer_canvas.CanvasRenderBox.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[10], 121, 65, "renderObject");
      t10 = renderObject;
      (() => {
        t10.height = this.height;
        t10.width = this.width;
        t10.pageIndex = this.pageIndex;
        t10.textCollection = this.textCollection;
        t10.interactionMode = this.interactionMode;
        t10.searchTextHighlightColor = this.searchTextHighlightColor;
        t10.pdfTextSearchResult = this.pdfTextSearchResult;
        return t10;
      })();
      renderObject.markNeedsPaint();
      super.updateRenderObject(context, renderObject);
    }
  };
  (pdfviewer_canvas.PdfViewerCanvas.new = function(key, height, width, pdfDocument, pageIndex, pdfPages, interactionMode, scrollController, pdfViewerController, enableDocumentLinkNavigation, enableTextSelection, onTextSelectionChanged, onTextSelectionDragStarted, onTextSelectionDragEnded, onDocumentLinkNavigationInvoked, textCollection, searchTextHighlightColor, pdfTextSearchResult, isMobileWebView, opts) {
    if (key == null) dart.nullFailed(I[10], 21, 11, "key");
    if (height == null) dart.nullFailed(I[10], 22, 12, "height");
    if (width == null) dart.nullFailed(I[10], 23, 12, "width");
    if (pageIndex == null) dart.nullFailed(I[10], 25, 12, "pageIndex");
    if (pdfPages == null) dart.nullFailed(I[10], 26, 12, "pdfPages");
    if (interactionMode == null) dart.nullFailed(I[10], 27, 12, "interactionMode");
    if (scrollController == null) dart.nullFailed(I[10], 28, 12, "scrollController");
    if (pdfViewerController == null) dart.nullFailed(I[10], 29, 12, "pdfViewerController");
    if (enableDocumentLinkNavigation == null) dart.nullFailed(I[10], 30, 12, "enableDocumentLinkNavigation");
    if (enableTextSelection == null) dart.nullFailed(I[10], 31, 12, "enableTextSelection");
    if (onTextSelectionDragStarted == null) dart.nullFailed(I[10], 33, 12, "onTextSelectionDragStarted");
    if (onTextSelectionDragEnded == null) dart.nullFailed(I[10], 34, 12, "onTextSelectionDragEnded");
    if (onDocumentLinkNavigationInvoked == null) dart.nullFailed(I[10], 35, 12, "onDocumentLinkNavigationInvoked");
    if (searchTextHighlightColor == null) dart.nullFailed(I[10], 37, 12, "searchTextHighlightColor");
    if (pdfTextSearchResult == null) dart.nullFailed(I[10], 38, 12, "pdfTextSearchResult");
    if (isMobileWebView == null) dart.nullFailed(I[10], 39, 12, "isMobileWebView");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[height$] = height;
    this[width$] = width;
    this[pdfDocument$0] = pdfDocument;
    this[pageIndex$] = pageIndex;
    this[pdfPages$] = pdfPages;
    this[interactionMode$] = interactionMode;
    this[scrollController$0] = scrollController;
    this[pdfViewerController$2] = pdfViewerController;
    this[enableDocumentLinkNavigation$] = enableDocumentLinkNavigation;
    this[enableTextSelection$] = enableTextSelection;
    this[onTextSelectionChanged$] = onTextSelectionChanged;
    this[onTextSelectionDragStarted$] = onTextSelectionDragStarted;
    this[onTextSelectionDragEnded$] = onTextSelectionDragEnded;
    this[onDocumentLinkNavigationInvoked$] = onDocumentLinkNavigationInvoked;
    this[textCollection$] = textCollection;
    this[searchTextHighlightColor$] = searchTextHighlightColor;
    this[pdfTextSearchResult$] = pdfTextSearchResult;
    this[isMobileWebView$1] = isMobileWebView;
    pdfviewer_canvas.PdfViewerCanvas.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdfviewer_canvas.PdfViewerCanvas.prototype;
  dart.addTypeTests(pdfviewer_canvas.PdfViewerCanvas);
  dart.addTypeCaches(pdfviewer_canvas.PdfViewerCanvas);
  dart.setMethodSignature(pdfviewer_canvas.PdfViewerCanvas, () => ({
    __proto__: dart.getMethods(pdfviewer_canvas.PdfViewerCanvas.__proto__),
    createRenderObject: dart.fnType(object.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(pdfviewer_canvas.PdfViewerCanvas, I[11]);
  dart.setFieldSignature(pdfviewer_canvas.PdfViewerCanvas, () => ({
    __proto__: dart.getFields(pdfviewer_canvas.PdfViewerCanvas.__proto__),
    height: dart.finalFieldType(core.double),
    enableDocumentLinkNavigation: dart.finalFieldType(core.bool),
    width: dart.finalFieldType(core.double),
    pdfDocument: dart.finalFieldType(dart.nullable(pdf.PdfDocument)),
    pageIndex: dart.finalFieldType(core.int),
    pdfPages: dart.finalFieldType(core.Map$(core.int, pdf_page_view.PdfPageInfo)),
    scrollController: dart.finalFieldType(scroll_controller.ScrollController),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController),
    enableTextSelection: dart.finalFieldType(core.bool),
    onTextSelectionDragStarted: dart.finalFieldType(dart.fnType(dart.void, [])),
    onTextSelectionDragEnded: dart.finalFieldType(dart.fnType(dart.void, [])),
    onTextSelectionChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails]))),
    searchTextHighlightColor: dart.finalFieldType(ui.Color),
    textCollection: dart.finalFieldType(dart.nullable(core.List$(pdf.MatchedItem))),
    pdfTextSearchResult: dart.finalFieldType(pdfviewer.PdfTextSearchResult),
    onDocumentLinkNavigationInvoked: dart.finalFieldType(dart.fnType(dart.dynamic, [core.double])),
    interactionMode: dart.finalFieldType(enums.PdfInteractionMode),
    isMobileWebView: dart.finalFieldType(core.bool)
  }));
  var __CanvasRenderBox_height = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#height");
  var __CanvasRenderBox_height_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#height#isSet");
  var __CanvasRenderBox_width = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#width");
  var __CanvasRenderBox_width_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#width#isSet");
  var __CanvasRenderBox_pageIndex = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pageIndex");
  var __CanvasRenderBox_pageIndex_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pageIndex#isSet");
  var __CanvasRenderBox_pdfDocument = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfDocument");
  var __CanvasRenderBox_pdfDocument_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfDocument#isSet");
  var __CanvasRenderBox_context = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#context");
  var __CanvasRenderBox_context_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#context#isSet");
  var __CanvasRenderBox_enableTextSelection = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#enableTextSelection");
  var __CanvasRenderBox_enableTextSelection_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#enableTextSelection#isSet");
  var __CanvasRenderBox_enableDocumentLinkNavigation = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#enableDocumentLinkNavigation");
  var __CanvasRenderBox_enableDocumentLinkNavigation_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#enableDocumentLinkNavigation#isSet");
  var __CanvasRenderBox_pdfPages = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfPages");
  var __CanvasRenderBox_pdfPages_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfPages#isSet");
  var __CanvasRenderBox_scrollController = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#scrollController");
  var __CanvasRenderBox_scrollController_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#scrollController#isSet");
  var __CanvasRenderBox_pdfViewerController = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfViewerController");
  var __CanvasRenderBox_pdfViewerController_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfViewerController#isSet");
  var __CanvasRenderBox_onTextSelectionDragStarted = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onTextSelectionDragStarted");
  var __CanvasRenderBox_onTextSelectionDragStarted_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onTextSelectionDragStarted#isSet");
  var __CanvasRenderBox_onTextSelectionDragEnded = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onTextSelectionDragEnded");
  var __CanvasRenderBox_onTextSelectionDragEnded_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onTextSelectionDragEnded#isSet");
  var __CanvasRenderBox_onTextSelectionChanged = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onTextSelectionChanged");
  var __CanvasRenderBox_onTextSelectionChanged_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onTextSelectionChanged#isSet");
  var __CanvasRenderBox_onDocumentLinkNavigationInvoked = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onDocumentLinkNavigationInvoked");
  var __CanvasRenderBox_onDocumentLinkNavigationInvoked_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#onDocumentLinkNavigationInvoked#isSet");
  var __CanvasRenderBox_interactionMode = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#interactionMode");
  var __CanvasRenderBox_interactionMode_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#interactionMode#isSet");
  var __CanvasRenderBox_searchTextHighlightColor = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#searchTextHighlightColor");
  var __CanvasRenderBox_searchTextHighlightColor_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#searchTextHighlightColor#isSet");
  var __CanvasRenderBox_textCollection = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#textCollection");
  var __CanvasRenderBox_textCollection_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#textCollection#isSet");
  var __CanvasRenderBox_pdfTextSearchResult = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfTextSearchResult");
  var __CanvasRenderBox_pdfTextSearchResult_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#pdfTextSearchResult#isSet");
  var __CanvasRenderBox_isMobileWebView = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#isMobileWebView");
  var __CanvasRenderBox_isMobileWebView_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#isMobileWebView#isSet");
  var _viewId = dart.privateName(pdfviewer_canvas, "_viewId");
  var _totalPageOffset = dart.privateName(pdfviewer_canvas, "_totalPageOffset");
  var _isTOCTapped = dart.privateName(pdfviewer_canvas, "_isTOCTapped");
  var _isMousePointer = dart.privateName(pdfviewer_canvas, "_isMousePointer");
  var _startBubbleTapX = dart.privateName(pdfviewer_canvas, "_startBubbleTapX");
  var _endBubbleTapX = dart.privateName(pdfviewer_canvas, "_endBubbleTapX");
  var _bubbleSize = dart.privateName(pdfviewer_canvas, "_bubbleSize");
  var _maximumZoomLevel = dart.privateName(pdfviewer_canvas, "_maximumZoomLevel");
  var _longPressed = dart.privateName(pdfviewer_canvas, "_longPressed");
  var _startBubbleDragging = dart.privateName(pdfviewer_canvas, "_startBubbleDragging");
  var _endBubbleDragging = dart.privateName(pdfviewer_canvas, "_endBubbleDragging");
  var _zoomPercentage = dart.privateName(pdfviewer_canvas, "_zoomPercentage");
  var _tapDetails = dart.privateName(pdfviewer_canvas, "_tapDetails");
  var _dragDetails = dart.privateName(pdfviewer_canvas, "_dragDetails");
  var _dragDownDetails = dart.privateName(pdfviewer_canvas, "_dragDownDetails");
  var _selectionColor = dart.privateName(pdfviewer_canvas, "_selectionColor");
  var _selectionHandleColor = dart.privateName(pdfviewer_canvas, "_selectionHandleColor");
  var __CanvasRenderBox__tapRecognizer = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_tapRecognizer");
  var __CanvasRenderBox__tapRecognizer_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_tapRecognizer#isSet");
  var __CanvasRenderBox__dragRecognizer = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_dragRecognizer");
  var __CanvasRenderBox__dragRecognizer_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_dragRecognizer#isSet");
  var __CanvasRenderBox__longPressRecognizer = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_longPressRecognizer");
  var __CanvasRenderBox__longPressRecognizer_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_longPressRecognizer#isSet");
  var __CanvasRenderBox__verticalDragRecognizer = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_verticalDragRecognizer");
  var __CanvasRenderBox__verticalDragRecognizer_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_verticalDragRecognizer#isSet");
  var __CanvasRenderBox__documentLinkAnnotation = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_documentLinkAnnotation");
  var __CanvasRenderBox__documentLinkAnnotation_isSet = dart.privateName(pdfviewer_canvas, "_#CanvasRenderBox#_documentLinkAnnotation#isSet");
  var _tapRecognizer = dart.privateName(pdfviewer_canvas, "_tapRecognizer");
  var _longPressRecognizer = dart.privateName(pdfviewer_canvas, "_longPressRecognizer");
  var _dragRecognizer = dart.privateName(pdfviewer_canvas, "_dragRecognizer");
  var _verticalDragRecognizer = dart.privateName(pdfviewer_canvas, "_verticalDragRecognizer");
  var _documentLinkAnnotation = dart.privateName(pdfviewer_canvas, "_documentLinkAnnotation");
  var _checkStartBubblePosition = dart.privateName(pdfviewer_canvas, "_checkStartBubblePosition");
  var _checkEndBubblePosition = dart.privateName(pdfviewer_canvas, "_checkEndBubblePosition");
  var _triggerValueCallback = dart.privateName(pdfviewer_canvas, "_triggerValueCallback");
  var _enableMouseSelection = dart.privateName(pdfviewer_canvas, "_enableMouseSelection");
  var _triggerNullCallback = dart.privateName(pdfviewer_canvas, "_triggerNullCallback");
  var _enableSelection = dart.privateName(pdfviewer_canvas, "_enableSelection");
  var _sortTextLines = dart.privateName(pdfviewer_canvas, "_sortTextLines");
  var _handleHistoryEntryRemoved$ = dart.privateName(pdfviewer_canvas, "_handleHistoryEntryRemoved");
  var _ensureHistoryEntry$ = dart.privateName(pdfviewer_canvas, "_ensureHistoryEntry");
  var _drawStartBubble = dart.privateName(pdfviewer_canvas, "_drawStartBubble");
  var _drawEndBubble = dart.privateName(pdfviewer_canvas, "_drawEndBubble");
  var _drawTextRect = dart.privateName(pdfviewer_canvas, "_drawTextRect");
  var _name = dart.privateName(platform, "_name");
  pdfviewer_canvas.CanvasRenderBox = class CanvasRenderBox extends box.RenderBox {
    get height() {
      let t10;
      return dart.test(this[__CanvasRenderBox_height_isSet]) ? (t10 = this[__CanvasRenderBox_height], t10) : dart.throw(new _internal.LateError.fieldNI("height"));
    }
    set height(t10) {
      if (t10 == null) dart.nullFailed(I[10], 180, 15, "null");
      this[__CanvasRenderBox_height_isSet] = true;
      this[__CanvasRenderBox_height] = t10;
    }
    get width() {
      let t11;
      return dart.test(this[__CanvasRenderBox_width_isSet]) ? (t11 = this[__CanvasRenderBox_width], t11) : dart.throw(new _internal.LateError.fieldNI("width"));
    }
    set width(t11) {
      if (t11 == null) dart.nullFailed(I[10], 183, 15, "null");
      this[__CanvasRenderBox_width_isSet] = true;
      this[__CanvasRenderBox_width] = t11;
    }
    get pageIndex() {
      let t12;
      return dart.test(this[__CanvasRenderBox_pageIndex_isSet]) ? (t12 = this[__CanvasRenderBox_pageIndex], t12) : dart.throw(new _internal.LateError.fieldNI("pageIndex"));
    }
    set pageIndex(t12) {
      if (t12 == null) dart.nullFailed(I[10], 186, 12, "null");
      this[__CanvasRenderBox_pageIndex_isSet] = true;
      this[__CanvasRenderBox_pageIndex] = t12;
    }
    get pdfDocument() {
      return dart.test(this[__CanvasRenderBox_pdfDocument_isSet]) ? this[__CanvasRenderBox_pdfDocument] : dart.throw(new _internal.LateError.fieldNI("pdfDocument"));
    }
    set pdfDocument(t13) {
      if (dart.test(this[__CanvasRenderBox_pdfDocument_isSet]))
        dart.throw(new _internal.LateError.fieldAI("pdfDocument"));
      else {
        this[__CanvasRenderBox_pdfDocument_isSet] = true;
        this[__CanvasRenderBox_pdfDocument] = t13;
      }
    }
    get context() {
      let t14;
      return dart.test(this[__CanvasRenderBox_context_isSet]) ? (t14 = this[__CanvasRenderBox_context], t14) : dart.throw(new _internal.LateError.fieldNI("context"));
    }
    set context(t14) {
      if (t14 == null) dart.nullFailed(I[10], 192, 27, "null");
      if (dart.test(this[__CanvasRenderBox_context_isSet]))
        dart.throw(new _internal.LateError.fieldAI("context"));
      else {
        this[__CanvasRenderBox_context_isSet] = true;
        this[__CanvasRenderBox_context] = t14;
      }
    }
    get enableTextSelection() {
      let t15;
      return dart.test(this[__CanvasRenderBox_enableTextSelection_isSet]) ? (t15 = this[__CanvasRenderBox_enableTextSelection], t15) : dart.throw(new _internal.LateError.fieldNI("enableTextSelection"));
    }
    set enableTextSelection(t15) {
      if (t15 == null) dart.nullFailed(I[10], 195, 19, "null");
      if (dart.test(this[__CanvasRenderBox_enableTextSelection_isSet]))
        dart.throw(new _internal.LateError.fieldAI("enableTextSelection"));
      else {
        this[__CanvasRenderBox_enableTextSelection_isSet] = true;
        this[__CanvasRenderBox_enableTextSelection] = t15;
      }
    }
    get enableDocumentLinkNavigation() {
      let t16;
      return dart.test(this[__CanvasRenderBox_enableDocumentLinkNavigation_isSet]) ? (t16 = this[__CanvasRenderBox_enableDocumentLinkNavigation], t16) : dart.throw(new _internal.LateError.fieldNI("enableDocumentLinkNavigation"));
    }
    set enableDocumentLinkNavigation(t16) {
      if (t16 == null) dart.nullFailed(I[10], 198, 19, "null");
      if (dart.test(this[__CanvasRenderBox_enableDocumentLinkNavigation_isSet]))
        dart.throw(new _internal.LateError.fieldAI("enableDocumentLinkNavigation"));
      else {
        this[__CanvasRenderBox_enableDocumentLinkNavigation_isSet] = true;
        this[__CanvasRenderBox_enableDocumentLinkNavigation] = t16;
      }
    }
    get pdfPages() {
      let t17;
      return dart.test(this[__CanvasRenderBox_pdfPages_isSet]) ? (t17 = this[__CanvasRenderBox_pdfPages], t17) : dart.throw(new _internal.LateError.fieldNI("pdfPages"));
    }
    set pdfPages(t17) {
      if (t17 == null) dart.nullFailed(I[10], 201, 36, "null");
      if (dart.test(this[__CanvasRenderBox_pdfPages_isSet]))
        dart.throw(new _internal.LateError.fieldAI("pdfPages"));
      else {
        this[__CanvasRenderBox_pdfPages_isSet] = true;
        this[__CanvasRenderBox_pdfPages] = t17;
      }
    }
    get scrollController() {
      let t18;
      return dart.test(this[__CanvasRenderBox_scrollController_isSet]) ? (t18 = this[__CanvasRenderBox_scrollController], t18) : dart.throw(new _internal.LateError.fieldNI("scrollController"));
    }
    set scrollController(t18) {
      if (t18 == null) dart.nullFailed(I[10], 204, 31, "null");
      if (dart.test(this[__CanvasRenderBox_scrollController_isSet]))
        dart.throw(new _internal.LateError.fieldAI("scrollController"));
      else {
        this[__CanvasRenderBox_scrollController_isSet] = true;
        this[__CanvasRenderBox_scrollController] = t18;
      }
    }
    get pdfViewerController() {
      let t19;
      return dart.test(this[__CanvasRenderBox_pdfViewerController_isSet]) ? (t19 = this[__CanvasRenderBox_pdfViewerController], t19) : dart.throw(new _internal.LateError.fieldNI("pdfViewerController"));
    }
    set pdfViewerController(t19) {
      if (t19 == null) dart.nullFailed(I[10], 207, 34, "null");
      if (dart.test(this[__CanvasRenderBox_pdfViewerController_isSet]))
        dart.throw(new _internal.LateError.fieldAI("pdfViewerController"));
      else {
        this[__CanvasRenderBox_pdfViewerController_isSet] = true;
        this[__CanvasRenderBox_pdfViewerController] = t19;
      }
    }
    get onTextSelectionDragStarted() {
      let t20;
      return dart.test(this[__CanvasRenderBox_onTextSelectionDragStarted_isSet]) ? (t20 = this[__CanvasRenderBox_onTextSelectionDragStarted], t20) : dart.throw(new _internal.LateError.fieldNI("onTextSelectionDragStarted"));
    }
    set onTextSelectionDragStarted(t20) {
      if (t20 == null) dart.nullFailed(I[10], 210, 27, "null");
      if (dart.test(this[__CanvasRenderBox_onTextSelectionDragStarted_isSet]))
        dart.throw(new _internal.LateError.fieldAI("onTextSelectionDragStarted"));
      else {
        this[__CanvasRenderBox_onTextSelectionDragStarted_isSet] = true;
        this[__CanvasRenderBox_onTextSelectionDragStarted] = t20;
      }
    }
    get onTextSelectionDragEnded() {
      let t21;
      return dart.test(this[__CanvasRenderBox_onTextSelectionDragEnded_isSet]) ? (t21 = this[__CanvasRenderBox_onTextSelectionDragEnded], t21) : dart.throw(new _internal.LateError.fieldNI("onTextSelectionDragEnded"));
    }
    set onTextSelectionDragEnded(t21) {
      if (t21 == null) dart.nullFailed(I[10], 213, 27, "null");
      if (dart.test(this[__CanvasRenderBox_onTextSelectionDragEnded_isSet]))
        dart.throw(new _internal.LateError.fieldAI("onTextSelectionDragEnded"));
      else {
        this[__CanvasRenderBox_onTextSelectionDragEnded_isSet] = true;
        this[__CanvasRenderBox_onTextSelectionDragEnded] = t21;
      }
    }
    get onTextSelectionChanged() {
      return dart.test(this[__CanvasRenderBox_onTextSelectionChanged_isSet]) ? this[__CanvasRenderBox_onTextSelectionChanged] : dart.throw(new _internal.LateError.fieldNI("onTextSelectionChanged"));
    }
    set onTextSelectionChanged(t22) {
      if (dart.test(this[__CanvasRenderBox_onTextSelectionChanged_isSet]))
        dart.throw(new _internal.LateError.fieldAI("onTextSelectionChanged"));
      else {
        this[__CanvasRenderBox_onTextSelectionChanged_isSet] = true;
        this[__CanvasRenderBox_onTextSelectionChanged] = t22;
      }
    }
    get onDocumentLinkNavigationInvoked() {
      let t23;
      return dart.test(this[__CanvasRenderBox_onDocumentLinkNavigationInvoked_isSet]) ? (t23 = this[__CanvasRenderBox_onDocumentLinkNavigationInvoked], t23) : dart.throw(new _internal.LateError.fieldNI("onDocumentLinkNavigationInvoked"));
    }
    set onDocumentLinkNavigationInvoked(t23) {
      if (t23 == null) dart.nullFailed(I[10], 219, 37, "null");
      if (dart.test(this[__CanvasRenderBox_onDocumentLinkNavigationInvoked_isSet]))
        dart.throw(new _internal.LateError.fieldAI("onDocumentLinkNavigationInvoked"));
      else {
        this[__CanvasRenderBox_onDocumentLinkNavigationInvoked_isSet] = true;
        this[__CanvasRenderBox_onDocumentLinkNavigationInvoked] = t23;
      }
    }
    get interactionMode() {
      let t24;
      return dart.test(this[__CanvasRenderBox_interactionMode_isSet]) ? (t24 = this[__CanvasRenderBox_interactionMode], t24) : dart.throw(new _internal.LateError.fieldNI("interactionMode"));
    }
    set interactionMode(t24) {
      if (t24 == null) dart.nullFailed(I[10], 222, 27, "null");
      this[__CanvasRenderBox_interactionMode_isSet] = true;
      this[__CanvasRenderBox_interactionMode] = t24;
    }
    get searchTextHighlightColor() {
      let t25;
      return dart.test(this[__CanvasRenderBox_searchTextHighlightColor_isSet]) ? (t25 = this[__CanvasRenderBox_searchTextHighlightColor], t25) : dart.throw(new _internal.LateError.fieldNI("searchTextHighlightColor"));
    }
    set searchTextHighlightColor(t25) {
      if (t25 == null) dart.nullFailed(I[10], 225, 14, "null");
      this[__CanvasRenderBox_searchTextHighlightColor_isSet] = true;
      this[__CanvasRenderBox_searchTextHighlightColor] = t25;
    }
    get textCollection() {
      return dart.test(this[__CanvasRenderBox_textCollection_isSet]) ? this[__CanvasRenderBox_textCollection] : dart.throw(new _internal.LateError.fieldNI("textCollection"));
    }
    set textCollection(t26) {
      this[__CanvasRenderBox_textCollection_isSet] = true;
      this[__CanvasRenderBox_textCollection] = t26;
    }
    get pdfTextSearchResult() {
      let t27;
      return dart.test(this[__CanvasRenderBox_pdfTextSearchResult_isSet]) ? (t27 = this[__CanvasRenderBox_pdfTextSearchResult], t27) : dart.throw(new _internal.LateError.fieldNI("pdfTextSearchResult"));
    }
    set pdfTextSearchResult(t27) {
      if (t27 == null) dart.nullFailed(I[10], 231, 28, "null");
      this[__CanvasRenderBox_pdfTextSearchResult_isSet] = true;
      this[__CanvasRenderBox_pdfTextSearchResult] = t27;
    }
    get isMobileWebView() {
      let t28;
      return dart.test(this[__CanvasRenderBox_isMobileWebView_isSet]) ? (t28 = this[__CanvasRenderBox_isMobileWebView], t28) : dart.throw(new _internal.LateError.fieldNI("isMobileWebView"));
    }
    set isMobileWebView(t28) {
      if (t28 == null) dart.nullFailed(I[10], 234, 19, "null");
      if (dart.test(this[__CanvasRenderBox_isMobileWebView_isSet]))
        dart.throw(new _internal.LateError.fieldAI("isMobileWebView"));
      else {
        this[__CanvasRenderBox_isMobileWebView_isSet] = true;
        this[__CanvasRenderBox_isMobileWebView] = t28;
      }
    }
    get [_tapRecognizer]() {
      let t29;
      return dart.test(this[__CanvasRenderBox__tapRecognizer_isSet]) ? (t29 = this[__CanvasRenderBox__tapRecognizer], t29) : dart.throw(new _internal.LateError.fieldNI("_tapRecognizer"));
    }
    set [_tapRecognizer](t29) {
      if (t29 == null) dart.nullFailed(I[10], 253, 29, "null");
      this[__CanvasRenderBox__tapRecognizer_isSet] = true;
      this[__CanvasRenderBox__tapRecognizer] = t29;
    }
    get [_dragRecognizer]() {
      let t30;
      return dart.test(this[__CanvasRenderBox__dragRecognizer_isSet]) ? (t30 = this[__CanvasRenderBox__dragRecognizer], t30) : dart.throw(new _internal.LateError.fieldNI("_dragRecognizer"));
    }
    set [_dragRecognizer](t30) {
      if (t30 == null) dart.nullFailed(I[10], 254, 29, "null");
      this[__CanvasRenderBox__dragRecognizer_isSet] = true;
      this[__CanvasRenderBox__dragRecognizer] = t30;
    }
    get [_longPressRecognizer]() {
      let t31;
      return dart.test(this[__CanvasRenderBox__longPressRecognizer_isSet]) ? (t31 = this[__CanvasRenderBox__longPressRecognizer], t31) : dart.throw(new _internal.LateError.fieldNI("_longPressRecognizer"));
    }
    set [_longPressRecognizer](t31) {
      if (t31 == null) dart.nullFailed(I[10], 255, 35, "null");
      this[__CanvasRenderBox__longPressRecognizer_isSet] = true;
      this[__CanvasRenderBox__longPressRecognizer] = t31;
    }
    get [_verticalDragRecognizer]() {
      let t32;
      return dart.test(this[__CanvasRenderBox__verticalDragRecognizer_isSet]) ? (t32 = this[__CanvasRenderBox__verticalDragRecognizer], t32) : dart.throw(new _internal.LateError.fieldNI("_verticalDragRecognizer"));
    }
    set [_verticalDragRecognizer](t32) {
      if (t32 == null) dart.nullFailed(I[10], 256, 38, "null");
      this[__CanvasRenderBox__verticalDragRecognizer_isSet] = true;
      this[__CanvasRenderBox__verticalDragRecognizer] = t32;
    }
    get [_documentLinkAnnotation]() {
      return dart.test(this[__CanvasRenderBox__documentLinkAnnotation_isSet]) ? this[__CanvasRenderBox__documentLinkAnnotation] : dart.throw(new _internal.LateError.fieldNI("_documentLinkAnnotation"));
    }
    set [_documentLinkAnnotation](t33) {
      this[__CanvasRenderBox__documentLinkAnnotation_isSet] = true;
      this[__CanvasRenderBox__documentLinkAnnotation] = t33;
    }
    handleEvent(event, entry) {
      if (event == null) dart.nullFailed(I[10], 260, 33, "event");
      box.BoxHitTestEntry.as(entry);
      if (entry == null) dart.nullFailed(I[10], 260, 56, "entry");
      if (events.PointerDownEvent.is(event) && (!true || true && dart.test(this.isMobileWebView))) {
        this[_tapRecognizer].addPointer(event);
        this[_longPressRecognizer].addPointer(event);
        this[_dragRecognizer].addPointer(event);
        if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
          let isStartDragPossible = this[_checkStartBubblePosition]();
          let isEndDragPossible = this[_checkEndBubblePosition]();
          if (dart.test(isStartDragPossible) || dart.test(isEndDragPossible)) {
            this[_verticalDragRecognizer].addPointer(event);
          }
        }
      }
      super.handleEvent(event, entry);
    }
    hitTestSelf(position) {
      if (position == null) dart.nullFailed(I[10], 277, 27, "position");
      return true;
    }
    get sizedByParent() {
      return true;
    }
    handleTapUp(details) {
      let t34;
      if (details == null) dart.nullFailed(I[10], 283, 33, "details");
      if (true && !dart.test(this.isMobileWebView) && !dart.test(pdfviewer_canvas._textSelectionHelper.enableTapSelection)) {
        this.clearMouseSelection();
      }
      if (this.textCollection == null && !dart.test(pdfviewer_canvas._textSelectionHelper.enableTapSelection)) {
        this.clearSelection();
      }
      if (dart.test(pdfviewer_canvas._textSelectionHelper.enableTapSelection) && dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
        this[_triggerValueCallback]();
      }
      if (dart.test(this.enableDocumentLinkNavigation) && this.pdfDocument != null) {
        this[_viewId] = this.pageIndex;
        let heightPercentage = dart.notNull(dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(this[_viewId])).size.height) / dart.notNull(this.height);
        let page = dart.nullCheck(this.pdfDocument).pages._get(this.pageIndex);
        let length = page.annotations.count;
        for (let index = 0; index < dart.notNull(length); index = index + 1) {
          if (pdf.PdfDocumentLinkAnnotation.is(page.annotations._get(index))) {
            this[_documentLinkAnnotation] = pdf.PdfDocumentLinkAnnotation.as(page.annotations._get(index));
            if (!(this[_documentLinkAnnotation] != null)) dart.assertFailed(null, I[10], 307, 18, "_documentLinkAnnotation != null");
            if (dart.notNull(details.localPosition.dy) >= dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.top) / heightPercentage && dart.notNull(details.localPosition.dy) <= dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.bottom) / heightPercentage && dart.notNull(details.localPosition.dx) >= dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.left) / heightPercentage && dart.notNull(details.localPosition.dx) <= dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.right) / heightPercentage) {
              if ((t34 = dart.nullCheck(this[_documentLinkAnnotation]).destination, t34 == null ? null : t34.page) != null) {
                this[_isTOCTapped] = true;
                let destinationPage = dart.nullCheck(dart.nullCheck(this[_documentLinkAnnotation]).destination).page;
                let destinationPageIndex = dart.notNull(dart.nullCheck(this.pdfDocument).pages.indexOf(destinationPage)) + 1;
                let destinationPageOffset = dart.notNull(dart.nullCheck(dart.nullCheck(this[_documentLinkAnnotation]).destination).location.dy) / heightPercentage;
                this[_totalPageOffset] = dart.notNull(dart.nullCheck(this.pdfPages[$_get](destinationPageIndex)).pageOffset) + destinationPageOffset;
                this[_viewId] = this.pageIndex;
                this.markNeedsPaint();
                break;
              }
            }
          }
        }
      }
    }
    handleTapDown(details) {
      if (details == null) dart.nullFailed(I[10], 360, 37, "details");
      if (dart.test(pdfviewer_canvas._textSelectionHelper.enableTapSelection) && dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
        this[_triggerValueCallback]();
      }
      this[_tapDetails] = details.localPosition;
      if (true && !dart.test(this.isMobileWebView) && dart.test(this.enableTextSelection) && this.interactionMode == enums.PdfInteractionMode.selection) {
        this[_isMousePointer] = details.kind == ui.PointerDeviceKind.mouse ? true : false;
      }
    }
    handleLongPressStart(details) {
      if (details == null) dart.nullFailed(I[10], 375, 51, "details");
      if (true && !dart.test(this.isMobileWebView) && this.pdfDocument != null) {
        this.clearMouseSelection();
        let isTOC = this.findTOC(details.localPosition);
        if (this.interactionMode == enums.PdfInteractionMode.selection && !dart.test(isTOC)) {
          this.enableSelection();
        }
      } else {
        this.enableSelection();
      }
    }
    handleDragStart(details) {
      if (details == null) dart.nullFailed(I[10], 388, 41, "details");
      this[_enableMouseSelection](details, "DragStart");
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
        let isStartDragPossible = this[_checkStartBubblePosition]();
        let isEndDragPossible = this[_checkEndBubblePosition]();
        if (dart.test(isStartDragPossible)) {
          this[_startBubbleDragging] = true;
          this.onTextSelectionDragStarted();
        } else if (dart.test(isEndDragPossible)) {
          this[_endBubbleDragging] = true;
          this.onTextSelectionDragStarted();
        }
      }
    }
    handleDragUpdate(details) {
      if (details == null) dart.nullFailed(I[10], 404, 43, "details");
      if (true && !dart.test(this.isMobileWebView) && dart.test(this[_isMousePointer])) {
        if (dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled) && !dart.test(pdfviewer_canvas._textSelectionHelper.isCursorExit)) {
          pdfviewer_canvas._textSelectionHelper.endBubbleX = details.localPosition.dx;
          pdfviewer_canvas._textSelectionHelper.endBubbleY = dart.notNull(details.localPosition.dy) + (dart.notNull(pdfviewer_canvas._textSelectionHelper.finalScrollOffset) - dart.notNull(pdfviewer_canvas._textSelectionHelper.initialScrollOffset));
          this.markNeedsPaint();
        }
      }
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
        this[_dragDetails] = details.localPosition;
        if (dart.test(this[_startBubbleDragging])) {
          this[_startBubbleTapX] = details.localPosition.dx;
          this.markNeedsPaint();
          this[_triggerNullCallback]();
        } else if (dart.test(this[_endBubbleDragging])) {
          this[_endBubbleTapX] = details.localPosition.dx;
          this.markNeedsPaint();
          if (this.onTextSelectionChanged != null) {
            dart.nullCheck(this.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(null, null));
          }
          this[_triggerNullCallback]();
        }
      }
    }
    handleDragEnd(details) {
      if (details == null) dart.nullFailed(I[10], 433, 37, "details");
      if (true && !dart.test(this.isMobileWebView) && dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
        this.onTextSelectionDragEnded();
        this[_triggerValueCallback]();
      }
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
        if (dart.test(this[_startBubbleDragging])) {
          this[_startBubbleDragging] = false;
          this.onTextSelectionDragEnded();
          this[_triggerValueCallback]();
        }
        if (dart.test(this[_endBubbleDragging])) {
          this[_endBubbleDragging] = false;
          this.onTextSelectionDragEnded();
          this[_triggerValueCallback]();
        }
      }
    }
    handleDragDown(details) {
      if (details == null) dart.nullFailed(I[10], 455, 39, "details");
      this[_dragDownDetails] = details.localPosition;
    }
    handleDoubleTapDown(details) {
      pdfviewer_canvas._textSelectionHelper.enableTapSelection = true;
      this[_enableMouseSelection](details, "DoubleTap");
    }
    handleTripleTapDown(details) {
      pdfviewer_canvas._textSelectionHelper.enableTapSelection = true;
      this[_enableMouseSelection](details, "TripleTap");
    }
    [_enableMouseSelection](details, gestureType) {
      if (gestureType == null) dart.nullFailed(I[10], 472, 46, "gestureType");
      if (true && !dart.test(this.isMobileWebView) && dart.test(this.enableTextSelection) && this.interactionMode == enums.PdfInteractionMode.selection) {
        let isTOC = this.findTOC(dart.dload(details, 'localPosition'));
        pdfviewer_canvas._textSelectionHelper.initialScrollOffset = 0.0;
        pdfviewer_canvas._textSelectionHelper.finalScrollOffset = 0.0;
        if (dart.equals(dart.dload(details, 'kind'), ui.PointerDeviceKind.mouse) && !dart.test(isTOC)) {
          if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
            let isStartDragPossible = this[_checkStartBubblePosition]();
            let isEndDragPossible = this[_checkEndBubblePosition]();
            if (dart.test(isStartDragPossible) || dart.test(isEndDragPossible)) {
              pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled = false;
            } else {
              this.clearSelection();
            }
          }
          if (gestureType === "DragStart" && dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
            pdfviewer_canvas._textSelectionHelper.endBubbleX = T.doubleN().as(dart.dload(dart.dload(details, 'localPosition'), 'dx'));
            pdfviewer_canvas._textSelectionHelper.endBubbleY = T.doubleN().as(dart.dload(dart.dload(details, 'localPosition'), 'dy'));
          }
          if (pdfviewer_canvas._textSelectionHelper.textLines == null || pdfviewer_canvas._textSelectionHelper.viewId != this.pageIndex) {
            pdfviewer_canvas._textSelectionHelper.viewId = this.pageIndex;
            pdfviewer_canvas._textSelectionHelper.textLines = new pdf.PdfTextExtractor.new(dart.nullCheck(this.pdfDocument)).extractTextLines({startPageIndex: this.pageIndex});
          }
          dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$forEach](dart.fn(textLine => {
            if (textLine == null) dart.nullFailed(I[10], 501, 50, "textLine");
            textLine.wordCollection[$forEach](dart.fn(textWord => {
              if (textWord == null) dart.nullFailed(I[10], 502, 44, "textWord");
              textWord.glyphs[$forEach](dart.fn(textGlyph => {
                if (textGlyph == null) dart.nullFailed(I[10], 503, 38, "textGlyph");
                if (gestureType === "DragStart") {
                  if (dart.test(textGlyph.bounds.contains(ui.Offset.as(dart.dload(details, 'localPosition'))))) {
                    pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textGlyph;
                    this[_enableSelection](gestureType);
                  }
                } else if (gestureType === "DoubleTap") {
                  this[_triggerNullCallback]();
                  if (dart.test(textWord.bounds.contains(ui.Offset.as(dart.dload(details, 'localPosition'))))) {
                    pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textWord.glyphs[$first];
                    pdfviewer_canvas._textSelectionHelper.endBubbleX = textWord.glyphs[$last].bounds.right;
                    pdfviewer_canvas._textSelectionHelper.endBubbleY = textWord.glyphs[$last].bounds.bottom;
                    this[_enableSelection](gestureType);
                  }
                } else if (gestureType === "TripleTap") {
                  this[_triggerNullCallback]();
                  if (dart.test(textLine.bounds.contains(ui.Offset.as(dart.dload(details, 'localPosition'))))) {
                    pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textLine.wordCollection[$first].glyphs[$first];
                    pdfviewer_canvas._textSelectionHelper.endBubbleX = textLine.wordCollection[$last].bounds.right;
                    pdfviewer_canvas._textSelectionHelper.endBubbleY = textLine.wordCollection[$last].bounds.bottom;
                    this[_enableSelection](gestureType);
                  }
                }
              }, T.TextGlyphTovoid()));
            }, T.TextWordTovoid()));
          }, T.TextLineTovoid()));
        }
      }
    }
    [_enableSelection](gestureType) {
      if (gestureType == null) dart.nullFailed(I[10], 540, 32, "gestureType");
      if (!dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
        if (gestureType === "DragStart") {
          this.clearMouseSelection();
          this.onTextSelectionDragStarted();
        }
        pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled = true;
      }
    }
    [_triggerNullCallback]() {
      if (this.onTextSelectionChanged != null) {
        dart.nullCheck(this.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(null, null));
      }
    }
    [_triggerValueCallback]() {
      if (this.onTextSelectionChanged != null) {
        dart.nullCheck(this.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(pdfviewer_canvas._textSelectionHelper.copiedText, pdfviewer_canvas._textSelectionHelper.globalSelectedRegion));
      }
    }
    scrollStarted() {
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled) || dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
        this[_triggerNullCallback]();
      }
    }
    scrollEnded() {
      let t34;
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled) || dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
        let top = null;
        let bottom = null;
        if (true && !dart.test(this.isMobileWebView) && pdfviewer_canvas._textSelectionHelper.globalSelectedRegion != null) {
          top = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.globalSelectedRegion).top;
          bottom = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.globalSelectedRegion).bottom;
        } else {
          let _heightPercentage = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.heightPercentage);
          top = pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph != null ? dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph).bounds.top) / _heightPercentage : 0.0;
          bottom = pdfviewer_canvas._textSelectionHelper.endBubbleY != null ? dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / _heightPercentage : 0.0;
        }
        t34 = binding.WidgetsBinding.instance;
        t34 == null ? null : t34.addPostFrameCallback(dart.fn(timeStamp => {
          if (timeStamp == null) dart.nullFailed(I[10], 597, 54, "timeStamp");
          if (dart.notNull(dart.nullCheck(this.pdfPages[$_get](dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId) + 1)).pageOffset) + dart.notNull(bottom) >= dart.notNull(this.scrollController.offset) && dart.notNull(dart.nullCheck(this.pdfPages[$_get](dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId) + 1)).pageOffset) + dart.notNull(bottom) <= dart.notNull(this.scrollController.offset) + dart.notNull(this.scrollController.position.viewportDimension) || dart.notNull(dart.nullCheck(this.pdfPages[$_get](dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId) + 1)).pageOffset) + dart.notNull(top) >= dart.notNull(this.scrollController.offset) && dart.notNull(dart.nullCheck(this.pdfPages[$_get](dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId) + 1)).pageOffset) + dart.notNull(top) <= dart.notNull(this.scrollController.offset) + dart.notNull(this.scrollController.position.viewportDimension)) {
            this[_triggerValueCallback]();
          }
        }, T.DurationTovoid()));
      }
    }
    [_checkStartBubblePosition]() {
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled) && this[_dragDownDetails] != null) {
        let startBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleX) / dart.nullCheck(pdfviewer_canvas._textSelectionHelper.heightPercentage);
        let startBubbleY = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleY) / dart.nullCheck(pdfviewer_canvas._textSelectionHelper.heightPercentage);
        if (dart.notNull(dart.nullCheck(this[_dragDownDetails]).dx) >= startBubbleX - dart.notNull(this[_bubbleSize]) * dart.notNull(this[_maximumZoomLevel]) && dart.notNull(dart.nullCheck(this[_dragDownDetails]).dx) <= startBubbleX && dart.notNull(dart.nullCheck(this[_dragDownDetails]).dy) >= startBubbleY - dart.notNull(this[_bubbleSize]) && dart.notNull(dart.nullCheck(this[_dragDownDetails]).dy) <= startBubbleY + dart.notNull(this[_bubbleSize])) {
          return true;
        }
      }
      return false;
    }
    [_checkEndBubblePosition]() {
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled) && this[_dragDownDetails] != null) {
        let endBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX) / dart.nullCheck(pdfviewer_canvas._textSelectionHelper.heightPercentage);
        let endBubbleY = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / dart.nullCheck(pdfviewer_canvas._textSelectionHelper.heightPercentage);
        if (dart.notNull(dart.nullCheck(this[_dragDownDetails]).dx) >= endBubbleX && dart.notNull(dart.nullCheck(this[_dragDownDetails]).dx) <= endBubbleX + dart.notNull(this[_bubbleSize]) * dart.notNull(this[_maximumZoomLevel]) && dart.notNull(dart.nullCheck(this[_dragDownDetails]).dy) >= endBubbleY - dart.notNull(this[_bubbleSize]) && dart.notNull(dart.nullCheck(this[_dragDownDetails]).dy) <= endBubbleY + dart.notNull(this[_bubbleSize])) {
          return true;
        }
      }
      return false;
    }
    [_sortTextLines]() {
      if (pdfviewer_canvas._textSelectionHelper.textLines != null) {
        for (let textLineIndex = 0; textLineIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]); textLineIndex = textLineIndex + 1) {
          for (let index = textLineIndex + 1; index < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]); index = index + 1) {
            if (dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex).bounds.bottom) > dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](index).bounds.bottom)) {
              let textLine = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
              dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_set](textLineIndex, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](index));
              dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_set](index, textLine);
            }
          }
        }
      }
    }
    enableSelection() {
      if (dart.test(this.enableTextSelection)) {
        if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
          this.clearSelection();
        }
        this[_longPressed] = true;
        pdfviewer_canvas._textSelectionHelper.viewId = this.pageIndex;
        this.markNeedsPaint();
      }
    }
    [_ensureHistoryEntry$]() {
      T.FutureOfNull().delayed(core.Duration.zero, dart.fn(() => async.async(core.Null, (function*() {
        this[_triggerValueCallback]();
        if ((!true || true && dart.test(this.isMobileWebView)) && pdfviewer_canvas._textSelectionHelper.historyEntry == null) {
          let route = routes.ModalRoute.of(T.ObjectN(), this.context);
          if (route != null) {
            pdfviewer_canvas._textSelectionHelper.historyEntry = new routes.LocalHistoryEntry.new({onRemove: dart.bind(this, _handleHistoryEntryRemoved$)});
            route.addLocalHistoryEntry(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.historyEntry));
          }
        }
      }).bind(this)), T.VoidToFutureOfNull()));
    }
    [_handleHistoryEntryRemoved$]() {
      if (this.textCollection != null && pdfviewer_canvas._textSelectionHelper.historyEntry != null) {
        navigator.Navigator.of(this.context).maybePop(T.ObjectN());
      }
      pdfviewer_canvas._textSelectionHelper.historyEntry = null;
      this.clearSelection();
    }
    clearSelection() {
      this.clearMouseSelection();
      let clearTextSelection = !dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled);
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
        pdfviewer_canvas._textSelectionHelper.selectionEnabled = false;
        if ((!true || true && dart.test(this.isMobileWebView)) && pdfviewer_canvas._textSelectionHelper.historyEntry != null && dart.test(navigator.Navigator.canPop(this.context))) {
          pdfviewer_canvas._textSelectionHelper.historyEntry = null;
          navigator.Navigator.of(this.context).maybePop(T.ObjectN());
        }
        this.markNeedsPaint();
        this[_triggerNullCallback]();
        if (!true || true && dart.test(this.isMobileWebView)) {
          this.dispose();
        }
      }
      return clearTextSelection;
    }
    dispose() {
      this.disposeMouseSelection();
      pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = null;
      pdfviewer_canvas._textSelectionHelper.startBubbleX = null;
      pdfviewer_canvas._textSelectionHelper.startBubbleY = null;
      pdfviewer_canvas._textSelectionHelper.endBubbleX = null;
      pdfviewer_canvas._textSelectionHelper.endBubbleY = null;
      pdfviewer_canvas._textSelectionHelper.startBubbleLine = null;
      pdfviewer_canvas._textSelectionHelper.endBubbleLine = null;
      pdfviewer_canvas._textSelectionHelper.heightPercentage = null;
    }
    findTextWhileHover(details) {
      if (pdfviewer_canvas._textSelectionHelper.cursorTextLines == null || pdfviewer_canvas._textSelectionHelper.cursorPageNumber != this.pageIndex) {
        pdfviewer_canvas._textSelectionHelper.cursorPageNumber = this.pageIndex;
        pdfviewer_canvas._textSelectionHelper.cursorTextLines = new pdf.PdfTextExtractor.new(dart.nullCheck(this.pdfDocument)).extractTextLines({startPageIndex: this.pageIndex});
      }
      if (pdfviewer_canvas._textSelectionHelper.cursorTextLines != null) {
        for (let textLineIndex = 0; textLineIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.cursorTextLines)[$length]); textLineIndex = textLineIndex + 1) {
          let line = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.cursorTextLines)[$_get](textLineIndex);
          for (let wordIndex = 0; wordIndex < dart.notNull(line.wordCollection[$length]); wordIndex = wordIndex + 1) {
            let textWord = line.wordCollection[$_get](wordIndex);
            for (let glyphIndex = 0; glyphIndex < dart.notNull(textWord.glyphs[$length]); glyphIndex = glyphIndex + 1) {
              if (dart.test(textWord.glyphs[$_get](glyphIndex).bounds.contains(ui.Offset.as(details)))) {
                return textWord.glyphs[$_get](glyphIndex);
              }
            }
          }
        }
      }
      return null;
    }
    findTOC(details) {
      if (pdfviewer_canvas._textSelectionHelper.cursorPageNumber != this.pageIndex) {
        pdfviewer_canvas._textSelectionHelper.cursorPageNumber = this.pageIndex;
      }
      let page = dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.cursorPageNumber));
      for (let index = 0; index < dart.notNull(page.annotations.count); index = index + 1) {
        if (pdf.PdfDocumentLinkAnnotation.is(page.annotations._get(index))) {
          this[_documentLinkAnnotation] = pdf.PdfDocumentLinkAnnotation.as(page.annotations._get(index));
          if (dart.dtest(dart.dsend(dart.dload(details, 'dy'), '>=', [dart.nullCheck(this[_documentLinkAnnotation]).bounds.top])) && dart.dtest(dart.dsend(dart.dload(details, 'dy'), '<=', [dart.nullCheck(this[_documentLinkAnnotation]).bounds.bottom])) && dart.dtest(dart.dsend(dart.dload(details, 'dx'), '>=', [dart.nullCheck(this[_documentLinkAnnotation]).bounds.left])) && dart.dtest(dart.dsend(dart.dload(details, 'dx'), '<=', [dart.nullCheck(this[_documentLinkAnnotation]).bounds.right]))) {
            return true;
          }
        }
      }
      return false;
    }
    getSelectionDetails() {
      return pdfviewer_canvas._textSelectionHelper;
    }
    clearMouseSelection() {
      if (!dart.test(pdfviewer_canvas._textSelectionHelper.enableTapSelection) && dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
        pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled = false;
        this.markNeedsPaint();
        this[_triggerNullCallback]();
      } else {
        pdfviewer_canvas._textSelectionHelper.enableTapSelection = false;
      }
    }
    checkGlyphInRegion(textGlyph, startGlyph, details) {
      if (textGlyph == null) dart.nullFailed(I[10], 816, 17, "textGlyph");
      if (startGlyph == null) dart.nullFailed(I[10], 816, 38, "startGlyph");
      if (details == null) dart.nullFailed(I[10], 816, 57, "details");
      let glyphCenterX = textGlyph.bounds.center.dx;
      let glyphCenterY = textGlyph.bounds.center.dy;
      let top = startGlyph.bounds.top;
      let bottom = startGlyph.bounds.bottom;
      if (dart.notNull(glyphCenterY) > dart.notNull(top) && dart.notNull(glyphCenterY) < dart.notNull(details.dy) && (dart.notNull(glyphCenterX) > dart.notNull(startGlyph.bounds.left) || dart.notNull(glyphCenterY) > dart.notNull(bottom)) && (dart.notNull(textGlyph.bounds.bottom) < dart.notNull(details.dy) || dart.notNull(glyphCenterX) < dart.notNull(details.dx))) {
        return true;
      }
      if (dart.notNull(details.dy) < dart.notNull(top) || dart.notNull(details.dy) < dart.notNull(bottom) && dart.notNull(details.dx) < dart.notNull(startGlyph.bounds.left)) {
        if (dart.notNull(glyphCenterY) > dart.notNull(details.dy) && dart.notNull(glyphCenterY) < dart.notNull(bottom) && (dart.notNull(glyphCenterX) > dart.notNull(details.dx) || dart.notNull(textGlyph.bounds.top) > dart.notNull(details.dy)) && (dart.notNull(textGlyph.bounds.bottom) < dart.notNull(top) || dart.notNull(glyphCenterX) < dart.notNull(startGlyph.bounds.left))) {
          return true;
        }
      }
      return false;
    }
    disposeMouseSelection() {
      pdfviewer_canvas._textSelectionHelper.textLines = null;
      pdfviewer_canvas._textSelectionHelper.viewId = null;
      pdfviewer_canvas._textSelectionHelper.copiedText = null;
      pdfviewer_canvas._textSelectionHelper.globalSelectedRegion = null;
    }
    [_drawStartBubble](canvas, bubblePaint, startBubbleOffset) {
      if (canvas == null) dart.nullFailed(I[10], 848, 14, "canvas");
      if (bubblePaint == null) dart.nullFailed(I[10], 848, 28, "bubblePaint");
      if (startBubbleOffset == null) dart.nullFailed(I[10], 848, 48, "startBubbleOffset");
      canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(dart.notNull(startBubbleOffset.dx) - dart.notNull(this[_bubbleSize]) / dart.notNull(this[_zoomPercentage]), startBubbleOffset.dy, startBubbleOffset.dx, dart.notNull(startBubbleOffset.dy) + dart.notNull(this[_bubbleSize]) / dart.notNull(this[_zoomPercentage]), {topLeft: new ui.Radius.circular(10.0), topRight: new ui.Radius.circular(1.0), bottomRight: new ui.Radius.circular(10.0), bottomLeft: new ui.Radius.circular(10.0)}), bubblePaint);
    }
    [_drawEndBubble](canvas, bubblePaint, endBubbleOffset) {
      if (canvas == null) dart.nullFailed(I[10], 864, 14, "canvas");
      if (bubblePaint == null) dart.nullFailed(I[10], 864, 28, "bubblePaint");
      if (endBubbleOffset == null) dart.nullFailed(I[10], 864, 48, "endBubbleOffset");
      canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(endBubbleOffset.dx, endBubbleOffset.dy, dart.notNull(endBubbleOffset.dx) + dart.notNull(this[_bubbleSize]) / dart.notNull(this[_zoomPercentage]), dart.notNull(endBubbleOffset.dy) + dart.notNull(this[_bubbleSize]) / dart.notNull(this[_zoomPercentage]), {topLeft: new ui.Radius.circular(1.0), topRight: new ui.Radius.circular(10.0), bottomRight: new ui.Radius.circular(10.0), bottomLeft: new ui.Radius.circular(10.0)}), bubblePaint);
    }
    [_drawTextRect](canvas, textPaint, textRectOffset) {
      if (canvas == null) dart.nullFailed(I[10], 879, 29, "canvas");
      if (textPaint == null) dart.nullFailed(I[10], 879, 43, "textPaint");
      if (textRectOffset == null) dart.nullFailed(I[10], 879, 59, "textRectOffset");
      canvas.drawRect(textRectOffset, textPaint);
    }
    computeDryLayout(constraints) {
      if (constraints == null) dart.nullFailed(I[10], 885, 40, "constraints");
      return constraints.biggest;
    }
    getSelectedTextLines() {
      if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled) || dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled)) {
        return pdfviewer_canvas._textSelectionHelper.selectedTextLines;
      }
      return null;
    }
    paint(context, offset) {
      let t34, t34$, t34$0, t34$1, t34$2, t34$3, t34$4, t34$5, t34$6, t34$7;
      if (context == null) dart.nullFailed(I[10], 899, 30, "context");
      if (offset == null) dart.nullFailed(I[10], 899, 46, "offset");
      if (this.pdfDocument == null) {
        return;
      }
      let canvas = context.canvas;
      let theme = theme$.Theme.of(this.context);
      let selectionTheme = text_selection_theme.TextSelectionTheme.of(this.context);
      let cupertinoTheme = theme$0.CupertinoTheme.of(this.context);
      switch (theme.platform) {
        case C[203] || CT.C203:
        case C[204] || CT.C204:
        {
          this[_selectionColor] == null ? this[_selectionColor] = (t34 = selectionTheme.selectionColor, t34 == null ? cupertinoTheme.primaryColor.withOpacity(0.4) : t34) : null;
          this[_selectionHandleColor] == null ? this[_selectionHandleColor] = (t34$ = selectionTheme.selectionHandleColor, t34$ == null ? cupertinoTheme.primaryColor : t34$) : null;
          break;
        }
        case C[205] || CT.C205:
        case C[206] || CT.C206:
        case C[207] || CT.C207:
        case C[208] || CT.C208:
        {
          this[_selectionColor] == null ? this[_selectionColor] = (t34$0 = selectionTheme.selectionColor, t34$0 == null ? theme.colorScheme.primary.withOpacity(0.4) : t34$0) : null;
          this[_selectionHandleColor] == null ? this[_selectionHandleColor] = (t34$1 = selectionTheme.selectionHandleColor, t34$1 == null ? theme.colorScheme.primary : t34$1) : null;
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let textPaint = (t34$2 = ui.Paint.new(), (() => {
        t34$2.color = dart.nullCheck(this[_selectionColor]);
        return t34$2;
      })());
      let bubblePaint = (t34$3 = ui.Paint.new(), (() => {
        t34$3.color = dart.nullCheck(this[_selectionHandleColor]);
        return t34$3;
      })());
      this[_zoomPercentage] = dart.notNull(this.pdfViewerController.zoomLevel) > dart.notNull(this[_maximumZoomLevel]) ? this[_maximumZoomLevel] : this.pdfViewerController.zoomLevel;
      if (dart.test(pdfviewer_canvas._textSelectionHelper.mouseSelectionEnabled) && pdfviewer_canvas._textSelectionHelper.textLines != null && pdfviewer_canvas._textSelectionHelper.endBubbleX != null && pdfviewer_canvas._textSelectionHelper.endBubbleY != null) {
        let startGlyph = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph);
        let details = new ui.Offset.new(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX), dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY));
        if (pdfviewer_canvas._textSelectionHelper.viewId == this.pageIndex) {
          pdfviewer_canvas._textSelectionHelper.copiedText = "";
          pdfviewer_canvas._textSelectionHelper.selectedTextLines[$clear]();
          t34$4 = pdfviewer_canvas._textSelectionHelper.textLines;
          t34$4 == null ? null : t34$4[$forEach](dart.fn(textLine => {
            if (textLine == null) dart.nullFailed(I[10], 942, 50, "textLine");
            let startPoint = null;
            let endPoint = null;
            let glyphText = "";
            textLine.wordCollection[$forEach](dart.fn(textWord => {
              if (textWord == null) dart.nullFailed(I[10], 946, 44, "textWord");
              textWord.glyphs[$forEach](dart.fn(textGlyph => {
                if (textGlyph == null) dart.nullFailed(I[10], 947, 38, "textGlyph");
                let canSelectGlyph = this.checkGlyphInRegion(textGlyph, startGlyph, details);
                if (dart.test(canSelectGlyph)) {
                  startPoint == null ? startPoint = textGlyph.bounds : null;
                  endPoint = textGlyph.bounds;
                  glyphText = glyphText + dart.notNull(textGlyph.text);
                  pdfviewer_canvas._textSelectionHelper.copiedText = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.copiedText) + dart.notNull(textGlyph.text);
                  let textRectOffset = offset.translate(textGlyph.bounds.left, textGlyph.bounds.top)['&'](new ui.Size.new(textGlyph.bounds.width, textGlyph.bounds.height));
                  canvas.drawRect(textRectOffset, textPaint);
                }
                if (startPoint != null && endPoint != null && dart.equals(textGlyph, textLine.wordCollection[$last].glyphs[$last])) {
                  pdfviewer_canvas._textSelectionHelper.selectedTextLines[$add](new pdftextline.PdfTextLine.new(new ui.Rect.fromLTRB(dart.nullCheck(startPoint).left, dart.nullCheck(startPoint).top, dart.nullCheck(endPoint).right, dart.nullCheck(endPoint).bottom), glyphText, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId)));
                  let startOffset = new ui.Offset.new(startGlyph.bounds.left, startGlyph.bounds.top);
                  let endOffset = new ui.Offset.new(dart.nullCheck(endPoint).right, dart.nullCheck(endPoint).bottom);
                  if (dart.notNull(details.dy) < dart.notNull(startGlyph.bounds.top)) {
                    startOffset = new ui.Offset.new(details.dx, details.dy);
                  }
                  pdfviewer_canvas._textSelectionHelper.globalSelectedRegion = new ui.Rect.fromPoints(this.localToGlobal(startOffset), this.localToGlobal(endOffset));
                }
              }, T.TextGlyphTovoid()));
            }, T.TextWordTovoid()));
          }, T.TextLineTovoid()));
        }
      }
      if (this.pageIndex == this[_viewId]) {
        if (dart.test(this[_isTOCTapped])) {
          let heightPercentage = dart.notNull(dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(this[_viewId])).size.height) / dart.notNull(this.height);
          let wordPaint = (t34$5 = ui.Paint.new(), (() => {
            t34$5.color = new ui.Color.fromRGBO(228, 238, 244, 0.75);
            return t34$5;
          })());
          canvas.drawRect(offset.translate(dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.left) / heightPercentage, dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.top) / heightPercentage)['&'](new ui.Size.new(dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.width) / heightPercentage, dart.notNull(dart.nullCheck(this[_documentLinkAnnotation]).bounds.height) / heightPercentage)), wordPaint);
          T.FutureOfNull().delayed(core.Duration.zero, dart.fn(() => async.async(core.Null, (function*() {
            let t34;
            if (dart.notNull(this.pdfViewerController.zoomLevel) <= 1) {
              this.pdfViewerController.jumpTo({yOffset: dart.nullCheck(this[_totalPageOffset])});
            } else {
              t34 = dart.nullCheck(this[_totalPageOffset]);
              this.onDocumentLinkNavigationInvoked(t34);
            }
          }).bind(this)), T.VoidToFutureOfNull()));
          this[_isTOCTapped] = false;
        }
      }
      if (this.textCollection != null && !dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled)) {
        let searchTextPaint = (t34$6 = ui.Paint.new(), (() => {
          t34$6.color = this.searchTextHighlightColor.withOpacity(0.3);
          return t34$6;
        })());
        let currentInstancePaint = (t34$7 = ui.Paint.new(), (() => {
          t34$7.color = this.searchTextHighlightColor.withOpacity(0.6);
          return t34$7;
        })());
        let _pageNumber = 0;
        for (let i = 0; i < dart.notNull(dart.nullCheck(this.textCollection)[$length]); i = i + 1) {
          let item = dart.nullCheck(this.textCollection)[$_get](i);
          let _heightPercentage = dart.notNull(dart.nullCheck(this.pdfDocument).pages._get(item.pageIndex).size.height) / dart.notNull(this.height);
          if (this.pageIndex == item.pageIndex) {
            canvas.drawRect(offset.translate(dart.notNull(dart.nullCheck(this.textCollection)[$_get](i).bounds.left) / _heightPercentage, dart.notNull(dart.nullCheck(this.textCollection)[$_get](i).bounds.top) / _heightPercentage)['&'](new ui.Size.new(dart.notNull(dart.nullCheck(this.textCollection)[$_get](i).bounds.width) / _heightPercentage, dart.notNull(dart.nullCheck(this.textCollection)[$_get](i).bounds.height) / _heightPercentage)), searchTextPaint);
          }
          if (dart.nullCheck(this.textCollection)[$_get](dart.notNull(this.pdfTextSearchResult.currentInstanceIndex) - 1).pageIndex == this.pageIndex) {
            if (dart.nullCheck(this.textCollection)[$_get](dart.notNull(this.pdfTextSearchResult.currentInstanceIndex) - 1).pageIndex != _pageNumber) {
              canvas.drawRect(offset.translate(dart.notNull(dart.nullCheck(this.textCollection)[$_get](dart.notNull(this.pdfTextSearchResult.currentInstanceIndex) - 1).bounds.left) / _heightPercentage, dart.notNull(dart.nullCheck(this.textCollection)[$_get](dart.notNull(this.pdfTextSearchResult.currentInstanceIndex) - 1).bounds.top) / _heightPercentage)['&'](new ui.Size.new(dart.notNull(dart.nullCheck(this.textCollection)[$_get](dart.notNull(this.pdfTextSearchResult.currentInstanceIndex) - 1).bounds.width) / _heightPercentage, dart.notNull(dart.nullCheck(this.textCollection)[$_get](dart.notNull(this.pdfTextSearchResult.currentInstanceIndex) - 1).bounds.height) / _heightPercentage)), currentInstancePaint);
              _pageNumber = dart.nullCheck(this.textCollection)[$_get](dart.notNull(this.pdfTextSearchResult.currentInstanceIndex) - 1).pageIndex;
            }
          } else if (dart.notNull(item.pageIndex) > dart.notNull(this.pageIndex)) {
            break;
          }
        }
      }
      if (dart.test(this[_longPressed])) {
        let _heightPercentage = dart.notNull(dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId)).size.height) / dart.notNull(this.height);
        pdfviewer_canvas._textSelectionHelper.heightPercentage = _heightPercentage;
        pdfviewer_canvas._textSelectionHelper.textLines = new pdf.PdfTextExtractor.new(dart.nullCheck(this.pdfDocument)).extractTextLines({startPageIndex: pdfviewer_canvas._textSelectionHelper.viewId});
        for (let textLineIndex = 0; textLineIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]); textLineIndex = textLineIndex + 1) {
          let line = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
          let textWordCollection = line.wordCollection;
          for (let wordIndex = 0; wordIndex < dart.notNull(textWordCollection[$length]); wordIndex = wordIndex + 1) {
            let textWord = textWordCollection[$_get](wordIndex);
            let wordBounds = textWord.bounds;
            if (this[_tapDetails] != null && dart.test(wordBounds.contains(dart.nullCheck(this[_tapDetails])['*'](_heightPercentage)))) {
              pdfviewer_canvas._textSelectionHelper.startBubbleLine = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
              pdfviewer_canvas._textSelectionHelper.copiedText = textWord.text;
              pdfviewer_canvas._textSelectionHelper.endBubbleLine = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
              this[_startBubbleTapX] = dart.notNull(textWord.bounds.bottomLeft.dx) / _heightPercentage;
              pdfviewer_canvas._textSelectionHelper.startBubbleY = textWord.bounds.bottomLeft.dy;
              this[_endBubbleTapX] = dart.notNull(textWord.bounds.bottomRight.dx) / _heightPercentage;
              pdfviewer_canvas._textSelectionHelper.endBubbleY = textWord.bounds.bottomRight.dy;
              pdfviewer_canvas._textSelectionHelper.startBubbleX = textWord.bounds.bottomLeft.dx;
              pdfviewer_canvas._textSelectionHelper.endBubbleX = textWord.bounds.bottomRight.dx;
              let textRectOffset = offset.translate(dart.notNull(textWord.bounds.left) / _heightPercentage, dart.notNull(textWord.bounds.top) / _heightPercentage)['&'](new ui.Size.new(dart.notNull(wordBounds.width) / _heightPercentage, dart.notNull(wordBounds.height) / _heightPercentage));
              this[_drawTextRect](canvas, textPaint, textRectOffset);
              let startBubbleOffset = offset.translate(dart.notNull(textWord.bounds.bottomLeft.dx) / _heightPercentage, dart.notNull(textWord.bounds.bottomLeft.dy) / _heightPercentage);
              let endBubbleOffset = offset.translate(dart.notNull(textWord.bounds.bottomRight.dx) / _heightPercentage, dart.notNull(textWord.bounds.bottomRight.dy) / _heightPercentage);
              this[_drawStartBubble](canvas, bubblePaint, startBubbleOffset);
              this[_drawEndBubble](canvas, bubblePaint, endBubbleOffset);
              pdfviewer_canvas._textSelectionHelper.globalSelectedRegion = new ui.Rect.fromPoints(this.localToGlobal(new ui.Offset.new(dart.notNull(textWord.bounds.topLeft.dx) / _heightPercentage, dart.notNull(textWord.bounds.topLeft.dy) / _heightPercentage)), this.localToGlobal(new ui.Offset.new(dart.notNull(textWord.bounds.bottomRight.dx) / _heightPercentage, dart.notNull(textWord.bounds.bottomRight.dy) / _heightPercentage)));
              pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textWord.glyphs[$first];
              pdfviewer_canvas._textSelectionHelper.selectionEnabled = true;
              pdfviewer_canvas._textSelectionHelper.selectedTextLines[$clear]();
              pdfviewer_canvas._textSelectionHelper.selectedTextLines[$add](new pdftextline.PdfTextLine.new(textWord.bounds, textWord.text, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId)));
              this[_ensureHistoryEntry$]();
              this[_sortTextLines]();
            }
          }
        }
        this[_longPressed] = false;
      } else if (dart.test(pdfviewer_canvas._textSelectionHelper.selectionEnabled) && this.pageIndex == pdfviewer_canvas._textSelectionHelper.viewId) {
        let _heightPercentage = dart.notNull(dart.nullCheck(this.pdfDocument).pages._get(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId)).size.height) / dart.notNull(this.height);
        pdfviewer_canvas._textSelectionHelper.heightPercentage = _heightPercentage;
        if (dart.test(this[_startBubbleDragging])) {
          for (let textLineIndex = 0; textLineIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]); textLineIndex = textLineIndex + 1) {
            let line = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
            if (this[_dragDetails] != null && dart.notNull(dart.nullCheck(this[_dragDetails]).dy) <= dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / _heightPercentage && dart.notNull(dart.nullCheck(this[_dragDetails]).dy) >= dart.notNull(line.bounds.top) / _heightPercentage) {
              pdfviewer_canvas._textSelectionHelper.startBubbleLine = line;
              pdfviewer_canvas._textSelectionHelper.startBubbleY = line.bounds.bottomLeft.dy;
            }
            if (this[_dragDetails] != null && dart.notNull(dart.nullCheck(this[_dragDetails]).dy) >= dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / _heightPercentage) {
              pdfviewer_canvas._textSelectionHelper.startBubbleLine = pdfviewer_canvas._textSelectionHelper.endBubbleLine;
              pdfviewer_canvas._textSelectionHelper.startBubbleY = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottom;
            }
            for (let wordIndex = 0; wordIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$length]); wordIndex = wordIndex + 1) {
              let textWord = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$_get](wordIndex);
              for (let glyphIndex = 0; glyphIndex < dart.notNull(textWord.glyphs[$length]); glyphIndex = glyphIndex + 1) {
                let textGlyph = textWord.glyphs[$_get](glyphIndex);
                if (dart.notNull(this[_startBubbleTapX]) >= dart.notNull(textGlyph.bounds.bottomLeft.dx) / _heightPercentage && dart.notNull(this[_startBubbleTapX]) <= dart.notNull(textGlyph.bounds.bottomRight.dx) / _heightPercentage) {
                  pdfviewer_canvas._textSelectionHelper.startBubbleX = textGlyph.bounds.bottomLeft.dx;
                  pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textGlyph;
                }
              }
            }
            if (dart.notNull(this[_startBubbleTapX]) < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.bottomLeft.dx) / _heightPercentage) {
              pdfviewer_canvas._textSelectionHelper.startBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.bottomLeft.dx;
              pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$first].glyphs[$first];
            }
            if (dart.notNull(this[_startBubbleTapX]) >= dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.bottomRight.dx) / _heightPercentage) {
              pdfviewer_canvas._textSelectionHelper.startBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$last].glyphs[$last].bounds.bottomLeft.dx;
              pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$last].glyphs[$last];
            }
            if (dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.bottom) / _heightPercentage === dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottom) / _heightPercentage && dart.notNull(this[_startBubbleTapX]) >= dart.notNull(this[_endBubbleTapX])) {
              for (let wordIndex = 0; wordIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$length]); wordIndex = wordIndex + 1) {
                let textWord = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).wordCollection[$_get](wordIndex);
                for (let glyphIndex = 0; glyphIndex < dart.notNull(textWord.glyphs[$length]); glyphIndex = glyphIndex + 1) {
                  let textGlyph = textWord.glyphs[$_get](glyphIndex);
                  if (dart.notNull(textGlyph.bounds.bottomRight.dx) / _heightPercentage === dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX) / _heightPercentage) {
                    pdfviewer_canvas._textSelectionHelper.startBubbleX = textGlyph.bounds.bottomLeft.dx;
                    pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph = textGlyph;
                    break;
                  }
                }
              }
            }
          }
        } else if (dart.test(this[_endBubbleDragging])) {
          for (let textLineIndex = 0; textLineIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]); textLineIndex = textLineIndex + 1) {
            let line = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
            if (this[_dragDetails] != null && dart.notNull(dart.nullCheck(this[_dragDetails]).dy) >= dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.top) / _heightPercentage && dart.notNull(dart.nullCheck(this[_dragDetails]).dy) >= dart.notNull(line.bounds.topLeft.dy) / _heightPercentage) {
              pdfviewer_canvas._textSelectionHelper.endBubbleLine = line;
              pdfviewer_canvas._textSelectionHelper.endBubbleY = line.bounds.bottomRight.dy;
            }
            for (let wordIndex = 0; wordIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).wordCollection[$length]); wordIndex = wordIndex + 1) {
              let textWord = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).wordCollection[$_get](wordIndex);
              for (let glyphIndex = 0; glyphIndex < dart.notNull(textWord.glyphs[$length]); glyphIndex = glyphIndex + 1) {
                let textGlyph = textWord.glyphs[$_get](glyphIndex);
                if (dart.notNull(this[_endBubbleTapX]) >= dart.notNull(textGlyph.bounds.bottomLeft.dx) / _heightPercentage && dart.notNull(this[_endBubbleTapX]) <= dart.notNull(textGlyph.bounds.bottomRight.dx) / _heightPercentage) {
                  pdfviewer_canvas._textSelectionHelper.endBubbleX = textGlyph.bounds.bottomRight.dx;
                }
              }
            }
            if (this[_endBubbleTapX][$floor]() > (dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottomRight.dx) / _heightPercentage)[$floor]()) {
              pdfviewer_canvas._textSelectionHelper.endBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottomRight.dx;
            }
            if (this[_endBubbleTapX][$floor]() <= (dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottomLeft.dx) / _heightPercentage)[$floor]()) {
              pdfviewer_canvas._textSelectionHelper.endBubbleX = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).wordCollection[$first].glyphs[$first].bounds.bottomRight.dx;
            }
            if (dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).bounds.bottom) / _heightPercentage === dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.bottom) / _heightPercentage && dart.notNull(this[_endBubbleTapX]) < dart.notNull(this[_startBubbleTapX])) {
              for (let wordIndex = 0; wordIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).wordCollection[$length]); wordIndex = wordIndex + 1) {
                let textWord = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleLine).wordCollection[$_get](wordIndex);
                for (let glyphIndex = 0; glyphIndex < dart.notNull(textWord.glyphs[$length]); glyphIndex = glyphIndex + 1) {
                  let textGlyph = textWord.glyphs[$_get](glyphIndex);
                  if (dart.notNull(textGlyph.bounds.bottomLeft.dx) / _heightPercentage === dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleX) / _heightPercentage) {
                    pdfviewer_canvas._textSelectionHelper.endBubbleX = textGlyph.bounds.bottomRight.dx;
                    break;
                  }
                }
              }
            }
          }
        }
        pdfviewer_canvas._textSelectionHelper.copiedText = "";
        pdfviewer_canvas._textSelectionHelper.selectedTextLines[$clear]();
        for (let textLineIndex = 0; textLineIndex < dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$length]); textLineIndex = textLineIndex + 1) {
          let line = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.textLines)[$_get](textLineIndex);
          let startPoint = null;
          let endPoint = null;
          let glyphText = "";
          let textWordCollection = line.wordCollection;
          for (let wordIndex = 0; wordIndex < dart.notNull(textWordCollection[$length]); wordIndex = wordIndex + 1) {
            let textWord = textWordCollection[$_get](wordIndex);
            for (let glyphIndex = 0; glyphIndex < dart.notNull(textWord.glyphs[$length]); glyphIndex = glyphIndex + 1) {
              let glyph = textWord.glyphs[$_get](glyphIndex);
              if (dart.notNull(glyph.bounds.bottom) / _heightPercentage === dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleLine).bounds.bottom) / _heightPercentage) {
                if (dart.notNull(glyph.bounds.bottomCenter.dx) / _heightPercentage >= dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleX) / _heightPercentage && dart.notNull(glyph.bounds.bottomCenter.dx) / _heightPercentage < dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX) / _heightPercentage || dart.notNull(glyph.bounds.bottomCenter.dx) / _heightPercentage >= dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleX) / _heightPercentage && dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / _heightPercentage > dart.notNull(glyph.bounds.bottom) / _heightPercentage) {
                  startPoint == null ? startPoint = glyph.bounds : null;
                  endPoint = glyph.bounds;
                  glyphText = glyphText + dart.notNull(glyph.text);
                  pdfviewer_canvas._textSelectionHelper.copiedText = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.copiedText) + dart.notNull(glyph.text);
                  let textRectOffset = offset.translate(dart.notNull(glyph.bounds.left) / _heightPercentage, dart.notNull(glyph.bounds.top) / _heightPercentage)['&'](new ui.Size.new(dart.notNull(glyph.bounds.width) / _heightPercentage, dart.notNull(glyph.bounds.height) / _heightPercentage));
                  this[_drawTextRect](canvas, textPaint, textRectOffset);
                }
              } else if (dart.notNull(glyph.bounds.bottomLeft.dy) / _heightPercentage >= dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleY) / _heightPercentage && dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX) / _heightPercentage > dart.notNull(glyph.bounds.bottomCenter.dx) / _heightPercentage && dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / _heightPercentage > dart.notNull(glyph.bounds.top) / _heightPercentage || dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / _heightPercentage > dart.notNull(glyph.bounds.bottom) / _heightPercentage && dart.notNull(glyph.bounds.bottomLeft.dy) / _heightPercentage >= dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleY) / _heightPercentage) {
                startPoint == null ? startPoint = glyph.bounds : null;
                endPoint = glyph.bounds;
                glyphText = glyphText + dart.notNull(glyph.text);
                pdfviewer_canvas._textSelectionHelper.copiedText = dart.nullCheck(pdfviewer_canvas._textSelectionHelper.copiedText) + dart.notNull(glyph.text);
                let textRectOffset = offset.translate(dart.notNull(glyph.bounds.left) / _heightPercentage, dart.notNull(glyph.bounds.top) / _heightPercentage)['&'](new ui.Size.new(dart.notNull(glyph.bounds.width) / _heightPercentage, dart.notNull(glyph.bounds.height) / _heightPercentage));
                this[_drawTextRect](canvas, textPaint, textRectOffset);
              }
              if (startPoint != null && endPoint != null && dart.equals(glyph, line.wordCollection[$last].glyphs[$last])) {
                pdfviewer_canvas._textSelectionHelper.selectedTextLines[$add](new pdftextline.PdfTextLine.new(new ui.Rect.fromLTRB(startPoint.left, startPoint.top, endPoint.right, endPoint.bottom), glyphText, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.viewId)));
              }
            }
          }
        }
        let startBubbleOffset = offset.translate(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleX) / _heightPercentage, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.startBubbleY) / _heightPercentage);
        let endBubbleOffset = offset.translate(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX) / _heightPercentage, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / _heightPercentage);
        this[_drawStartBubble](canvas, bubblePaint, startBubbleOffset);
        this[_drawEndBubble](canvas, bubblePaint, endBubbleOffset);
        pdfviewer_canvas._textSelectionHelper.globalSelectedRegion = new ui.Rect.fromPoints(this.localToGlobal(new ui.Offset.new(dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph).bounds.left) / _heightPercentage, dart.notNull(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.firstSelectedGlyph).bounds.top) / _heightPercentage)), this.localToGlobal(new ui.Offset.new(dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleX) / _heightPercentage, dart.nullCheck(pdfviewer_canvas._textSelectionHelper.endBubbleY) / _heightPercentage)));
      }
    }
  };
  (pdfviewer_canvas.CanvasRenderBox.new = function(height, width, context, pdfDocument, pdfPages, pageIndex, interactionMode, scrollController, pdfViewerController, enableDocumentLinkNavigation, enableTextSelection, onTextSelectionChanged, onTextSelectionDragStarted, onTextSelectionDragEnded, onDocumentLinkNavigationInvoked, textCollection, searchTextHighlightColor, isMobileWebView, pdfTextSearchResult) {
    let t10, t10$, t10$0, t10$1;
    if (height == null) dart.nullFailed(I[10], 141, 12, "height");
    if (width == null) dart.nullFailed(I[10], 142, 12, "width");
    if (context == null) dart.nullFailed(I[10], 143, 12, "context");
    if (pdfPages == null) dart.nullFailed(I[10], 145, 12, "pdfPages");
    if (pageIndex == null) dart.nullFailed(I[10], 146, 12, "pageIndex");
    if (interactionMode == null) dart.nullFailed(I[10], 147, 12, "interactionMode");
    if (scrollController == null) dart.nullFailed(I[10], 148, 12, "scrollController");
    if (pdfViewerController == null) dart.nullFailed(I[10], 149, 12, "pdfViewerController");
    if (enableDocumentLinkNavigation == null) dart.nullFailed(I[10], 150, 12, "enableDocumentLinkNavigation");
    if (enableTextSelection == null) dart.nullFailed(I[10], 151, 12, "enableTextSelection");
    if (onTextSelectionDragStarted == null) dart.nullFailed(I[10], 153, 12, "onTextSelectionDragStarted");
    if (onTextSelectionDragEnded == null) dart.nullFailed(I[10], 154, 12, "onTextSelectionDragEnded");
    if (onDocumentLinkNavigationInvoked == null) dart.nullFailed(I[10], 155, 12, "onDocumentLinkNavigationInvoked");
    if (searchTextHighlightColor == null) dart.nullFailed(I[10], 157, 12, "searchTextHighlightColor");
    if (isMobileWebView == null) dart.nullFailed(I[10], 158, 12, "isMobileWebView");
    if (pdfTextSearchResult == null) dart.nullFailed(I[10], 159, 12, "pdfTextSearchResult");
    this[__CanvasRenderBox_height] = null;
    this[__CanvasRenderBox_height_isSet] = false;
    this[__CanvasRenderBox_width] = null;
    this[__CanvasRenderBox_width_isSet] = false;
    this[__CanvasRenderBox_pageIndex] = null;
    this[__CanvasRenderBox_pageIndex_isSet] = false;
    this[__CanvasRenderBox_pdfDocument] = null;
    this[__CanvasRenderBox_pdfDocument_isSet] = false;
    this[__CanvasRenderBox_context] = null;
    this[__CanvasRenderBox_context_isSet] = false;
    this[__CanvasRenderBox_enableTextSelection] = null;
    this[__CanvasRenderBox_enableTextSelection_isSet] = false;
    this[__CanvasRenderBox_enableDocumentLinkNavigation] = null;
    this[__CanvasRenderBox_enableDocumentLinkNavigation_isSet] = false;
    this[__CanvasRenderBox_pdfPages] = null;
    this[__CanvasRenderBox_pdfPages_isSet] = false;
    this[__CanvasRenderBox_scrollController] = null;
    this[__CanvasRenderBox_scrollController_isSet] = false;
    this[__CanvasRenderBox_pdfViewerController] = null;
    this[__CanvasRenderBox_pdfViewerController_isSet] = false;
    this[__CanvasRenderBox_onTextSelectionDragStarted] = null;
    this[__CanvasRenderBox_onTextSelectionDragStarted_isSet] = false;
    this[__CanvasRenderBox_onTextSelectionDragEnded] = null;
    this[__CanvasRenderBox_onTextSelectionDragEnded_isSet] = false;
    this[__CanvasRenderBox_onTextSelectionChanged] = null;
    this[__CanvasRenderBox_onTextSelectionChanged_isSet] = false;
    this[__CanvasRenderBox_onDocumentLinkNavigationInvoked] = null;
    this[__CanvasRenderBox_onDocumentLinkNavigationInvoked_isSet] = false;
    this[__CanvasRenderBox_interactionMode] = null;
    this[__CanvasRenderBox_interactionMode_isSet] = false;
    this[__CanvasRenderBox_searchTextHighlightColor] = null;
    this[__CanvasRenderBox_searchTextHighlightColor_isSet] = false;
    this[__CanvasRenderBox_textCollection] = null;
    this[__CanvasRenderBox_textCollection_isSet] = false;
    this[__CanvasRenderBox_pdfTextSearchResult] = null;
    this[__CanvasRenderBox_pdfTextSearchResult_isSet] = false;
    this[__CanvasRenderBox_isMobileWebView] = null;
    this[__CanvasRenderBox_isMobileWebView_isSet] = false;
    this[_viewId] = null;
    this[_totalPageOffset] = null;
    this[_isTOCTapped] = false;
    this[_isMousePointer] = false;
    this[_startBubbleTapX] = 0.0;
    this[_endBubbleTapX] = 0.0;
    this[_bubbleSize] = 16.0;
    this[_maximumZoomLevel] = 2.0;
    this[_longPressed] = false;
    this[_startBubbleDragging] = false;
    this[_endBubbleDragging] = false;
    this[_zoomPercentage] = 0.0;
    this[_tapDetails] = null;
    this[_dragDetails] = null;
    this[_dragDownDetails] = null;
    this[_selectionColor] = null;
    this[_selectionHandleColor] = null;
    this[__CanvasRenderBox__tapRecognizer] = null;
    this[__CanvasRenderBox__tapRecognizer_isSet] = false;
    this[__CanvasRenderBox__dragRecognizer] = null;
    this[__CanvasRenderBox__dragRecognizer_isSet] = false;
    this[__CanvasRenderBox__longPressRecognizer] = null;
    this[__CanvasRenderBox__longPressRecognizer_isSet] = false;
    this[__CanvasRenderBox__verticalDragRecognizer] = null;
    this[__CanvasRenderBox__verticalDragRecognizer_isSet] = false;
    this[__CanvasRenderBox__documentLinkAnnotation] = null;
    this[__CanvasRenderBox__documentLinkAnnotation_isSet] = false;
    this[__CanvasRenderBox_height_isSet] = true;
    this[__CanvasRenderBox_height] = height;
    this[__CanvasRenderBox_width_isSet] = true;
    this[__CanvasRenderBox_width] = width;
    this[__CanvasRenderBox_context_isSet] = true;
    this[__CanvasRenderBox_context] = context;
    this[__CanvasRenderBox_pdfDocument_isSet] = true;
    this[__CanvasRenderBox_pdfDocument] = pdfDocument;
    this[__CanvasRenderBox_pdfPages_isSet] = true;
    this[__CanvasRenderBox_pdfPages] = pdfPages;
    this[__CanvasRenderBox_pageIndex_isSet] = true;
    this[__CanvasRenderBox_pageIndex] = pageIndex;
    this[__CanvasRenderBox_interactionMode_isSet] = true;
    this[__CanvasRenderBox_interactionMode] = interactionMode;
    this[__CanvasRenderBox_scrollController_isSet] = true;
    this[__CanvasRenderBox_scrollController] = scrollController;
    this[__CanvasRenderBox_pdfViewerController_isSet] = true;
    this[__CanvasRenderBox_pdfViewerController] = pdfViewerController;
    this[__CanvasRenderBox_enableDocumentLinkNavigation_isSet] = true;
    this[__CanvasRenderBox_enableDocumentLinkNavigation] = enableDocumentLinkNavigation;
    this[__CanvasRenderBox_enableTextSelection_isSet] = true;
    this[__CanvasRenderBox_enableTextSelection] = enableTextSelection;
    this[__CanvasRenderBox_onTextSelectionChanged_isSet] = true;
    this[__CanvasRenderBox_onTextSelectionChanged] = onTextSelectionChanged;
    this[__CanvasRenderBox_onTextSelectionDragStarted_isSet] = true;
    this[__CanvasRenderBox_onTextSelectionDragStarted] = onTextSelectionDragStarted;
    this[__CanvasRenderBox_onTextSelectionDragEnded_isSet] = true;
    this[__CanvasRenderBox_onTextSelectionDragEnded] = onTextSelectionDragEnded;
    this[__CanvasRenderBox_onDocumentLinkNavigationInvoked_isSet] = true;
    this[__CanvasRenderBox_onDocumentLinkNavigationInvoked] = onDocumentLinkNavigationInvoked;
    this[__CanvasRenderBox_textCollection_isSet] = true;
    this[__CanvasRenderBox_textCollection] = textCollection;
    this[__CanvasRenderBox_searchTextHighlightColor_isSet] = true;
    this[__CanvasRenderBox_searchTextHighlightColor] = searchTextHighlightColor;
    this[__CanvasRenderBox_isMobileWebView_isSet] = true;
    this[__CanvasRenderBox_isMobileWebView] = isMobileWebView;
    this[__CanvasRenderBox_pdfTextSearchResult_isSet] = true;
    this[__CanvasRenderBox_pdfTextSearchResult] = pdfTextSearchResult;
    pdfviewer_canvas.CanvasRenderBox.__proto__.new.call(this);
    let team = new team$.GestureArenaTeam.new();
    this[_tapRecognizer] = (t10 = new tap.TapGestureRecognizer.new(), (() => {
      t10.onTapUp = dart.bind(this, 'handleTapUp');
      t10.onTapDown = dart.bind(this, 'handleTapDown');
      return t10;
    })());
    this[_longPressRecognizer] = (t10$ = new long_press.LongPressGestureRecognizer.new(), (() => {
      t10$.onLongPressStart = dart.bind(this, 'handleLongPressStart');
      return t10$;
    })());
    this[_dragRecognizer] = (t10$0 = new monodrag.PanGestureRecognizer.new(), (() => {
      t10$0.team = team;
      t10$0.onStart = dart.bind(this, 'handleDragStart');
      t10$0.onUpdate = dart.bind(this, 'handleDragUpdate');
      t10$0.onEnd = dart.bind(this, 'handleDragEnd');
      t10$0.onDown = dart.bind(this, 'handleDragDown');
      return t10$0;
    })());
    this[_verticalDragRecognizer] = (t10$1 = new monodrag.VerticalDragGestureRecognizer.new(), (() => {
      t10$1.team = team;
      t10$1.onStart = dart.bind(this, 'handleDragStart');
      t10$1.onUpdate = dart.bind(this, 'handleDragUpdate');
      t10$1.onEnd = dart.bind(this, 'handleDragEnd');
      return t10$1;
    })());
  }).prototype = pdfviewer_canvas.CanvasRenderBox.prototype;
  dart.addTypeTests(pdfviewer_canvas.CanvasRenderBox);
  dart.addTypeCaches(pdfviewer_canvas.CanvasRenderBox);
  dart.setMethodSignature(pdfviewer_canvas.CanvasRenderBox, () => ({
    __proto__: dart.getMethods(pdfviewer_canvas.CanvasRenderBox.__proto__),
    handleTapUp: dart.fnType(dart.void, [tap.TapUpDetails]),
    handleTapDown: dart.fnType(dart.void, [tap.TapDownDetails]),
    handleLongPressStart: dart.fnType(dart.void, [long_press.LongPressStartDetails]),
    handleDragStart: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    handleDragUpdate: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    handleDragEnd: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    handleDragDown: dart.fnType(dart.void, [drag_details.DragDownDetails]),
    handleDoubleTapDown: dart.fnType(dart.void, [dart.dynamic]),
    handleTripleTapDown: dart.fnType(dart.void, [dart.dynamic]),
    [_enableMouseSelection]: dart.fnType(dart.void, [dart.dynamic, core.String]),
    [_enableSelection]: dart.fnType(dart.void, [core.String]),
    [_triggerNullCallback]: dart.fnType(dart.void, []),
    [_triggerValueCallback]: dart.fnType(dart.void, []),
    scrollStarted: dart.fnType(dart.void, []),
    scrollEnded: dart.fnType(dart.void, []),
    [_checkStartBubblePosition]: dart.fnType(core.bool, []),
    [_checkEndBubblePosition]: dart.fnType(core.bool, []),
    [_sortTextLines]: dart.fnType(dart.void, []),
    enableSelection: dart.fnType(dart.void, []),
    [_ensureHistoryEntry$]: dart.fnType(dart.void, []),
    [_handleHistoryEntryRemoved$]: dart.fnType(dart.void, []),
    clearSelection: dart.fnType(core.bool, []),
    dispose: dart.fnType(dart.void, []),
    findTextWhileHover: dart.fnType(dart.nullable(pdf.TextGlyph), [dart.dynamic]),
    findTOC: dart.fnType(core.bool, [dart.dynamic]),
    getSelectionDetails: dart.fnType(pdfviewer_helper.TextSelectionHelper, []),
    clearMouseSelection: dart.fnType(dart.void, []),
    checkGlyphInRegion: dart.fnType(core.bool, [pdf.TextGlyph, pdf.TextGlyph, ui.Offset]),
    disposeMouseSelection: dart.fnType(dart.void, []),
    [_drawStartBubble]: dart.fnType(dart.void, [ui.Canvas, ui.Paint, ui.Offset]),
    [_drawEndBubble]: dart.fnType(dart.void, [ui.Canvas, ui.Paint, ui.Offset]),
    [_drawTextRect]: dart.fnType(dart.void, [ui.Canvas, ui.Paint, ui.Rect]),
    getSelectedTextLines: dart.fnType(dart.nullable(core.List$(pdftextline.PdfTextLine)), [])
  }));
  dart.setGetterSignature(pdfviewer_canvas.CanvasRenderBox, () => ({
    __proto__: dart.getGetters(pdfviewer_canvas.CanvasRenderBox.__proto__),
    height: core.double,
    width: core.double,
    pageIndex: core.int,
    pdfDocument: dart.nullable(pdf.PdfDocument),
    context: framework.BuildContext,
    enableTextSelection: core.bool,
    enableDocumentLinkNavigation: core.bool,
    pdfPages: core.Map$(core.int, pdf_page_view.PdfPageInfo),
    scrollController: scroll_controller.ScrollController,
    pdfViewerController: pdfviewer.PdfViewerController,
    onTextSelectionDragStarted: dart.fnType(dart.void, []),
    onTextSelectionDragEnded: dart.fnType(dart.void, []),
    onTextSelectionChanged: dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails])),
    onDocumentLinkNavigationInvoked: dart.fnType(dart.dynamic, [core.double]),
    interactionMode: enums.PdfInteractionMode,
    searchTextHighlightColor: ui.Color,
    textCollection: dart.nullable(core.List$(pdf.MatchedItem)),
    pdfTextSearchResult: pdfviewer.PdfTextSearchResult,
    isMobileWebView: core.bool,
    [_tapRecognizer]: tap.TapGestureRecognizer,
    [_dragRecognizer]: monodrag.PanGestureRecognizer,
    [_longPressRecognizer]: long_press.LongPressGestureRecognizer,
    [_verticalDragRecognizer]: monodrag.VerticalDragGestureRecognizer,
    [_documentLinkAnnotation]: dart.nullable(pdf.PdfDocumentLinkAnnotation)
  }));
  dart.setSetterSignature(pdfviewer_canvas.CanvasRenderBox, () => ({
    __proto__: dart.getSetters(pdfviewer_canvas.CanvasRenderBox.__proto__),
    height: core.double,
    width: core.double,
    pageIndex: core.int,
    pdfDocument: dart.nullable(pdf.PdfDocument),
    context: framework.BuildContext,
    enableTextSelection: core.bool,
    enableDocumentLinkNavigation: core.bool,
    pdfPages: core.Map$(core.int, pdf_page_view.PdfPageInfo),
    scrollController: scroll_controller.ScrollController,
    pdfViewerController: pdfviewer.PdfViewerController,
    onTextSelectionDragStarted: dart.fnType(dart.void, []),
    onTextSelectionDragEnded: dart.fnType(dart.void, []),
    onTextSelectionChanged: dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails])),
    onDocumentLinkNavigationInvoked: dart.fnType(dart.dynamic, [core.double]),
    interactionMode: enums.PdfInteractionMode,
    searchTextHighlightColor: ui.Color,
    textCollection: dart.nullable(core.List$(pdf.MatchedItem)),
    pdfTextSearchResult: pdfviewer.PdfTextSearchResult,
    isMobileWebView: core.bool,
    [_tapRecognizer]: tap.TapGestureRecognizer,
    [_dragRecognizer]: monodrag.PanGestureRecognizer,
    [_longPressRecognizer]: long_press.LongPressGestureRecognizer,
    [_verticalDragRecognizer]: monodrag.VerticalDragGestureRecognizer,
    [_documentLinkAnnotation]: dart.nullable(pdf.PdfDocumentLinkAnnotation)
  }));
  dart.setLibraryUri(pdfviewer_canvas.CanvasRenderBox, I[11]);
  dart.setFieldSignature(pdfviewer_canvas.CanvasRenderBox, () => ({
    __proto__: dart.getFields(pdfviewer_canvas.CanvasRenderBox.__proto__),
    [__CanvasRenderBox_height]: dart.fieldType(dart.nullable(core.double)),
    [__CanvasRenderBox_height_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_width]: dart.fieldType(dart.nullable(core.double)),
    [__CanvasRenderBox_width_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_pageIndex]: dart.fieldType(dart.nullable(core.int)),
    [__CanvasRenderBox_pageIndex_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_pdfDocument]: dart.fieldType(dart.nullable(pdf.PdfDocument)),
    [__CanvasRenderBox_pdfDocument_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_context]: dart.fieldType(dart.nullable(framework.BuildContext)),
    [__CanvasRenderBox_context_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_enableTextSelection]: dart.fieldType(dart.nullable(core.bool)),
    [__CanvasRenderBox_enableTextSelection_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_enableDocumentLinkNavigation]: dart.fieldType(dart.nullable(core.bool)),
    [__CanvasRenderBox_enableDocumentLinkNavigation_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_pdfPages]: dart.fieldType(dart.nullable(core.Map$(core.int, pdf_page_view.PdfPageInfo))),
    [__CanvasRenderBox_pdfPages_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_scrollController]: dart.fieldType(dart.nullable(scroll_controller.ScrollController)),
    [__CanvasRenderBox_scrollController_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_pdfViewerController]: dart.fieldType(dart.nullable(pdfviewer.PdfViewerController)),
    [__CanvasRenderBox_pdfViewerController_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_onTextSelectionDragStarted]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
    [__CanvasRenderBox_onTextSelectionDragStarted_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_onTextSelectionDragEnded]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
    [__CanvasRenderBox_onTextSelectionDragEnded_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_onTextSelectionChanged]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails]))),
    [__CanvasRenderBox_onTextSelectionChanged_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_onDocumentLinkNavigationInvoked]: dart.fieldType(dart.nullable(dart.fnType(dart.dynamic, [core.double]))),
    [__CanvasRenderBox_onDocumentLinkNavigationInvoked_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_interactionMode]: dart.fieldType(dart.nullable(enums.PdfInteractionMode)),
    [__CanvasRenderBox_interactionMode_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_searchTextHighlightColor]: dart.fieldType(dart.nullable(ui.Color)),
    [__CanvasRenderBox_searchTextHighlightColor_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_textCollection]: dart.fieldType(dart.nullable(core.List$(pdf.MatchedItem))),
    [__CanvasRenderBox_textCollection_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_pdfTextSearchResult]: dart.fieldType(dart.nullable(pdfviewer.PdfTextSearchResult)),
    [__CanvasRenderBox_pdfTextSearchResult_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox_isMobileWebView]: dart.fieldType(dart.nullable(core.bool)),
    [__CanvasRenderBox_isMobileWebView_isSet]: dart.fieldType(core.bool),
    [_viewId]: dart.fieldType(dart.nullable(core.int)),
    [_totalPageOffset]: dart.fieldType(dart.nullable(core.double)),
    [_isTOCTapped]: dart.fieldType(core.bool),
    [_isMousePointer]: dart.fieldType(core.bool),
    [_startBubbleTapX]: dart.fieldType(core.double),
    [_endBubbleTapX]: dart.fieldType(core.double),
    [_bubbleSize]: dart.finalFieldType(core.double),
    [_maximumZoomLevel]: dart.finalFieldType(core.double),
    [_longPressed]: dart.fieldType(core.bool),
    [_startBubbleDragging]: dart.fieldType(core.bool),
    [_endBubbleDragging]: dart.fieldType(core.bool),
    [_zoomPercentage]: dart.fieldType(core.double),
    [_tapDetails]: dart.fieldType(dart.nullable(ui.Offset)),
    [_dragDetails]: dart.fieldType(dart.nullable(ui.Offset)),
    [_dragDownDetails]: dart.fieldType(dart.nullable(ui.Offset)),
    [_selectionColor]: dart.fieldType(dart.nullable(ui.Color)),
    [_selectionHandleColor]: dart.fieldType(dart.nullable(ui.Color)),
    [__CanvasRenderBox__tapRecognizer]: dart.fieldType(dart.nullable(tap.TapGestureRecognizer)),
    [__CanvasRenderBox__tapRecognizer_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox__dragRecognizer]: dart.fieldType(dart.nullable(monodrag.PanGestureRecognizer)),
    [__CanvasRenderBox__dragRecognizer_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox__longPressRecognizer]: dart.fieldType(dart.nullable(long_press.LongPressGestureRecognizer)),
    [__CanvasRenderBox__longPressRecognizer_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox__verticalDragRecognizer]: dart.fieldType(dart.nullable(monodrag.VerticalDragGestureRecognizer)),
    [__CanvasRenderBox__verticalDragRecognizer_isSet]: dart.fieldType(core.bool),
    [__CanvasRenderBox__documentLinkAnnotation]: dart.fieldType(dart.nullable(pdf.PdfDocumentLinkAnnotation)),
    [__CanvasRenderBox__documentLinkAnnotation_isSet]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(pdfviewer_canvas, {
    /*pdfviewer_canvas._textSelectionHelper*/get _textSelectionHelper() {
      return new pdfviewer_helper.TextSelectionHelper.new();
    },
    set _textSelectionHelper(_) {}
  }, false);
  var imageStream$ = dart.privateName(pdf_page_view, "PdfPageView.imageStream");
  var width$0 = dart.privateName(pdf_page_view, "PdfPageView.width");
  var height$0 = dart.privateName(pdf_page_view, "PdfPageView.height");
  var pageSpacing$ = dart.privateName(pdf_page_view, "PdfPageView.pageSpacing");
  var pdfDocument$1 = dart.privateName(pdf_page_view, "PdfPageView.pdfDocument");
  var viewportGlobalRect$ = dart.privateName(pdf_page_view, "PdfPageView.viewportGlobalRect");
  var enableDocumentLinkAnnotation$ = dart.privateName(pdf_page_view, "PdfPageView.enableDocumentLinkAnnotation");
  var pageIndex$0 = dart.privateName(pdf_page_view, "PdfPageView.pageIndex");
  var pdfPages$0 = dart.privateName(pdf_page_view, "PdfPageView.pdfPages");
  var scrollController$1 = dart.privateName(pdf_page_view, "PdfPageView.scrollController");
  var interactionMode$0 = dart.privateName(pdf_page_view, "PdfPageView.interactionMode");
  var pdfViewerController$3 = dart.privateName(pdf_page_view, "PdfPageView.pdfViewerController");
  var enableTextSelection$0 = dart.privateName(pdf_page_view, "PdfPageView.enableTextSelection");
  var onTextSelectionChanged$0 = dart.privateName(pdf_page_view, "PdfPageView.onTextSelectionChanged");
  var onTextSelectionDragStarted$0 = dart.privateName(pdf_page_view, "PdfPageView.onTextSelectionDragStarted");
  var onTextSelectionDragEnded$0 = dart.privateName(pdf_page_view, "PdfPageView.onTextSelectionDragEnded");
  var searchTextHighlightColor$0 = dart.privateName(pdf_page_view, "PdfPageView.searchTextHighlightColor");
  var textCollection$0 = dart.privateName(pdf_page_view, "PdfPageView.textCollection");
  var pdfTextSearchResult$0 = dart.privateName(pdf_page_view, "PdfPageView.pdfTextSearchResult");
  var onDocumentLinkNavigationInvoked$0 = dart.privateName(pdf_page_view, "PdfPageView.onDocumentLinkNavigationInvoked");
  var isMobileWebView$2 = dart.privateName(pdf_page_view, "PdfPageView.isMobileWebView");
  pdf_page_view.PdfPageView = class PdfPageView extends framework.StatefulWidget {
    get imageStream() {
      return this[imageStream$];
    }
    set imageStream(value) {
      super.imageStream = value;
    }
    get width() {
      return this[width$0];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$0];
    }
    set height(value) {
      super.height = value;
    }
    get pageSpacing() {
      return this[pageSpacing$];
    }
    set pageSpacing(value) {
      super.pageSpacing = value;
    }
    get pdfDocument() {
      return this[pdfDocument$1];
    }
    set pdfDocument(value) {
      super.pdfDocument = value;
    }
    get viewportGlobalRect() {
      return this[viewportGlobalRect$];
    }
    set viewportGlobalRect(value) {
      super.viewportGlobalRect = value;
    }
    get enableDocumentLinkAnnotation() {
      return this[enableDocumentLinkAnnotation$];
    }
    set enableDocumentLinkAnnotation(value) {
      super.enableDocumentLinkAnnotation = value;
    }
    get pageIndex() {
      return this[pageIndex$0];
    }
    set pageIndex(value) {
      super.pageIndex = value;
    }
    get pdfPages() {
      return this[pdfPages$0];
    }
    set pdfPages(value) {
      super.pdfPages = value;
    }
    get scrollController() {
      return this[scrollController$1];
    }
    set scrollController(value) {
      super.scrollController = value;
    }
    get interactionMode() {
      return this[interactionMode$0];
    }
    set interactionMode(value) {
      super.interactionMode = value;
    }
    get pdfViewerController() {
      return this[pdfViewerController$3];
    }
    set pdfViewerController(value) {
      super.pdfViewerController = value;
    }
    get enableTextSelection() {
      return this[enableTextSelection$0];
    }
    set enableTextSelection(value) {
      super.enableTextSelection = value;
    }
    get onTextSelectionChanged() {
      return this[onTextSelectionChanged$0];
    }
    set onTextSelectionChanged(value) {
      super.onTextSelectionChanged = value;
    }
    get onTextSelectionDragStarted() {
      return this[onTextSelectionDragStarted$0];
    }
    set onTextSelectionDragStarted(value) {
      super.onTextSelectionDragStarted = value;
    }
    get onTextSelectionDragEnded() {
      return this[onTextSelectionDragEnded$0];
    }
    set onTextSelectionDragEnded(value) {
      super.onTextSelectionDragEnded = value;
    }
    get searchTextHighlightColor() {
      return this[searchTextHighlightColor$0];
    }
    set searchTextHighlightColor(value) {
      super.searchTextHighlightColor = value;
    }
    get textCollection() {
      return this[textCollection$0];
    }
    set textCollection(value) {
      super.textCollection = value;
    }
    get pdfTextSearchResult() {
      return this[pdfTextSearchResult$0];
    }
    set pdfTextSearchResult(value) {
      super.pdfTextSearchResult = value;
    }
    get onDocumentLinkNavigationInvoked() {
      return this[onDocumentLinkNavigationInvoked$0];
    }
    set onDocumentLinkNavigationInvoked(value) {
      super.onDocumentLinkNavigationInvoked = value;
    }
    get isMobileWebView() {
      return this[isMobileWebView$2];
    }
    set isMobileWebView(value) {
      super.isMobileWebView = value;
    }
    createState() {
      return new pdf_page_view.PdfPageViewState.new();
    }
  };
  (pdf_page_view.PdfPageView.new = function(key, imageStream, viewportGlobalRect, interactionMode, width, height, pageSpacing, pdfDocument, pdfPages, pageIndex, scrollController, pdfViewerController, enableDocumentLinkAnnotation, enableTextSelection, onTextSelectionChanged, onTextSelectionDragStarted, onTextSelectionDragEnded, onDocumentLinkNavigationInvoked, searchTextHighlightColor, textCollection, isMobileWebView, pdfTextSearchResult, opts) {
    if (key == null) dart.nullFailed(I[12], 25, 11, "key");
    if (interactionMode == null) dart.nullFailed(I[12], 28, 12, "interactionMode");
    if (width == null) dart.nullFailed(I[12], 29, 12, "width");
    if (height == null) dart.nullFailed(I[12], 30, 12, "height");
    if (pageSpacing == null) dart.nullFailed(I[12], 31, 12, "pageSpacing");
    if (pdfPages == null) dart.nullFailed(I[12], 33, 12, "pdfPages");
    if (pageIndex == null) dart.nullFailed(I[12], 34, 12, "pageIndex");
    if (scrollController == null) dart.nullFailed(I[12], 35, 12, "scrollController");
    if (pdfViewerController == null) dart.nullFailed(I[12], 36, 12, "pdfViewerController");
    if (enableDocumentLinkAnnotation == null) dart.nullFailed(I[12], 37, 12, "enableDocumentLinkAnnotation");
    if (enableTextSelection == null) dart.nullFailed(I[12], 38, 12, "enableTextSelection");
    if (onTextSelectionDragStarted == null) dart.nullFailed(I[12], 40, 12, "onTextSelectionDragStarted");
    if (onTextSelectionDragEnded == null) dart.nullFailed(I[12], 41, 12, "onTextSelectionDragEnded");
    if (onDocumentLinkNavigationInvoked == null) dart.nullFailed(I[12], 42, 12, "onDocumentLinkNavigationInvoked");
    if (searchTextHighlightColor == null) dart.nullFailed(I[12], 43, 12, "searchTextHighlightColor");
    if (isMobileWebView == null) dart.nullFailed(I[12], 45, 12, "isMobileWebView");
    if (pdfTextSearchResult == null) dart.nullFailed(I[12], 46, 12, "pdfTextSearchResult");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[imageStream$] = imageStream;
    this[viewportGlobalRect$] = viewportGlobalRect;
    this[interactionMode$0] = interactionMode;
    this[width$0] = width;
    this[height$0] = height;
    this[pageSpacing$] = pageSpacing;
    this[pdfDocument$1] = pdfDocument;
    this[pdfPages$0] = pdfPages;
    this[pageIndex$0] = pageIndex;
    this[scrollController$1] = scrollController;
    this[pdfViewerController$3] = pdfViewerController;
    this[enableDocumentLinkAnnotation$] = enableDocumentLinkAnnotation;
    this[enableTextSelection$0] = enableTextSelection;
    this[onTextSelectionChanged$0] = onTextSelectionChanged;
    this[onTextSelectionDragStarted$0] = onTextSelectionDragStarted;
    this[onTextSelectionDragEnded$0] = onTextSelectionDragEnded;
    this[onDocumentLinkNavigationInvoked$0] = onDocumentLinkNavigationInvoked;
    this[searchTextHighlightColor$0] = searchTextHighlightColor;
    this[textCollection$0] = textCollection;
    this[isMobileWebView$2] = isMobileWebView;
    this[pdfTextSearchResult$0] = pdfTextSearchResult;
    pdf_page_view.PdfPageView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdf_page_view.PdfPageView.prototype;
  dart.addTypeTests(pdf_page_view.PdfPageView);
  dart.addTypeCaches(pdf_page_view.PdfPageView);
  dart.setMethodSignature(pdf_page_view.PdfPageView, () => ({
    __proto__: dart.getMethods(pdf_page_view.PdfPageView.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(pdf_page_view.PdfPageView, I[13]);
  dart.setFieldSignature(pdf_page_view.PdfPageView, () => ({
    __proto__: dart.getFields(pdf_page_view.PdfPageView.__proto__),
    imageStream: dart.finalFieldType(dart.nullable(typed_data.Uint8List)),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    pageSpacing: dart.finalFieldType(core.double),
    pdfDocument: dart.finalFieldType(dart.nullable(pdf.PdfDocument)),
    viewportGlobalRect: dart.finalFieldType(dart.nullable(ui.Rect)),
    enableDocumentLinkAnnotation: dart.finalFieldType(core.bool),
    pageIndex: dart.finalFieldType(core.int),
    pdfPages: dart.finalFieldType(core.Map$(core.int, pdf_page_view.PdfPageInfo)),
    scrollController: dart.finalFieldType(scroll_controller.ScrollController),
    interactionMode: dart.finalFieldType(enums.PdfInteractionMode),
    pdfViewerController: dart.finalFieldType(pdfviewer.PdfViewerController),
    enableTextSelection: dart.finalFieldType(core.bool),
    onTextSelectionChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails]))),
    onTextSelectionDragStarted: dart.finalFieldType(dart.fnType(dart.void, [])),
    onTextSelectionDragEnded: dart.finalFieldType(dart.fnType(dart.void, [])),
    searchTextHighlightColor: dart.finalFieldType(ui.Color),
    textCollection: dart.finalFieldType(dart.nullable(core.List$(pdf.MatchedItem))),
    pdfTextSearchResult: dart.finalFieldType(pdfviewer.PdfTextSearchResult),
    onDocumentLinkNavigationInvoked: dart.finalFieldType(dart.fnType(dart.dynamic, [core.double])),
    isMobileWebView: dart.finalFieldType(core.bool)
  }));
  var focusNode = dart.privateName(pdf_page_view, "PdfPageViewState.focusNode");
  var _pdfViewerThemeData$2 = dart.privateName(pdf_page_view, "_pdfViewerThemeData");
  var _canvasKey = dart.privateName(pdf_page_view, "_canvasKey");
  var _isTouchPointer = dart.privateName(pdf_page_view, "_isTouchPointer");
  var _isSecondaryTap = dart.privateName(pdf_page_view, "_isSecondaryTap");
  var _jumpOffset = dart.privateName(pdf_page_view, "_jumpOffset");
  var _cursor = dart.privateName(pdf_page_view, "_cursor");
  var _lastTap = dart.privateName(pdf_page_view, "_lastTap");
  var _consecutiveTaps = dart.privateName(pdf_page_view, "_consecutiveTaps");
  var _triggerTextSelectionCallback = dart.privateName(pdf_page_view, "_triggerTextSelectionCallback");
  var _scroll = dart.privateName(pdf_page_view, "_scroll");
  var _scrollWhileSelection = dart.privateName(pdf_page_view, "_scrollWhileSelection");
  var _updateSelectionPan = dart.privateName(pdf_page_view, "_updateSelectionPan");
  pdf_page_view.PdfPageViewState = class PdfPageViewState extends framework.State$(pdf_page_view.PdfPageView) {
    get focusNode() {
      return this[focusNode];
    }
    set focusNode(value) {
      this[focusNode] = value;
    }
    get canvasRenderBox() {
      let t34, t34$;
      return (t34 = this[_canvasKey].currentContext, t34 == null ? null : t34.findRenderObject()) != null ? pdfviewer_canvas.CanvasRenderBox.as((t34$ = this[_canvasKey].currentContext, t34$ == null ? null : t34$.findRenderObject())) : null;
    }
    initState() {
      if (true && !dart.test(this.widget.isMobileWebView)) {
        web_helper.preventDefaultMenu();
        this.focusNode.addListener(dart.fn(() => {
          web_helper.hasPrimaryFocus = this.focusNode.hasFocus;
        }, T.VoidTovoid()));
      }
      super.initState();
    }
    didChangeDependencies() {
      this[_pdfViewerThemeData$2] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
      super.didChangeDependencies();
    }
    dispose() {
      let t35, t34, t35$, t34$;
      t34 = binding$.PaintingBinding.instance;
      t34 == null ? null : (t35 = t34.imageCache, t35 == null ? null : t35.clear());
      t34$ = binding$.PaintingBinding.instance;
      t34$ == null ? null : (t35$ = t34$.imageCache, t35$ == null ? null : t35$.clearLiveImages());
      this[_pdfViewerThemeData$2] = null;
      super.dispose();
    }
    [_triggerTextSelectionCallback]() {
      if (this.widget.onTextSelectionChanged != null) {
        dart.nullCheck(this.widget.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(null, null));
      }
    }
    [_scroll](isReachedTop, isSelectionScroll) {
      if (isReachedTop == null) dart.nullFailed(I[12], 172, 21, "isReachedTop");
      if (isSelectionScroll == null) dart.nullFailed(I[12], 172, 40, "isSelectionScroll");
      if (dart.test(isSelectionScroll)) {
        dart.nullCheck(this.canvasRenderBox).getSelectionDetails().endBubbleY = dart.nullCheck(dart.nullCheck(this.canvasRenderBox).getSelectionDetails().endBubbleY) + (dart.test(isReachedTop) ? -3 : 3);
      }
      let position = dart.notNull(this.widget.scrollController.offset) + dart.notNull(dart.test(isReachedTop) ? -dart.notNull(this[_jumpOffset]) : this[_jumpOffset]);
      this.widget.scrollController.animateTo(position, {duration: new core.Duration.new({milliseconds: 50}), curve: curves.Curves.ease});
    }
    [_scrollWhileSelection]() {
      if (this.canvasRenderBox != null && dart.test(dart.nullCheck(this.canvasRenderBox).getSelectionDetails().isCursorExit) && dart.test(dart.nullCheck(this.canvasRenderBox).getSelectionDetails().mouseSelectionEnabled)) {
        let details = dart.nullCheck(this.canvasRenderBox).getSelectionDetails();
        let viewId = dart.nullCheck(dart.nullCheck(this.canvasRenderBox).getSelectionDetails().viewId);
        if (dart.test(details.isCursorReachedTop) && dart.notNull(this.widget.pdfViewerController.pageNumber) >= viewId + 1) {
          this[_scroll](details.isCursorReachedTop, true);
        } else if (!dart.test(details.isCursorReachedTop) && dart.notNull(this.widget.pdfViewerController.pageNumber) <= viewId + 1) {
          this[_scroll](details.isCursorReachedTop, true);
        }
        if (this.widget.onTextSelectionChanged != null) {
          dart.nullCheck(this.widget.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(null, null));
        }
      }
    }
    [_updateSelectionPan](details) {
      if (details == null) dart.nullFailed(I[12], 206, 46, "details");
      if (this.canvasRenderBox != null) {
        let helper = dart.nullCheck(this.canvasRenderBox).getSelectionDetails();
        if (this.widget.viewportGlobalRect != null && !dart.test(dart.nullCheck(this.widget.viewportGlobalRect).contains(details.globalPosition)) && dart.notNull(details.globalPosition.dx) <= dart.notNull(dart.nullCheck(this.widget.viewportGlobalRect).right) && dart.notNull(details.globalPosition.dx) >= dart.notNull(dart.nullCheck(this.widget.viewportGlobalRect).left)) {
          if (dart.notNull(details.globalPosition.dy) <= dart.notNull(dart.nullCheck(this.widget.viewportGlobalRect).top)) {
            helper.isCursorReachedTop = true;
          } else {
            helper.isCursorReachedTop = false;
          }
          helper.isCursorExit = true;
          if (helper.initialScrollOffset === 0) {
            helper.initialScrollOffset = this.widget.scrollController.offset;
          }
        } else if (dart.test(helper.isCursorExit)) {
          if (dart.test(helper.isCursorReachedTop)) {
            helper.finalScrollOffset = dart.notNull(this.widget.scrollController.offset) - dart.notNull(this[_jumpOffset]);
          } else {
            helper.finalScrollOffset = dart.notNull(this.widget.scrollController.offset) + dart.notNull(this[_jumpOffset]);
          }
          helper.isCursorExit = false;
        }
      }
    }
    build(context) {
      let t35, t34, t35$, t34$;
      if (context == null) dart.nullFailed(I[12], 236, 29, "context");
      t34 = binding$.PaintingBinding.instance;
      t34 == null ? null : (t35 = t34.imageCache, t35 == null ? null : t35.clear());
      t34$ = binding$.PaintingBinding.instance;
      t34$ == null ? null : (t35$ = t34$.imageCache, t35$ == null ? null : t35$.clearLiveImages());
      if (this.widget.imageStream != null) {
        this[_scrollWhileSelection]();
        let page = new container.Container.new({height: dart.notNull(this.widget.height) + dart.notNull(this.widget.pageSpacing), child: new basic.Column.new({children: T.JSArrayOfWidget().of([new image.Image.memory(dart.nullCheck(this.widget.imageStream), {width: this.widget.width, height: this.widget.height, fit: box_fit.BoxFit.fitWidth, alignment: alignment$.Alignment.center, $creationLocationd_0dea112b090073317d4: C[209] || CT.C209}), new container.Container.new({height: this.widget.pageSpacing, color: dart.nullCheck(this[_pdfViewerThemeData$2]).backgroundColor, $creationLocationd_0dea112b090073317d4: C[216] || CT.C216})]), $creationLocationd_0dea112b090073317d4: C[220] || CT.C220}), $creationLocationd_0dea112b090073317d4: C[223] || CT.C223});
        let pdfPage = true && !dart.test(this.widget.isMobileWebView) ? new container.Container.new({height: dart.notNull(this.widget.height) + dart.notNull(this.widget.pageSpacing), width: this.widget.width, child: page, $creationLocationd_0dea112b090073317d4: C[227] || CT.C227}) : new container.Container.new({color: colors.Colors.white, child: page, $creationLocationd_0dea112b090073317d4: C[232] || CT.C232});
        let canvasContainer = new container.Container.new({height: this.widget.height, width: this.widget.width, child: new pdfviewer_canvas.PdfViewerCanvas.new(this[_canvasKey], this.widget.height, this.widget.width, this.widget.pdfDocument, this.widget.pageIndex, this.widget.pdfPages, this.widget.interactionMode, this.widget.scrollController, this.widget.pdfViewerController, this.widget.enableDocumentLinkAnnotation, this.widget.enableTextSelection, this.widget.onTextSelectionChanged, this.widget.onTextSelectionDragStarted, this.widget.onTextSelectionDragEnded, this.widget.onDocumentLinkNavigationInvoked, this.widget.textCollection, this.widget.searchTextHighlightColor, this.widget.pdfTextSearchResult, this.widget.isMobileWebView, {$creationLocationd_0dea112b090073317d4: C[236] || CT.C236}), $creationLocationd_0dea112b090073317d4: C[257] || CT.C257});
        let canvas = true && !dart.test(this.widget.isMobileWebView) && this.canvasRenderBox != null ? new basic.Listener.new({onPointerSignal: dart.fn(details => {
            if (details == null) dart.nullFailed(I[12], 292, 33, "details");
            if (dart.test(dart.nullCheck(this.canvasRenderBox).getSelectionDetails().mouseSelectionEnabled)) {
              this[_triggerTextSelectionCallback]();
            }
          }, T.PointerSignalEventTovoid()), onPointerDown: dart.fn(details => {
            if (details == null) dart.nullFailed(I[12], 299, 31, "details");
            if (true && !dart.test(this.widget.isMobileWebView)) {
              let now = new core.DateTime.now().millisecondsSinceEpoch;
              if (dart.notNull(now) - dart.notNull(this[_lastTap]) <= 500) {
                this[_consecutiveTaps] = dart.notNull(this[_consecutiveTaps]) + 1;
                if (this[_consecutiveTaps] === 2 && !dart.test(this[_isSecondaryTap])) {
                  dart.nullCheck(this.canvasRenderBox).handleDoubleTapDown(details);
                }
                if (this[_consecutiveTaps] === 3 && !dart.test(this[_isSecondaryTap])) {
                  dart.nullCheck(this.canvasRenderBox).handleTripleTapDown(details);
                }
              } else {
                this[_consecutiveTaps] = 1;
              }
              this[_lastTap] = now;
            }
          }, T.PointerDownEventTovoid()), child: new raw_keyboard_listener.RawKeyboardListener.new({focusNode: this.focusNode, onKey: dart.fn(event => {
              let t34;
              if (event == null) dart.nullFailed(I[12], 318, 25, "event");
              if ((dart.test(dart.nullCheck(this.canvasRenderBox).getSelectionDetails().mouseSelectionEnabled) || dart.test(dart.nullCheck(this.canvasRenderBox).getSelectionDetails().selectionEnabled)) && dart.test(event.isControlPressed) && dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.keyC)) {
                clipboard.Clipboard.setData(new clipboard.ClipboardData.new({text: (t34 = dart.nullCheck(this.canvasRenderBox).getSelectionDetails().copiedText, t34 == null ? "" : t34)}));
              }
              if (dart.test(event.isControlPressed) && dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.digit0)) {
                this.widget.pdfViewerController.zoomLevel = 1.0;
              }
              if (dart.test(event.isControlPressed) && dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.minus)) {
                if (dart.toString(dart.runtimeType(event)) === "RawKeyDownEvent") {
                  let zoomLevel = this.widget.pdfViewerController.zoomLevel;
                  if (dart.notNull(zoomLevel) >= 1.0 && dart.notNull(zoomLevel) <= 1.25) {
                    zoomLevel = 1.0;
                  } else if (dart.notNull(zoomLevel) > 1.25 && dart.notNull(zoomLevel) <= 1.5) {
                    zoomLevel = 1.25;
                  } else if (dart.notNull(zoomLevel) > 1.5 && dart.notNull(zoomLevel) <= 2.0) {
                    zoomLevel = 1.5;
                  } else {
                    zoomLevel = 2.0;
                  }
                  this.widget.pdfViewerController.zoomLevel = zoomLevel;
                }
              }
              if (dart.test(event.isControlPressed) && dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.equal)) {
                if (dart.toString(dart.runtimeType(event)) === "RawKeyDownEvent") {
                  let zoomLevel = this.widget.pdfViewerController.zoomLevel;
                  if (dart.notNull(zoomLevel) >= 1.0 && dart.notNull(zoomLevel) < 1.25) {
                    zoomLevel = 1.25;
                  } else if (dart.notNull(zoomLevel) >= 1.25 && dart.notNull(zoomLevel) < 1.5) {
                    zoomLevel = 1.5;
                  } else if (dart.notNull(zoomLevel) >= 1.5 && dart.notNull(zoomLevel) < 2.0) {
                    zoomLevel = 2.0;
                  } else {
                    zoomLevel = 3.0;
                  }
                  this.widget.pdfViewerController.zoomLevel = zoomLevel;
                }
              }
              if (dart.toString(dart.runtimeType(event)) === "RawKeyDownEvent") {
                if (dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.home)) {
                  this.widget.pdfViewerController.jumpToPage(1);
                } else if (dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.end)) {
                  this.widget.pdfViewerController.jumpToPage(this.widget.pdfViewerController.pageCount);
                } else if (dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.arrowRight)) {
                  this.widget.pdfViewerController.nextPage();
                } else if (dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.arrowLeft)) {
                  this.widget.pdfViewerController.previousPage();
                }
              }
              if (dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.arrowUp)) {
                this[_scroll](true, false);
              }
              if (dart.equals(event.logicalKey, keyboard_key.LogicalKeyboardKey.arrowDown)) {
                this[_scroll](false, false);
              }
            }, T.RawKeyEventTovoid()), child: new basic.MouseRegion.new({cursor: this[_cursor], onHover: dart.fn(details => {
                if (details == null) dart.nullFailed(I[12], 391, 29, "details");
                if (this.canvasRenderBox != null) {
                  if (this.widget.interactionMode == enums.PdfInteractionMode.selection) {
                    let isText = dart.nullCheck(this.canvasRenderBox).findTextWhileHover(details.localPosition) != null;
                    let isTOC = dart.nullCheck(this.canvasRenderBox).findTOC(details.localPosition);
                    if (dart.test(isTOC)) {
                      this[_cursor] = mouse_cursor.SystemMouseCursors.click;
                    } else if (isText && !dart.test(isTOC)) {
                      this[_cursor] = mouse_cursor.SystemMouseCursors.text;
                    } else {
                      this[_cursor] = mouse_cursor.SystemMouseCursors.basic;
                    }
                  } else {
                    let isTOC = dart.nullCheck(this.canvasRenderBox).findTOC(details.localPosition);
                    if (dart.test(isTOC)) {
                      this[_cursor] = mouse_cursor.SystemMouseCursors.click;
                    } else if (!dart.equals(this[_cursor], mouse_cursor.SystemMouseCursors.grab)) {
                      this[_cursor] = mouse_cursor.SystemMouseCursors.grab;
                    }
                  }
                }
              }, T.PointerHoverEventTovoid()), child: new gesture_detector.GestureDetector.new({onPanStart: dart.fn(details => {
                  let t34;
                  if (details == null) dart.nullFailed(I[12], 419, 36, "details");
                  if (this.widget.interactionMode == enums.PdfInteractionMode.pan) {
                    this[_cursor] = mouse_cursor.SystemMouseCursors.grabbing;
                  }
                  if (!dart.test(this.focusNode.hasPrimaryFocus)) {
                    this.focusNode.requestFocus();
                  }
                  this[_triggerTextSelectionCallback]();
                  t34 = this.canvasRenderBox;
                  t34 == null ? null : t34.handleDragStart(details);
                }, T.DragStartDetailsTovoid()), onPanUpdate: dart.fn(details => {
                  let t34;
                  if (details == null) dart.nullFailed(I[12], 429, 37, "details");
                  this[_updateSelectionPan](details);
                  if (this.widget.interactionMode == enums.PdfInteractionMode.pan) {
                    let newOffset = dart.notNull(this.widget.scrollController.offset) - dart.notNull(details.delta.dy);
                    if (details.delta.dy[$isNegative]) {
                      this.widget.scrollController.jumpTo(math.max(core.double, 0.0, newOffset));
                    } else {
                      this.widget.scrollController.jumpTo(math.min(core.double, this.widget.scrollController.position.maxScrollExtent, newOffset));
                    }
                  }
                  t34 = this.canvasRenderBox;
                  t34 == null ? null : t34.handleDragUpdate(details);
                }, T.DragUpdateDetailsTovoid()), onPanEnd: dart.fn(details => {
                  if (details == null) dart.nullFailed(I[12], 445, 34, "details");
                  if (this.canvasRenderBox != null) {
                    dart.nullCheck(this.canvasRenderBox).getSelectionDetails().isCursorExit = false;
                  }
                  if (!dart.test(this.focusNode.hasPrimaryFocus)) {
                    this.focusNode.requestFocus();
                  }
                  if (this.widget.interactionMode == enums.PdfInteractionMode.pan) {
                    this[_cursor] = mouse_cursor.SystemMouseCursors.grab;
                  }
                  dart.nullCheck(this.canvasRenderBox).handleDragEnd(details);
                }, T.DragEndDetailsTovoid()), onPanDown: dart.fn(details => {
                  let t34;
                  if (details == null) dart.nullFailed(I[12], 458, 35, "details");
                  t34 = this.canvasRenderBox;
                  t34 == null ? null : t34.handleDragDown(details);
                }, T.DragDownDetailsTovoid()), onTapUp: dart.fn(details => {
                  let t34;
                  if (details == null) dart.nullFailed(I[12], 461, 33, "details");
                  if (!dart.test(this.focusNode.hasPrimaryFocus)) {
                    this.focusNode.requestFocus();
                  }
                  this[_triggerTextSelectionCallback]();
                  t34 = this.canvasRenderBox;
                  t34 == null ? null : t34.handleTapUp(details);
                }, T.TapUpDetailsTovoid()), onTapDown: dart.fn(details => {
                  let t34;
                  if (details == null) dart.nullFailed(I[12], 468, 35, "details");
                  this[_isSecondaryTap] = false;
                  this[_isTouchPointer] = details.kind == ui.PointerDeviceKind.touch ? true : false;
                  t34 = this.canvasRenderBox;
                  t34 == null ? null : t34.handleTapDown(details);
                }, T.TapDownDetailsTovoid()), onLongPressStart: dart.fn(details => {
                  let t34;
                  if (details == null) dart.nullFailed(I[12], 476, 42, "details");
                  this[_triggerTextSelectionCallback]();
                  if (!dart.test(this.focusNode.hasPrimaryFocus)) {
                    this.focusNode.requestFocus();
                  }
                  if (dart.test(this[_isTouchPointer])) {
                    t34 = this.canvasRenderBox;
                    t34 == null ? null : t34.handleLongPressStart(details);
                  }
                  this[_isTouchPointer] = false;
                }, T.LongPressStartDetailsTovoid()), onSecondaryTapDown: dart.fn(details => {
                  if (details == null) dart.nullFailed(I[12], 486, 44, "details");
                  this[_isSecondaryTap] = true;
                }, T.TapDownDetailsTovoid()), child: canvasContainer, $creationLocationd_0dea112b090073317d4: C[262] || CT.C262}), $creationLocationd_0dea112b090073317d4: C[273] || CT.C273}), $creationLocationd_0dea112b090073317d4: C[278] || CT.C278}), $creationLocationd_0dea112b090073317d4: C[283] || CT.C283}) : canvasContainer;
        if (this.widget.textCollection != null) {
          return new basic.Stack.new({children: T.JSArrayOfWidget().of([pdfPage, canvas]), $creationLocationd_0dea112b090073317d4: C[288] || CT.C288});
        } else {
          return new basic.Stack.new({children: T.JSArrayOfWidget().of([pdfPage, canvas]), $creationLocationd_0dea112b090073317d4: C[291] || CT.C291});
        }
      } else {
        return new container.Container.new({height: dart.notNull(this.widget.height) + dart.notNull(this.widget.pageSpacing), width: this.widget.width, color: colors.Colors.white, foregroundDecoration: new box_decoration.BoxDecoration.new({border: new box_border.Border.new({bottom: new borders.BorderSide.new({width: this.widget.pageSpacing, color: dart.nullCheck(this[_pdfViewerThemeData$2]).backgroundColor})})}), $creationLocationd_0dea112b090073317d4: C[294] || CT.C294});
      }
    }
  };
  (pdf_page_view.PdfPageViewState.new = function() {
    this[_pdfViewerThemeData$2] = null;
    this[_canvasKey] = T.GlobalKeyOfStateOfStatefulWidget().new();
    this[_isTouchPointer] = false;
    this[_isSecondaryTap] = false;
    this[_jumpOffset] = 10.0;
    this[_cursor] = mouse_cursor.SystemMouseCursors.basic;
    this[_lastTap] = new core.DateTime.now().millisecondsSinceEpoch;
    this[_consecutiveTaps] = 1;
    this[focusNode] = new focus_manager.FocusNode.new();
    pdf_page_view.PdfPageViewState.__proto__.new.call(this);
    ;
  }).prototype = pdf_page_view.PdfPageViewState.prototype;
  dart.addTypeTests(pdf_page_view.PdfPageViewState);
  dart.addTypeCaches(pdf_page_view.PdfPageViewState);
  dart.setMethodSignature(pdf_page_view.PdfPageViewState, () => ({
    __proto__: dart.getMethods(pdf_page_view.PdfPageViewState.__proto__),
    [_triggerTextSelectionCallback]: dart.fnType(dart.void, []),
    [_scroll]: dart.fnType(dart.void, [core.bool, core.bool]),
    [_scrollWhileSelection]: dart.fnType(dart.void, []),
    [_updateSelectionPan]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(pdf_page_view.PdfPageViewState, () => ({
    __proto__: dart.getGetters(pdf_page_view.PdfPageViewState.__proto__),
    canvasRenderBox: dart.nullable(pdfviewer_canvas.CanvasRenderBox)
  }));
  dart.setLibraryUri(pdf_page_view.PdfPageViewState, I[13]);
  dart.setFieldSignature(pdf_page_view.PdfPageViewState, () => ({
    __proto__: dart.getFields(pdf_page_view.PdfPageViewState.__proto__),
    [_pdfViewerThemeData$2]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData)),
    [_canvasKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_isTouchPointer]: dart.fieldType(core.bool),
    [_isSecondaryTap]: dart.fieldType(core.bool),
    [_jumpOffset]: dart.finalFieldType(core.double),
    [_cursor]: dart.fieldType(mouse_cursor.SystemMouseCursor),
    [_lastTap]: dart.fieldType(core.int),
    [_consecutiveTaps]: dart.fieldType(core.int),
    focusNode: dart.fieldType(focus_manager.FocusNode)
  }));
  var pageOffset$ = dart.privateName(pdf_page_view, "PdfPageInfo.pageOffset");
  var pageSize$ = dart.privateName(pdf_page_view, "PdfPageInfo.pageSize");
  pdf_page_view.PdfPageInfo = class PdfPageInfo extends core.Object {
    get pageOffset() {
      return this[pageOffset$];
    }
    set pageOffset(value) {
      super.pageOffset = value;
    }
    get pageSize() {
      return this[pageSize$];
    }
    set pageSize(value) {
      super.pageSize = value;
    }
  };
  (pdf_page_view.PdfPageInfo.new = function(pageOffset, pageSize) {
    if (pageOffset == null) dart.nullFailed(I[12], 524, 20, "pageOffset");
    if (pageSize == null) dart.nullFailed(I[12], 524, 37, "pageSize");
    this[pageOffset$] = pageOffset;
    this[pageSize$] = pageSize;
    ;
  }).prototype = pdf_page_view.PdfPageInfo.prototype;
  dart.addTypeTests(pdf_page_view.PdfPageInfo);
  dart.addTypeCaches(pdf_page_view.PdfPageInfo);
  dart.setLibraryUri(pdf_page_view.PdfPageInfo, I[13]);
  dart.setFieldSignature(pdf_page_view.PdfPageInfo, () => ({
    __proto__: dart.getFields(pdf_page_view.PdfPageInfo.__proto__),
    pageOffset: dart.finalFieldType(core.double),
    pageSize: dart.finalFieldType(ui.Size)
  }));
  var initialZoomLevel$ = dart.privateName(pdf_container, "PdfContainer.initialZoomLevel");
  var initialScrollOffset$ = dart.privateName(pdf_container, "PdfContainer.initialScrollOffset");
  var viewportConstraints$ = dart.privateName(pdf_container, "PdfContainer.viewportConstraints");
  var maxPdfPageWidth$ = dart.privateName(pdf_container, "PdfContainer.maxPdfPageWidth");
  var scrollController$2 = dart.privateName(pdf_container, "PdfContainer.scrollController");
  var itemBuilder$ = dart.privateName(pdf_container, "PdfContainer.itemBuilder");
  var panEnabled$ = dart.privateName(pdf_container, "PdfContainer.panEnabled");
  var enableDoubleTapZooming$ = dart.privateName(pdf_container, "PdfContainer.enableDoubleTapZooming");
  var onTap$ = dart.privateName(pdf_container, "PdfContainer.onTap");
  var interactionMode$1 = dart.privateName(pdf_container, "PdfContainer.interactionMode");
  var isMobileWebView$3 = dart.privateName(pdf_container, "PdfContainer.isMobileWebView");
  var onZoomLevelChanged$ = dart.privateName(pdf_container, "PdfContainer.onZoomLevelChanged");
  var pdfController$ = dart.privateName(pdf_container, "PdfContainer.pdfController");
  pdf_container.PdfContainer = class PdfContainer extends framework.StatefulWidget {
    get initialZoomLevel() {
      return this[initialZoomLevel$];
    }
    set initialZoomLevel(value) {
      super.initialZoomLevel = value;
    }
    get initialScrollOffset() {
      return this[initialScrollOffset$];
    }
    set initialScrollOffset(value) {
      super.initialScrollOffset = value;
    }
    get viewportConstraints() {
      return this[viewportConstraints$];
    }
    set viewportConstraints(value) {
      super.viewportConstraints = value;
    }
    get maxPdfPageWidth() {
      return this[maxPdfPageWidth$];
    }
    set maxPdfPageWidth(value) {
      super.maxPdfPageWidth = value;
    }
    get scrollController() {
      return this[scrollController$2];
    }
    set scrollController(value) {
      super.scrollController = value;
    }
    get itemBuilder() {
      return this[itemBuilder$];
    }
    set itemBuilder(value) {
      super.itemBuilder = value;
    }
    get panEnabled() {
      return this[panEnabled$];
    }
    set panEnabled(value) {
      super.panEnabled = value;
    }
    get enableDoubleTapZooming() {
      return this[enableDoubleTapZooming$];
    }
    set enableDoubleTapZooming(value) {
      super.enableDoubleTapZooming = value;
    }
    get onTap() {
      return this[onTap$];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get interactionMode() {
      return this[interactionMode$1];
    }
    set interactionMode(value) {
      super.interactionMode = value;
    }
    get isMobileWebView() {
      return this[isMobileWebView$3];
    }
    set isMobileWebView(value) {
      super.isMobileWebView = value;
    }
    get onZoomLevelChanged() {
      return this[onZoomLevelChanged$];
    }
    set onZoomLevelChanged(value) {
      super.onZoomLevelChanged = value;
    }
    get pdfController() {
      return this[pdfController$];
    }
    set pdfController(value) {
      super.pdfController = value;
    }
    static getNearestPointOnLine(point, l1, l2) {
      if (point == null) dart.nullFailed(I[14], 85, 48, "point");
      if (l1 == null) dart.nullFailed(I[14], 85, 63, "l1");
      if (l2 == null) dart.nullFailed(I[14], 85, 75, "l2");
      let lengthSquared = math.pow(dart.notNull(l2.x) - dart.notNull(l1.x), 2.0)[$toDouble]() + math.pow(dart.notNull(l2.y) - dart.notNull(l1.y), 2.0)[$toDouble]();
      if (lengthSquared === 0) {
        return l1;
      }
      let l1P = point['-'](l1);
      let l1L2 = l2['-'](l1);
      let fraction = (dart.notNull(l1P.dot(l1L2)) / lengthSquared)[$clamp](0.0, 1.0)[$toDouble]();
      return l1['+'](l1L2['*'](fraction));
    }
    static getAxisAlignedBoundingBox(quad) {
      if (quad == null) dart.nullFailed(I[14], 104, 46, "quad");
      let minX = math.min(core.double, quad.point0.x, math.min(core.double, quad.point1.x, math.min(core.double, quad.point2.x, quad.point3.x)));
      let minY = math.min(core.double, quad.point0.y, math.min(core.double, quad.point1.y, math.min(core.double, quad.point2.y, quad.point3.y)));
      let maxX = math.max(core.double, quad.point0.x, math.max(core.double, quad.point1.x, math.max(core.double, quad.point2.x, quad.point3.x)));
      let maxY = math.max(core.double, quad.point0.y, math.max(core.double, quad.point1.y, math.max(core.double, quad.point2.y, quad.point3.y)));
      return new vector_math_64.Quad.points(vector_math_64.Vector3.new(minX, minY, 0.0), vector_math_64.Vector3.new(maxX, minY, 0.0), vector_math_64.Vector3.new(maxX, maxY, 0.0), vector_math_64.Vector3.new(minX, maxY, 0.0));
    }
    static pointIsInside(point, quad) {
      if (point == null) dart.nullFailed(I[14], 155, 37, "point");
      if (quad == null) dart.nullFailed(I[14], 155, 49, "quad");
      let aM = point['-'](quad.point0);
      let aB = quad.point1['-'](quad.point0);
      let aD = quad.point3['-'](quad.point0);
      let aMAB = aM.dot(aB);
      let aBAB = aB.dot(aB);
      let aMAD = aM.dot(aD);
      let aDAD = aD.dot(aD);
      return 0 <= dart.notNull(aMAB) && dart.notNull(aMAB) <= dart.notNull(aBAB) && 0 <= dart.notNull(aMAD) && dart.notNull(aMAD) <= dart.notNull(aDAD);
    }
    static getNearestPointInside(point, quad) {
      if (point == null) dart.nullFailed(I[14], 170, 48, "point");
      if (quad == null) dart.nullFailed(I[14], 170, 60, "quad");
      if (dart.test(pdf_container.PdfContainer.pointIsInside(point, quad))) {
        return point;
      }
      let closestPoints = T.JSArrayOfVector3().of([pdf_container.PdfContainer.getNearestPointOnLine(point, quad.point0, quad.point1), pdf_container.PdfContainer.getNearestPointOnLine(point, quad.point1, quad.point2), pdf_container.PdfContainer.getNearestPointOnLine(point, quad.point2, quad.point3), pdf_container.PdfContainer.getNearestPointOnLine(point, quad.point3, quad.point0)]);
      let minDistance = 1 / 0;
      let closestOverall = null;
      let closestOverall$35isSet = false;
      function closestOverall$35get() {
        return closestOverall$35isSet ? closestOverall : dart.throw(new _internal.LateError.localNI("closestOverall"));
      }
      dart.fn(closestOverall$35get, T.VoidToVector3());
      function closestOverall$35set(t37) {
        if (t37 == null) dart.nullFailed(I[14], 185, 18, "null");
        closestOverall$35isSet = true;
        return closestOverall = t37;
      }
      dart.fn(closestOverall$35set, T.Vector3Todynamic());
      for (let closePoint of closestPoints) {
        let distance = math.sqrt(math.pow(dart.notNull(point.x) - dart.notNull(closePoint.x), 2) + math.pow(dart.notNull(point.y) - dart.notNull(closePoint.y), 2));
        if (distance < minDistance) {
          minDistance = distance;
          closestOverall$35set(closePoint);
        }
      }
      return closestOverall$35get();
    }
    createState() {
      return new pdf_container.PdfContainerState.new();
    }
  };
  (pdf_container.PdfContainer.new = function(key, isMobileWebView, initialScrollOffset, initialZoomLevel, enableDoubleTapZooming, onZoomLevelChanged, pdfController, onTap, interactionMode, viewportConstraints, maxPdfPageWidth, panEnabled, scrollController, itemBuilder, opts) {
    if (key == null) dart.nullFailed(I[14], 17, 9, "key");
    if (isMobileWebView == null) dart.nullFailed(I[14], 18, 10, "isMobileWebView");
    if (initialScrollOffset == null) dart.nullFailed(I[14], 19, 10, "initialScrollOffset");
    if (initialZoomLevel == null) dart.nullFailed(I[14], 20, 10, "initialZoomLevel");
    if (enableDoubleTapZooming == null) dart.nullFailed(I[14], 21, 10, "enableDoubleTapZooming");
    if (pdfController == null) dart.nullFailed(I[14], 23, 10, "pdfController");
    if (onTap == null) dart.nullFailed(I[14], 24, 10, "onTap");
    if (interactionMode == null) dart.nullFailed(I[14], 25, 10, "interactionMode");
    if (viewportConstraints == null) dart.nullFailed(I[14], 26, 10, "viewportConstraints");
    if (maxPdfPageWidth == null) dart.nullFailed(I[14], 27, 10, "maxPdfPageWidth");
    if (panEnabled == null) dart.nullFailed(I[14], 28, 10, "panEnabled");
    if (scrollController == null) dart.nullFailed(I[14], 29, 10, "scrollController");
    if (itemBuilder == null) dart.nullFailed(I[14], 30, 10, "itemBuilder");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[isMobileWebView$3] = isMobileWebView;
    this[initialScrollOffset$] = initialScrollOffset;
    this[initialZoomLevel$] = initialZoomLevel;
    this[enableDoubleTapZooming$] = enableDoubleTapZooming;
    this[onZoomLevelChanged$] = onZoomLevelChanged;
    this[pdfController$] = pdfController;
    this[onTap$] = onTap;
    this[interactionMode$1] = interactionMode;
    this[viewportConstraints$] = viewportConstraints;
    this[maxPdfPageWidth$] = maxPdfPageWidth;
    this[panEnabled$] = panEnabled;
    this[scrollController$2] = scrollController;
    this[itemBuilder$] = itemBuilder;
    pdf_container.PdfContainer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdf_container.PdfContainer.prototype;
  dart.addTypeTests(pdf_container.PdfContainer);
  dart.addTypeCaches(pdf_container.PdfContainer);
  dart.setMethodSignature(pdf_container.PdfContainer, () => ({
    __proto__: dart.getMethods(pdf_container.PdfContainer.__proto__),
    createState: dart.fnType(pdf_container.PdfContainerState, [])
  }));
  dart.setLibraryUri(pdf_container.PdfContainer, I[15]);
  dart.setFieldSignature(pdf_container.PdfContainer, () => ({
    __proto__: dart.getFields(pdf_container.PdfContainer.__proto__),
    initialZoomLevel: dart.finalFieldType(core.double),
    initialScrollOffset: dart.finalFieldType(ui.Offset),
    viewportConstraints: dart.finalFieldType(box.BoxConstraints),
    maxPdfPageWidth: dart.finalFieldType(core.double),
    scrollController: dart.finalFieldType(scroll_controller.ScrollController),
    itemBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, core.int])),
    panEnabled: dart.finalFieldType(core.bool),
    enableDoubleTapZooming: dart.finalFieldType(core.bool),
    onTap: dart.finalFieldType(dart.fnType(dart.void, [])),
    interactionMode: dart.finalFieldType(enums.PdfInteractionMode),
    isMobileWebView: dart.finalFieldType(core.bool),
    onZoomLevelChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfZoomDetails]))),
    pdfController: dart.finalFieldType(pdfviewer.PdfViewerController)
  }));
  var _alignPanAxis = dart.privateName(pdf_container, "_alignPanAxis");
  var _isLongPressed = dart.privateName(pdf_container, "_isLongPressed");
  var _minScale = dart.privateName(pdf_container, "_minScale");
  var _maxScale = dart.privateName(pdf_container, "_maxScale");
  var _scale = dart.privateName(pdf_container, "_scale");
  var _previousScale = dart.privateName(pdf_container, "_previousScale");
  var _boundaryMargin = dart.privateName(pdf_container, "_boundaryMargin");
  var _childKey = dart.privateName(pdf_container, "_childKey");
  var _parentKey = dart.privateName(pdf_container, "_parentKey");
  var _animation = dart.privateName(pdf_container, "_animation");
  var __PdfContainerState__animationController = dart.privateName(pdf_container, "_#PdfContainerState#_animationController");
  var __PdfContainerState__animationController_isSet = dart.privateName(pdf_container, "_#PdfContainerState#_animationController#isSet");
  var __PdfContainerState__pdfController = dart.privateName(pdf_container, "_#PdfContainerState#_pdfController");
  var __PdfContainerState__pdfController_isSet = dart.privateName(pdf_container, "_#PdfContainerState#_pdfController#isSet");
  var _tapPosition = dart.privateName(pdf_container, "_tapPosition");
  var _previousOffset = dart.privateName(pdf_container, "_previousOffset");
  var _origin = dart.privateName(pdf_container, "_origin");
  var _panAxis = dart.privateName(pdf_container, "_panAxis");
  var _referenceFocalPoint = dart.privateName(pdf_container, "_referenceFocalPoint");
  var _scaleStart = dart.privateName(pdf_container, "_scaleStart");
  var _gestureType = dart.privateName(pdf_container, "_gestureType");
  var _isPositionHandlerAttached = dart.privateName(pdf_container, "_isPositionHandlerAttached");
  var _isContentOverflowed = dart.privateName(pdf_container, "_isContentOverflowed");
  var _overflowOrigin = dart.privateName(pdf_container, "_overflowOrigin");
  var _isMousePointer$ = dart.privateName(pdf_container, "_isMousePointer");
  var _mouseDragOffsetInPanMode = dart.privateName(pdf_container, "_mouseDragOffsetInPanMode");
  var _scaleEnabled = dart.privateName(pdf_container, "_scaleEnabled");
  var _lastTap$ = dart.privateName(pdf_container, "_lastTap");
  var _isPanning = dart.privateName(pdf_container, "_isPanning");
  var _cursor$ = dart.privateName(pdf_container, "_cursor");
  var _viewMatrix = dart.privateName(pdf_container, "_viewMatrix");
  var _pixels = dart.privateName(pdf_container, "_pixels");
  var _translationY = dart.privateName(pdf_container, "_translationY");
  var _animationController = dart.privateName(pdf_container, "_animationController");
  var _pdfController = dart.privateName(pdf_container, "_pdfController");
  var _viewport = dart.privateName(pdf_container, "_viewport");
  var _matrixTranslate = dart.privateName(pdf_container, "_matrixTranslate");
  var _matrixScale = dart.privateName(pdf_container, "_matrixScale");
  var _name$ = dart.privateName(pdf_container, "_name");
  var _gestureIsSupported = dart.privateName(pdf_container, "_gestureIsSupported");
  var _handleAnimate = dart.privateName(pdf_container, "_handleAnimate");
  var _handleScaleStart = dart.privateName(pdf_container, "_handleScaleStart");
  var _setPosition = dart.privateName(pdf_container, "_setPosition");
  var _restrictPanForWebSelectionMode = dart.privateName(pdf_container, "_restrictPanForWebSelectionMode");
  var _panOnGreyArea = dart.privateName(pdf_container, "_panOnGreyArea");
  var _handleScaleUpdate = dart.privateName(pdf_container, "_handleScaleUpdate");
  var _animateToOffset = dart.privateName(pdf_container, "_animateToOffset");
  var _handleScaleEnd = dart.privateName(pdf_container, "_handleScaleEnd");
  var _handleTapDown = dart.privateName(pdf_container, "_handleTapDown");
  var _onZoomLevelChanged = dart.privateName(pdf_container, "_onZoomLevelChanged");
  var _onControllerValueChange = dart.privateName(pdf_container, "_onControllerValueChange");
  var _updateOrigin = dart.privateName(pdf_container, "_updateOrigin");
  const State_TickerProviderStateMixin$36 = class State_TickerProviderStateMixin extends framework.State$(pdf_container.PdfContainer) {};
  (State_TickerProviderStateMixin$36.new = function() {
    ticker_provider.TickerProviderStateMixin$(pdf_container.PdfContainer)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36, ticker_provider.TickerProviderStateMixin$(pdf_container.PdfContainer));
  pdf_container.PdfContainerState = class PdfContainerState extends State_TickerProviderStateMixin$36 {
    get [_animationController]() {
      let t39;
      return dart.test(this[__PdfContainerState__animationController_isSet]) ? (t39 = this[__PdfContainerState__animationController], t39) : dart.throw(new _internal.LateError.fieldNI("_animationController"));
    }
    set [_animationController](t39) {
      if (t39 == null) dart.nullFailed(I[14], 215, 28, "null");
      this[__PdfContainerState__animationController_isSet] = true;
      this[__PdfContainerState__animationController] = t39;
    }
    get [_pdfController]() {
      let t40;
      return dart.test(this[__PdfContainerState__pdfController_isSet]) ? (t40 = this[__PdfContainerState__pdfController], t40) : dart.throw(new _internal.LateError.fieldNI("_pdfController"));
    }
    set [_pdfController](t40) {
      if (t40 == null) dart.nullFailed(I[14], 216, 28, "null");
      this[__PdfContainerState__pdfController_isSet] = true;
      this[__PdfContainerState__pdfController] = t40;
    }
    get viewMatrix() {
      return this[_viewMatrix];
    }
    set viewMatrix(value) {
      if (!dart.equals(value, this[_viewMatrix])) {
        this.setState(dart.fn(() => {
          this[_viewMatrix] = T.Matrix4N().as(value);
        }, T.VoidTovoid()));
      }
    }
    get [_viewport]() {
      if (!(this[_parentKey].currentContext != null)) dart.assertFailed(null, I[14], 254, 12, "_parentKey.currentContext != null");
      let parentRenderBox = box.RenderBox.as(dart.nullCheck(this[_parentKey].currentContext).findRenderObject());
      return ui.Offset.zero['&'](parentRenderBox.size);
    }
    [_matrixTranslate](matrix, translation) {
      let t41, t41$, t41$0;
      if (matrix == null) dart.nullFailed(I[14], 263, 36, "matrix");
      if (translation == null) dart.nullFailed(I[14], 263, 51, "translation");
      if (dart.equals(translation, ui.Offset.zero)) {
        return matrix.clone();
      }
      let alignedTranslation = dart.test(this[_alignPanAxis]) && this[_panAxis] != null ? pdf_container._alignAxis(translation, dart.nullCheck(this[_panAxis])) : translation;
      let nextMatrix = (t41 = matrix.clone(), (() => {
        t41.translate(alignedTranslation.dx, alignedTranslation.dy);
        return t41;
      })());
      let nextViewport = pdf_container._transformViewport(nextMatrix, this[_viewport]);
      let childRenderBox = box.RenderBox.as(dart.nullCheck(this[_childKey].currentContext).findRenderObject());
      let childSize = childRenderBox.size;
      let boundaryRect = this[_boundaryMargin].inflateRect(ui.Offset.zero['&'](childSize));
      if (dart.test(boundaryRect.isInfinite)) {
        return nextMatrix;
      }
      let boundariesAabbQuad = pdf_container._getAxisAlignedBoundingBox(boundaryRect);
      let offendingDistance = pdf_container._exceedsBy(boundariesAabbQuad, nextViewport);
      if (dart.equals(offendingDistance, ui.Offset.zero)) {
        return nextMatrix;
      }
      let nextTotalTranslation = pdf_container._getMatrixTranslation(nextMatrix);
      let currentScale = matrix.getMaxScaleOnAxis();
      let correctedTotalTranslation = new ui.Offset.new(dart.notNull(nextTotalTranslation.dx) - dart.notNull(offendingDistance.dx) * dart.notNull(currentScale), dart.notNull(nextTotalTranslation.dy) - dart.notNull(offendingDistance.dy) * dart.notNull(currentScale));
      let correctedMatrix = (t41$ = matrix.clone(), (() => {
        t41$.setTranslation(vector_math_64.Vector3.new(correctedTotalTranslation.dx, correctedTotalTranslation.dy, 0.0));
        return t41$;
      })());
      let correctedViewport = pdf_container._transformViewport(correctedMatrix, this[_viewport]);
      let offendingCorrectedDistance = pdf_container._exceedsBy(boundariesAabbQuad, correctedViewport);
      if (dart.equals(offendingCorrectedDistance, ui.Offset.zero)) {
        return correctedMatrix;
      }
      if (offendingCorrectedDistance.dx !== 0.0 && offendingCorrectedDistance.dy !== 0.0) {
        return matrix.clone();
      }
      let unidirectionalCorrectedTotalTranslation = new ui.Offset.new(offendingCorrectedDistance.dx === 0.0 ? correctedTotalTranslation.dx : 0.0, offendingCorrectedDistance.dy === 0.0 ? correctedTotalTranslation.dy : 0.0);
      t41$0 = matrix.clone();
      return (() => {
        t41$0.setTranslation(vector_math_64.Vector3.new(unidirectionalCorrectedTotalTranslation.dx, unidirectionalCorrectedTotalTranslation.dy, 0.0));
        return t41$0;
      })();
    }
    [_matrixScale](matrix, scale) {
      let t41;
      if (matrix == null) dart.nullFailed(I[14], 352, 32, "matrix");
      if (scale == null) dart.nullFailed(I[14], 352, 47, "scale");
      if (scale === 1.0) {
        return matrix.clone();
      }
      if (!(scale !== 0.0)) dart.assertFailed(null, I[14], 356, 12, "scale != 0.0");
      let currentScale = dart.nullCheck(this.viewMatrix).getMaxScaleOnAxis();
      let totalScale = dart.notNull(currentScale) * dart.notNull(scale);
      let clampedTotalScale = totalScale[$clamp](this[_minScale], this[_maxScale])[$toDouble]();
      let clampedScale = clampedTotalScale / dart.notNull(currentScale);
      let nextMatrix = (t41 = matrix.clone(), (() => {
        t41.scale(clampedScale);
        return t41;
      })());
      return nextMatrix;
    }
    [_gestureIsSupported](gestureType) {
      if (gestureType == null) dart.nullFailed(I[14], 375, 41, "gestureType");
      switch (gestureType) {
        case C[300] || CT.C300:
        {
          return this[_scaleEnabled];
        }
        case C[301] || CT.C301:
        default:
        {
          return this.widget.panEnabled;
        }
      }
    }
    [_handleScaleStart](details) {
      let t41;
      if (details == null) dart.nullFailed(I[14], 390, 44, "details");
      if (this.widget.interactionMode == enums.PdfInteractionMode.pan) {
        this[_cursor$] = mouse_cursor.SystemMouseCursors.grabbing;
      }
      if (dart.test(this[_animationController].isAnimating)) {
        this[_animationController].stop();
        this[_animationController].reset();
        t41 = this[_animation];
        t41 == null ? null : t41.removeListener(dart.bind(this, _handleAnimate));
        this[_animation] = null;
      }
      this[_gestureType] = null;
      this[_panAxis] = null;
      this[_scaleStart] = dart.nullCheck(this.viewMatrix).getMaxScaleOnAxis();
      this[_pixels] = this.widget.scrollController.position.pixels;
      this[_translationY] = 0.0;
      this[_mouseDragOffsetInPanMode] = 0.0;
      if (dart.notNull(this.widget.scrollController.position.maxScrollExtent) > 0) {
        let factor = dart.notNull(this[_pixels]) / dart.notNull(this.widget.scrollController.position.maxScrollExtent);
        let totalSize = dart.notNull(this.widget.scrollController.position.viewportDimension) + dart.notNull(this.widget.scrollController.position.maxScrollExtent);
        let scaledSize = dart.nullCheck(this[_scaleStart]) * totalSize;
        let scaledMaxScrollExtent = scaledSize - dart.notNull(this.widget.scrollController.position.viewportDimension);
        this[_pixels] = scaledMaxScrollExtent * factor;
        this[_pixels] = dart.notNull(this[_pixels]) / scaledSize * totalSize;
      } else {
        this[_pixels] = 0.0;
      }
      this[_referenceFocalPoint] = this.toScene(details.localFocalPoint);
      this[_previousOffset] = new ui.Offset.new(-dart.notNull(dart.nullCheck(this[_referenceFocalPoint]).dx), -dart.notNull(this.widget.scrollController.offset));
    }
    jumpOnZoomedDocument(xOffset, yOffset, viewportWidth) {
      if (yOffset == null) dart.nullFailed(I[14], 430, 31, "yOffset");
      if (viewportWidth == null) dart.nullFailed(I[14], 430, 47, "viewportWidth");
      this[_scale] = dart.nullCheck(this.viewMatrix).getMaxScaleOnAxis();
      let correctedY = yOffset;
      if (dart.notNull(this.widget.scrollController.position.maxScrollExtent) > 0) {
        let factor = dart.notNull(correctedY) / dart.notNull(this.widget.scrollController.position.maxScrollExtent);
        let totalSize = dart.notNull(this.widget.scrollController.position.viewportDimension) + dart.notNull(this.widget.scrollController.position.maxScrollExtent);
        let scaledSize = dart.notNull(this[_scale]) * totalSize;
        let scaledMaxScrollExtent = scaledSize - dart.notNull(this.widget.scrollController.position.viewportDimension);
        correctedY = scaledMaxScrollExtent * factor;
        correctedY = dart.notNull(correctedY) / scaledSize * totalSize;
        let midOfViewport = dart.notNull(this.widget.scrollController.position.viewportDimension) / 2 * dart.notNull(this[_scale]) * factor;
        if (true && xOffset != null) {
          let _heightFactor = dart.notNull(this[_viewport].height) / dart.notNull(this[_viewport].center.dy);
          if (dart.notNull(this[_scale]) > _heightFactor) {
            midOfViewport = midOfViewport / _heightFactor;
          }
        }
        let scaledYOffset = dart.notNull(this.toScene(new ui.Offset.new(0.0, correctedY)).dy) * dart.notNull(this[_scale]) - midOfViewport;
        if (dart.notNull(scaledYOffset) > dart.notNull(this.widget.scrollController.position.maxScrollExtent)) {
          scaledYOffset = this.widget.scrollController.position.maxScrollExtent;
        }
        this[_pdfController].jumpTo({yOffset: scaledYOffset});
        if (xOffset != null) {
          let currentX = dart.nullCheck(this.viewMatrix).getTranslation().x[$round]() === 0 ? 0 : dart.nullCheck(this.viewMatrix).getTranslation().x[$roundToDouble]()[$abs]() / dart.notNull(this[_scale]);
          xOffset = currentX - dart.notNull(xOffset);
          this.viewMatrix = this[_matrixTranslate](dart.nullCheck(this.viewMatrix), new ui.Offset.new(dart.notNull(xOffset) + dart.notNull(viewportWidth) / 2 / dart.notNull(this[_scale]), 0.0));
        }
      }
    }
    [_setPosition](translation) {
      if (translation == null) dart.nullFailed(I[14], 470, 28, "translation");
      let position = this.widget.scrollController.position;
      let maxScrollExtent = dart.notNull(position.maxScrollExtent) > 0 ? position.maxScrollExtent : 1;
      this[_translationY] = dart.notNull(this[_translationY]) + dart.notNull(translation.dy);
      let totalSize = dart.notNull(position.viewportDimension) + dart.notNull(maxScrollExtent);
      let factor = (dart.notNull(this[_pixels]) - dart.notNull(this[_translationY])) / totalSize;
      let scaledSize = totalSize * dart.notNull(dart.nullCheck(this.viewMatrix).getMaxScaleOnAxis());
      let scaledMaxScrollExtent = scaledSize - dart.notNull(position.viewportDimension);
      let factorAfterScaling = scaledSize * factor / scaledMaxScrollExtent;
      let newPixels = dart.notNull(maxScrollExtent) * factorAfterScaling;
      if (newPixels < 0) {
        newPixels = 0.0;
      }
      position.jumpTo(newPixels);
      factor = newPixels / dart.notNull(maxScrollExtent);
      this[_origin] = new ui.Offset.new(0.0, dart.notNull(position.viewportDimension) * factor);
      if (dart.notNull(position.maxScrollExtent) <= 0) {
        this[_origin] = new ui.Offset.new(0.0, 0.0);
        this.viewMatrix = this[_matrixTranslate](dart.nullCheck(this.viewMatrix), new ui.Offset.new(0.0, translation.dy));
      }
    }
    [_handleScaleUpdate](opts) {
      let details = opts && 'details' in opts ? opts.details : null;
      let doubleTap = opts && 'doubleTap' in opts ? opts.doubleTap : false;
      if (doubleTap == null) dart.nullFailed(I[14], 500, 42, "doubleTap");
      this[_isPanning] = true;
      this[_isContentOverflowed] = false;
      let focalPointScene = null;
      if (dart.test(doubleTap)) {
        let _offset = null;
        this[_gestureType] = pdf_container._GestureType.scale;
        if (dart.notNull(this[_scale]) <= 1.0) {
          this[_origin] = ui.Offset.zero;
          let normalizedOffset = this[_tapPosition]['-'](this[_previousOffset]['*'](this[_scale]))['/'](this[_scale]);
          this[_scale] = 2.0;
          _offset = this[_tapPosition]['-'](normalizedOffset['*'](this[_scale]))['/'](this[_scale]);
          this.viewMatrix = this[_matrixScale](dart.nullCheck(this.viewMatrix), this[_scale]);
          this.viewMatrix = this[_matrixTranslate](dart.nullCheck(this.viewMatrix), new ui.Offset.new(_offset.dx, 0.0));
          this.widget.scrollController.jumpTo(-dart.notNull(_offset.dy));
        } else {
          let normalizedOffset = this[_tapPosition]['-'](this[_previousOffset]['*'](this[_scale]))['/'](this[_scale]);
          this.viewMatrix = this[_matrixScale](dart.nullCheck(this.viewMatrix), 1.0 / dart.notNull(this[_scale]));
          this[_scale] = 1.0;
          _offset = this[_tapPosition]['-'](normalizedOffset['*'](this[_scale]))['/'](this[_scale]);
          this.viewMatrix = this[_matrixTranslate](dart.nullCheck(this.viewMatrix), new ui.Offset.new(_offset.dx, 0.0));
          this.widget.scrollController.jumpTo(-dart.notNull(_offset.dy));
        }
        this[_setPosition](_offset['-'](this[_previousOffset]));
        this[_pdfController].zoomLevel = this[_scale];
        this[_previousScale] = this[_scale];
      } else {
        this[_scale] = dart.nullCheck(this.viewMatrix).getMaxScaleOnAxis();
        focalPointScene = this.toScene(dart.nullCheck(details).localFocalPoint);
        this[_gestureType] == null ? this[_gestureType] = pdf_container._getGestureType(!dart.test(this[_scaleEnabled]) ? 1.0 : details.scale) : null;
        if (dart.test(this[_restrictPanForWebSelectionMode]())) {
          return;
        }
        if (this[_gestureType] == pdf_container._GestureType.pan) {
          this[_panAxis] == null ? this[_panAxis] = pdf_container._getPanAxis(dart.nullCheck(this[_referenceFocalPoint]), focalPointScene) : null;
        }
        if (!dart.test(this[_gestureIsSupported](dart.nullCheck(this[_gestureType])))) {
          return;
        }
      }
      switch (dart.nullCheck(this[_gestureType])) {
        case C[300] || CT.C300:
        {
          if (this[_scaleStart] == null || details == null) {
            return;
          }
          this[_origin] = ui.Offset.zero;
          let desiredScale = dart.nullCheck(this[_scaleStart]) * dart.notNull(details.scale);
          let scaleChange = desiredScale / dart.notNull(this[_scale]);
          this.viewMatrix = this[_matrixScale](dart.nullCheck(this.viewMatrix), scaleChange);
          let focalPointSceneScaled = this.toScene(details.localFocalPoint);
          let translation = focalPointSceneScaled['-'](dart.nullCheck(this[_referenceFocalPoint]));
          this.viewMatrix = this[_matrixTranslate](dart.nullCheck(this.viewMatrix), new ui.Offset.new(translation.dx, 0.0));
          this[_setPosition](translation);
          let focalPointSceneCheck = this.toScene(details.localFocalPoint);
          if (!dart.equals(pdf_container._round(dart.nullCheck(this[_referenceFocalPoint])), pdf_container._round(focalPointSceneCheck))) {
            this[_referenceFocalPoint] = focalPointSceneCheck;
          }
          return;
        }
        case C[301] || CT.C301:
        {
          if (dart.test(this[_restrictPanForWebSelectionMode]())) {
            return;
          }
          if (this[_referenceFocalPoint] == null || dart.nullCheck(details).scale !== 1.0) {
            return;
          }
          let translationChange = dart.nullCheck(focalPointScene)['-'](dart.nullCheck(this[_referenceFocalPoint]));
          this.viewMatrix = this[_matrixTranslate](dart.nullCheck(this.viewMatrix), new ui.Offset.new(translationChange.dx, dart.notNull(this.widget.scrollController.position.maxScrollExtent) > 0 ? 0.0 : translationChange.dy));
          this[_referenceFocalPoint] = this.toScene(details.localFocalPoint);
          this[_panOnGreyArea](translationChange.dy, details.focalPoint);
          return;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
    }
    [_handleScaleEnd](details) {
      let t41;
      if (details == null) dart.nullFailed(I[14], 646, 40, "details");
      if (this.widget.interactionMode == enums.PdfInteractionMode.pan) {
        this[_cursor$] = mouse_cursor.SystemMouseCursors.grab;
      }
      this[_pdfController].zoomLevel = this[_scale];
      this[_previousScale] = this[_scale];
      this[_scaleStart] = null;
      this[_referenceFocalPoint] = null;
      t41 = this[_animation];
      t41 == null ? null : t41.removeListener(dart.bind(this, _handleAnimate));
      this[_animationController].reset();
      if (this[_gestureType] != null && !dart.test(this[_gestureIsSupported](dart.nullCheck(this[_gestureType])))) {
        this[_panAxis] = null;
        return;
      }
      if (this[_gestureType] != pdf_container._GestureType.pan || dart.notNull(details.velocity.pixelsPerSecond.distance) < 50) {
        this[_panAxis] = null;
        return;
      }
      let translationVector = dart.nullCheck(this.viewMatrix).getTranslation();
      let translation = new ui.Offset.new(translationVector.x, translationVector.y);
      let frictionSimulationX = new friction_simulation.FrictionSimulation.new(0.0000135, translation.dx, details.velocity.pixelsPerSecond.dx);
      let frictionSimulationY = new friction_simulation.FrictionSimulation.new(0.0000135, translation.dy, details.velocity.pixelsPerSecond.dy);
      let tFinal = pdf_container._getFinalTime(details.velocity.pixelsPerSecond.distance, 0.0000135);
      this[_animation] = new (T.TweenOfOffset()).new({begin: translation, end: new ui.Offset.new(frictionSimulationX.finalX, frictionSimulationY.finalX)}).animate(new animations.CurvedAnimation.new({parent: this[_animationController], curve: curves.Curves.decelerate}));
      this[_animationController].duration = new core.Duration.new({milliseconds: (dart.notNull(tFinal) * 1000)[$round]()});
      dart.nullCheck(this[_animation]).addListener(dart.bind(this, _handleAnimate));
      this[_animationController].forward();
      if (true && !dart.test(this.widget.isMobileWebView) && !dart.test(this[_isMousePointer$])) {
        this[_animateToOffset](frictionSimulationY.finalX, tFinal);
      }
    }
    [_animateToOffset](yOffset, velocity) {
      if (yOffset == null) dart.nullFailed(I[14], 701, 32, "yOffset");
      if (velocity == null) dart.nullFailed(I[14], 701, 48, "velocity");
      let offset = dart.notNull(this.widget.scrollController.offset) - dart.notNull(yOffset) * 2;
      this.widget.scrollController.animateTo(offset, {curve: curves.Curves.decelerate, duration: new core.Duration.new({milliseconds: (dart.notNull(velocity) * 2000)[$round]()})});
    }
    [_panOnGreyArea](offset, focalPoint) {
      if (offset == null) dart.nullFailed(I[14], 709, 30, "offset");
      if (focalPoint == null) dart.nullFailed(I[14], 709, 45, "focalPoint");
      if (true && dart.test(this[_isMousePointer$]) && this.widget.interactionMode == enums.PdfInteractionMode.pan && !dart.test(this[_isContentOverflowed]) && this[_childKey].currentContext != null) {
        let childRenderBox = box.RenderBox.as(dart.nullCheck(this[_childKey].currentContext).findRenderObject());
        let position = childRenderBox.globalToLocal(focalPoint);
        if (dart.notNull(position.dx) < 0 || dart.notNull(position.dx) > dart.notNull(childRenderBox.paintBounds.width)) {
          this[_mouseDragOffsetInPanMode] = dart.notNull(this[_mouseDragOffsetInPanMode]) + dart.notNull(offset);
          this[_animateToOffset](this[_mouseDragOffsetInPanMode], 0.5);
        }
      }
    }
    [_handleAnimate]() {
      let t41;
      if (!dart.test(this[_animationController].isAnimating)) {
        this[_panAxis] = null;
        t41 = this[_animation];
        t41 == null ? null : t41.removeListener(dart.bind(this, _handleAnimate));
        this[_animation] = null;
        this[_animationController].reset();
        return;
      }
      let translationVector = dart.nullCheck(this.viewMatrix).getTranslation();
      let translation = new ui.Offset.new(translationVector.x, translationVector.y);
      let translationScene = this.toScene(translation);
      let animationScene = this.toScene(dart.nullCheck(this[_animation]).value);
      let translationChangeScene = animationScene['-'](translationScene);
      if (!dart.test(this[_restrictPanForWebSelectionMode]())) {
        this.viewMatrix = this[_matrixTranslate](dart.nullCheck(this.viewMatrix), new ui.Offset.new(translationChangeScene.dx, 0.0));
      }
    }
    [_handleTapDown](details) {
      if (details == null) dart.nullFailed(I[14], 752, 38, "details");
      this[_tapPosition] = details.localPosition;
      this[_isMousePointer$] = details.kind == ui.PointerDeviceKind.mouse ? true : false;
    }
    findHorizontalOffset() {
      this[_scale] = dart.nullCheck(this.viewMatrix).getMaxScaleOnAxis();
      let xPosition = dart.nullCheck(this.viewMatrix).getTranslation().x[$round]() === 0 ? 0.0 : dart.nullCheck(this.viewMatrix).getTranslation().x[$roundToDouble]()[$abs]() / dart.notNull(this[_scale]);
      return xPosition;
    }
    [_onZoomLevelChanged]() {
      let t41;
      this[_overflowOrigin] = 0.0;
      if (this[_scale] != this[_pdfController].zoomLevel) {
        let scaleChangeFactor = 1.0;
        this[_isContentOverflowed] = false;
        if (dart.notNull(this[_pdfController].zoomLevel) > dart.notNull(this[_maxScale])) {
          this[_pdfController].zoomLevel = this[_maxScale];
        } else if (dart.notNull(this[_pdfController].zoomLevel) < dart.notNull(this[_minScale])) {
          this[_pdfController].zoomLevel = this[_minScale];
        }
        this[_previousScale] = this[_scale];
        this[_scale] = this[_pdfController].zoomLevel;
        scaleChangeFactor = this[_scale];
        if (dart.notNull(this[_previousScale]) > dart.notNull(this[_scale])) {
          scaleChangeFactor = dart.notNull(this[_scale]) / dart.notNull(this[_previousScale]);
        } else if (dart.notNull(this[_previousScale]) < dart.notNull(this[_scale]) && dart.notNull(this[_scale]) - dart.notNull(this[_previousScale]) < 1 && this[_previousScale] !== 1) {
          this.viewMatrix = this[_matrixScale](dart.nullCheck(this.viewMatrix), 1.0 / dart.notNull(this[_previousScale]));
          this.viewMatrix = this[_matrixTranslate](dart.nullCheck(this.viewMatrix), new ui.Offset.new(this[_viewport].width, this[_viewport].height));
        }
        this.viewMatrix = this[_matrixScale](dart.nullCheck(this.viewMatrix), scaleChangeFactor);
        if (!true || true && dart.test(this.widget.isMobileWebView)) {
          this.viewMatrix = this[_matrixTranslate](dart.nullCheck(this.viewMatrix), new ui.Offset.new(this[_viewport].width, this[_viewport].height));
        } else {
          let childRenderBox = box.RenderBox.as(dart.nullCheck(this[_childKey].currentContext).findRenderObject());
          let parentRenderBox = box.RenderBox.as(dart.nullCheck(this[_parentKey].currentContext).findRenderObject());
          if (this.widget.maxPdfPageWidth !== 0 && dart.notNull(this.widget.maxPdfPageWidth) * dart.notNull(this[_scale]) > dart.notNull(this.widget.viewportConstraints.maxWidth)) {
            this[_isContentOverflowed] = true;
            this[_overflowOrigin] = dart.notNull(childRenderBox.localToGlobal(ui.Offset.zero).dx) - dart.notNull(parentRenderBox.localToGlobal(ui.Offset.zero).dx);
          } else {
            this[_isContentOverflowed] = false;
          }
          t41 = binding.WidgetsBinding.instance;
          t41 == null ? null : t41.addPostFrameCallback(dart.fn(timeStamp => {
            if (timeStamp == null) dart.nullFailed(I[14], 821, 56, "timeStamp");
            if (dart.test(this[_isContentOverflowed])) {
              this.setState(dart.fn(() => {
                this[_overflowOrigin] = dart.notNull(this[_overflowOrigin]) + (dart.notNull(childRenderBox.localToGlobal(ui.Offset.zero).dx) - dart.notNull(parentRenderBox.localToGlobal(ui.Offset.zero).dx)) / 2;
              }, T.VoidTovoid()));
            }
          }, T.DurationTovoid()));
          this.viewMatrix = this[_matrixTranslate](dart.nullCheck(this.viewMatrix), new ui.Offset.new(this[_viewport].width, this[_viewport].height));
        }
      }
      if (this.widget.onZoomLevelChanged != null) {
        let newZoomLevel = this[_scale];
        let oldZoomLevel = this[_previousScale];
        if (newZoomLevel != oldZoomLevel) {
          dart.nullCheck(this.widget.onZoomLevelChanged)(new pdfviewer_callback_details.PdfZoomDetails.new(newZoomLevel, oldZoomLevel));
        }
      }
    }
    [_onControllerValueChange](opts) {
      let property = opts && 'property' in opts ? opts.property : null;
      if (property === "zoomLevel") {
        this[_onZoomLevelChanged]();
      }
    }
    [_restrictPanForWebSelectionMode]() {
      if (true && this.widget.interactionMode == enums.PdfInteractionMode.selection && this[_gestureType] == pdf_container._GestureType.pan && dart.test(this[_isMousePointer$])) {
        return true;
      }
      return false;
    }
    jumpHorizontally(value) {
      if (value == null) dart.nullFailed(I[14], 863, 32, "value");
      this.viewMatrix = this[_matrixTranslate](dart.nullCheck(this.viewMatrix), new ui.Offset.new(-dart.notNull(this[_viewport].width), this[_pdfController].scrollOffset.dy));
      this.viewMatrix = this[_matrixTranslate](dart.nullCheck(this.viewMatrix), new ui.Offset.new(value, 0.0));
    }
    reset() {
      this.viewMatrix = vector_math_64.Matrix4.identity();
    }
    initState() {
      super.initState();
      this[_pdfController] = this.widget.pdfController;
      this[_pdfController].addListener(dart.bind(this, _onControllerValueChange));
      this.viewMatrix = vector_math_64.Matrix4.identity();
      if (dart.notNull(this.widget.initialZoomLevel) > 1) {
        if (dart.notNull(this.widget.initialZoomLevel) >= dart.notNull(this[_minScale]) && dart.notNull(this.widget.initialZoomLevel) <= dart.notNull(this[_maxScale])) {
          this.viewMatrix = this[_matrixScale](dart.nullCheck(this.viewMatrix), this.widget.initialZoomLevel);
          this[_scale] = this.widget.initialZoomLevel;
          this[_previousScale] = this[_scale];
        }
      }
      if (dart.notNull(this[_pdfController].zoomLevel) < dart.notNull(this[_minScale]) || dart.notNull(this[_pdfController].zoomLevel) > dart.notNull(this[_maxScale])) {
        this[_pdfController].zoomLevel = this[_minScale];
      } else {
        this.viewMatrix = this[_matrixScale](dart.nullCheck(this.viewMatrix), dart.notNull(this.widget.initialZoomLevel) > dart.notNull(this[_pdfController].zoomLevel) ? dart.notNull(this[_pdfController].zoomLevel) / dart.notNull(this.widget.initialZoomLevel) : this[_pdfController].zoomLevel);
        this[_scale] = this[_pdfController].zoomLevel;
        this[_previousScale] = this.widget.initialZoomLevel;
      }
      this[_animationController] = new animation_controller.AnimationController.new({vsync: this});
      T.FutureOfNull().delayed(core.Duration.zero, dart.fn(() => async.async(core.Null, (function*() {
        this.viewMatrix = this[_matrixTranslate](dart.nullCheck(this.viewMatrix), new ui.Offset.new(this.widget.initialScrollOffset.dx, 0.0));
      }).bind(this)), T.VoidToFutureOfNull()));
      this.widget.scrollController.addListener(dart.bind(this, _updateOrigin));
    }
    dispose() {
      this[_animationController].dispose();
      this[_pdfController].removeListener(dart.bind(this, _onControllerValueChange));
      this.widget.scrollController.removeListener(dart.bind(this, _updateOrigin));
      super.dispose();
    }
    build(context) {
      if (context == null) dart.nullFailed(I[14], 926, 29, "context");
      let keyedSubTree = new basic.KeyedSubtree.new({key: this[_childKey], child: new basic.Center.new({child: new basic.Column.new({children: T.ListOfWidget().generate(this.widget.pdfController.pageCount, dart.fn(index => {
              let t43, t42, t41;
              if (index == null) dart.nullFailed(I[14], 932, 20, "index");
              t41 = this.widget;
              t42 = context;
              t43 = index;
              return t41.itemBuilder(t42, t43);
            }, T.intToWidget()))[$toList](), $creationLocationd_0dea112b090073317d4: C[302] || CT.C302}), $creationLocationd_0dea112b090073317d4: C[305] || CT.C305}), $creationLocationd_0dea112b090073317d4: C[308] || CT.C308});
      let scrollChild = null;
      if (true && !dart.test(this.widget.isMobileWebView) && dart.test(this[_isMousePointer$]) && this.widget.interactionMode == enums.PdfInteractionMode.selection) {
        scrollChild = new single_child_scroll_view.SingleChildScrollView.new({controller: this.widget.scrollController, physics: new scroll_physics.NeverScrollableScrollPhysics.new(), child: keyedSubTree, $creationLocationd_0dea112b090073317d4: C[312] || CT.C312});
      } else {
        scrollChild = new single_child_scroll_view.SingleChildScrollView.new({controller: this.widget.scrollController, child: keyedSubTree, $creationLocationd_0dea112b090073317d4: C[317] || CT.C317});
      }
      let isAligned = false;
      let alignment = true && !dart.test(this.widget.isMobileWebView) ? dart.test(this[_isContentOverflowed]) ? alignment$.Alignment.topLeft : alignment$.Alignment.topCenter : alignment$.Alignment.topLeft;
      if (this.widget.maxPdfPageWidth !== 0 && dart.notNull(this.widget.maxPdfPageWidth) * dart.notNull(this[_scale]) > dart.notNull(this.widget.viewportConstraints.maxWidth) && true && !dart.test(this.widget.isMobileWebView)) {
        alignment = alignment$.Alignment.topLeft;
        isAligned = true;
      }
      let child = new basic.Transform.new({origin: dart.test(this[_isContentOverflowed]) ? new ui.Offset.new(this[_overflowOrigin], 0.0) : this[_origin], transform: dart.nullCheck(this.viewMatrix), alignment: alignment, child: scrollChild, $creationLocationd_0dea112b090073317d4: C[321] || CT.C321});
      if (true && !dart.test(this.widget.isMobileWebView)) {
        child = new basic.OverflowBox.new({alignment: isAligned ? alignment : alignment$.Alignment.topCenter, minWidth: 0.0, minHeight: 0.0, maxWidth: 1 / 0, child: child, $creationLocationd_0dea112b090073317d4: C[327] || CT.C327});
      }
      return new basic.MouseRegion.new({cursor: this[_cursor$], onHover: dart.fn(details => {
          if (details == null) dart.nullFailed(I[14], 977, 17, "details");
          if (this.widget.interactionMode == enums.PdfInteractionMode.pan) {
            this[_cursor$] = mouse_cursor.SystemMouseCursors.grab;
          } else {
            this[_cursor$] = mouse_cursor.SystemMouseCursors.basic;
          }
        }, T.PointerHoverEventTovoid()), child: new basic.Listener.new({key: this[_parentKey], onPointerSignal: dart.fn(pointerSignal => {
            if (pointerSignal == null) dart.nullFailed(I[14], 986, 27, "pointerSignal");
            if (true && !dart.test(this.widget.isMobileWebView) && events.PointerScrollEvent.is(pointerSignal)) {
              this[_isMousePointer$] = true;
              let offset = dart.notNull(this.widget.scrollController.offset) + dart.notNull(pointerSignal.scrollDelta.dy);
              if (pointerSignal.scrollDelta.dy[$isNegative]) {
                this.widget.scrollController.jumpTo(math.max(core.double, 0.0, offset));
              } else {
                this.widget.scrollController.jumpTo(math.min(core.double, this.widget.scrollController.position.maxScrollExtent, offset));
              }
            }
          }, T.PointerSignalEventTovoid()), onPointerUp: dart.fn(details => {
            if (details == null) dart.nullFailed(I[14], 1000, 23, "details");
            if (true && !dart.test(this.widget.isMobileWebView) && details.buttons !== 2) {
              let now = new core.DateTime.now().millisecondsSinceEpoch;
              if (dart.notNull(now) - dart.notNull(this[_lastTap$]) > 500) {
                if (!dart.test(this[_isPanning]) && !dart.test(this[_isLongPressed])) {
                  this.widget.onTap();
                } else if (dart.test(this[_isPanning])) {
                  this[_isPanning] = false;
                }
                this[_isLongPressed] = false;
              }
              this[_lastTap$] = now;
            }
          }, T.PointerUpEventTovoid()), child: new gesture_detector.RawGestureDetector.new({behavior: proxy_box.HitTestBehavior.opaque, gestures: new (T.LinkedMapOfType$GestureRecognizerFactoryOfGestureRecognizer()).from([dart.wrapType(pdf_container.PdfScaleRecognizer), new (T.GestureRecognizerFactoryWithHandlersOfPdfScaleRecognizer()).new(dart.fn(() => new pdf_container.PdfScaleRecognizer.new(), T.VoidToPdfScaleRecognizer()), dart.fn(instance => {
                if (instance == null) dart.nullFailed(I[14], 1023, 37, "instance");
                instance.onStart = dart.fn(details => {
                  if (details == null) dart.nullFailed(I[14], 1024, 39, "details");
                  return this[_handleScaleStart](details);
                }, T.ScaleStartDetailsTovoid());
                instance.onUpdate = dart.fn(details => {
                  if (details == null) dart.nullFailed(I[14], 1026, 24, "details");
                  return this[_handleScaleUpdate]({details: details});
                }, T.ScaleUpdateDetailsTovoid());
                instance.onEnd = dart.fn(details => {
                  if (details == null) dart.nullFailed(I[14], 1027, 37, "details");
                  return this[_handleScaleEnd](details);
                }, T.ScaleEndDetailsTovoid());
              }, T.PdfScaleRecognizerTovoid())), dart.wrapType(multitap.DoubleTapGestureRecognizer), new (T.GestureRecognizerFactoryWithHandlersOfDoubleTapGestureRecognizer()).new(dart.fn(() => new multitap.DoubleTapGestureRecognizer.new(), T.VoidToDoubleTapGestureRecognizer()), dart.fn(instances => {
                if (instances == null) dart.nullFailed(I[14], 1033, 45, "instances");
                if (!true && dart.test(this.widget.enableDoubleTapZooming) || true && this.widget.interactionMode == enums.PdfInteractionMode.pan || true && dart.test(this.widget.isMobileWebView) && dart.test(this.widget.enableDoubleTapZooming)) {
                  instances.onDoubleTap = dart.fn(() => this[_handleScaleUpdate]({doubleTap: true}), T.VoidTovoid());
                } else {
                  instances.onDoubleTap = null;
                }
              }, T.DoubleTapGestureRecognizerTovoid())), dart.wrapType(pdf_container.TapRecognizer), new (T.GestureRecognizerFactoryWithHandlersOfTapRecognizer()).new(dart.fn(() => new pdf_container.TapRecognizer.new(), T.VoidToTapRecognizer()), dart.fn(instances => {
                if (instances == null) dart.nullFailed(I[14], 1052, 32, "instances");
                instances.onTapDown = dart.fn((num, details) => {
                  if (num == null) dart.nullFailed(I[14], 1053, 46, "num");
                  if (details == null) dart.nullFailed(I[14], 1053, 51, "details");
                  this[_isMousePointer$] = details.kind == ui.PointerDeviceKind.mouse ? true : false;
                  if (!dart.test(focus_scope.FocusScope.of(context).hasPrimaryFocus)) {
                    focus_scope.FocusScope.of(context).unfocus();
                  }
                  this[_handleTapDown](details);
                }, T.intAndTapDownDetailsTovoid());
              }, T.TapRecognizerTovoid())), dart.wrapType(pdf_container.PdfLongPressRecognizer), new (T.GestureRecognizerFactoryWithHandlersOfPdfLongPressRecognizer()).new(dart.fn(() => new pdf_container.PdfLongPressRecognizer.new(), T.VoidToPdfLongPressRecognizer()), dart.fn(instances => {
                if (instances == null) dart.nullFailed(I[14], 1066, 41, "instances");
                if (true && !dart.test(this.widget.isMobileWebView)) {
                  instances.onLongPressStart = dart.fn(details => {
                    if (details == null) dart.nullFailed(I[14], 1068, 51, "details");
                    this[_isLongPressed] = true;
                  }, T.LongPressStartDetailsTovoid());
                  instances.onLongPressEnd = dart.fn(details => {
                    if (details == null) dart.nullFailed(I[14], 1071, 49, "details");
                    this[_isLongPressed] = false;
                  }, T.LongPressEndDetailsTovoid());
                }
              }, T.PdfLongPressRecognizerTovoid()))]), child: new basic.ClipRect.new({clipBehavior: ui.Clip.hardEdge, child: child, $creationLocationd_0dea112b090073317d4: C[334] || CT.C334}), $creationLocationd_0dea112b090073317d4: C[338] || CT.C338}), $creationLocationd_0dea112b090073317d4: C[343] || CT.C343}), $creationLocationd_0dea112b090073317d4: C[349] || CT.C349});
    }
    toScene(viewportPoint) {
      if (viewportPoint == null) dart.nullFailed(I[14], 1087, 25, "viewportPoint");
      let inverseMatrix = vector_math_64.Matrix4.inverted(dart.nullCheck(this.viewMatrix));
      let untransformed = inverseMatrix.transform3(vector_math_64.Vector3.new(viewportPoint.dx, viewportPoint.dy, 0.0));
      return new ui.Offset.new(untransformed.x, untransformed.y);
    }
    [_updateOrigin]() {
      if (dart.test(this[_isPositionHandlerAttached])) {
        return;
      }
      this[_isPositionHandlerAttached] = true;
      this.widget.scrollController.position.addListener(dart.fn(() => {
        if (this[_scaleStart] != null) {
          return;
        }
        this.setState(dart.fn(() => {
          let position = this.widget.scrollController.position;
          if (dart.notNull(position.maxScrollExtent) > 0) {
            let factor = dart.notNull(position.pixels) / dart.notNull(position.maxScrollExtent);
            this[_origin] = new ui.Offset.new(0.0, dart.notNull(position.viewportDimension) * factor);
          }
        }, T.VoidTovoid()));
      }, T.VoidTovoid()));
    }
  };
  (pdf_container.PdfContainerState.new = function() {
    this[_alignPanAxis] = false;
    this[_isLongPressed] = false;
    this[_minScale] = 1.0;
    this[_maxScale] = 3.0;
    this[_scale] = 1.0;
    this[_previousScale] = 1.0;
    this[_boundaryMargin] = edge_insets.EdgeInsets.zero;
    this[_childKey] = T.GlobalKeyOfStateOfStatefulWidget().new();
    this[_parentKey] = T.GlobalKeyOfStateOfStatefulWidget().new();
    this[_animation] = null;
    this[__PdfContainerState__animationController] = null;
    this[__PdfContainerState__animationController_isSet] = false;
    this[__PdfContainerState__pdfController] = null;
    this[__PdfContainerState__pdfController_isSet] = false;
    this[_tapPosition] = ui.Offset.zero;
    this[_previousOffset] = ui.Offset.zero;
    this[_origin] = null;
    this[_panAxis] = null;
    this[_referenceFocalPoint] = null;
    this[_scaleStart] = null;
    this[_gestureType] = null;
    this[_isPositionHandlerAttached] = false;
    this[_isContentOverflowed] = false;
    this[_overflowOrigin] = 0.0;
    this[_isMousePointer$] = false;
    this[_mouseDragOffsetInPanMode] = 0.0;
    this[_scaleEnabled] = true;
    this[_lastTap$] = new core.DateTime.now().millisecondsSinceEpoch;
    this[_isPanning] = false;
    this[_cursor$] = mouse_cursor.SystemMouseCursors.basic;
    this[_viewMatrix] = null;
    this[_pixels] = 0.0;
    this[_translationY] = 0.0;
    pdf_container.PdfContainerState.__proto__.new.call(this);
    ;
  }).prototype = pdf_container.PdfContainerState.prototype;
  dart.addTypeTests(pdf_container.PdfContainerState);
  dart.addTypeCaches(pdf_container.PdfContainerState);
  dart.setMethodSignature(pdf_container.PdfContainerState, () => ({
    __proto__: dart.getMethods(pdf_container.PdfContainerState.__proto__),
    [_matrixTranslate]: dart.fnType(vector_math_64.Matrix4, [vector_math_64.Matrix4, ui.Offset]),
    [_matrixScale]: dart.fnType(vector_math_64.Matrix4, [vector_math_64.Matrix4, core.double]),
    [_gestureIsSupported]: dart.fnType(core.bool, [pdf_container._GestureType]),
    [_handleScaleStart]: dart.fnType(dart.void, [scale.ScaleStartDetails]),
    jumpOnZoomedDocument: dart.fnType(dart.void, [dart.nullable(core.double), core.double, core.double]),
    [_setPosition]: dart.fnType(dart.void, [ui.Offset]),
    [_handleScaleUpdate]: dart.fnType(dart.void, [], {details: dart.nullable(scale.ScaleUpdateDetails), doubleTap: core.bool}, {}),
    [_handleScaleEnd]: dart.fnType(dart.void, [scale.ScaleEndDetails]),
    [_animateToOffset]: dart.fnType(dart.void, [core.double, core.double]),
    [_panOnGreyArea]: dart.fnType(dart.void, [core.double, ui.Offset]),
    [_handleAnimate]: dart.fnType(dart.void, []),
    [_handleTapDown]: dart.fnType(dart.void, [tap.TapDownDetails]),
    findHorizontalOffset: dart.fnType(core.double, []),
    [_onZoomLevelChanged]: dart.fnType(dart.void, []),
    [_onControllerValueChange]: dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {}),
    [_restrictPanForWebSelectionMode]: dart.fnType(core.bool, []),
    jumpHorizontally: dart.fnType(dart.void, [core.double]),
    reset: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    toScene: dart.fnType(ui.Offset, [ui.Offset]),
    [_updateOrigin]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(pdf_container.PdfContainerState, () => ({
    __proto__: dart.getGetters(pdf_container.PdfContainerState.__proto__),
    [_animationController]: animation_controller.AnimationController,
    [_pdfController]: pdfviewer.PdfViewerController,
    viewMatrix: dart.nullable(vector_math_64.Matrix4),
    [_viewport]: ui.Rect
  }));
  dart.setSetterSignature(pdf_container.PdfContainerState, () => ({
    __proto__: dart.getSetters(pdf_container.PdfContainerState.__proto__),
    [_animationController]: animation_controller.AnimationController,
    [_pdfController]: pdfviewer.PdfViewerController,
    viewMatrix: dart.dynamic
  }));
  dart.setLibraryUri(pdf_container.PdfContainerState, I[15]);
  dart.setFieldSignature(pdf_container.PdfContainerState, () => ({
    __proto__: dart.getFields(pdf_container.PdfContainerState.__proto__),
    [_alignPanAxis]: dart.finalFieldType(core.bool),
    [_isLongPressed]: dart.fieldType(core.bool),
    [_minScale]: dart.finalFieldType(core.double),
    [_maxScale]: dart.finalFieldType(core.double),
    [_scale]: dart.fieldType(core.double),
    [_previousScale]: dart.fieldType(core.double),
    [_boundaryMargin]: dart.finalFieldType(edge_insets.EdgeInsets),
    [_childKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_parentKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_animation]: dart.fieldType(dart.nullable(animation.Animation$(ui.Offset))),
    [__PdfContainerState__animationController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [__PdfContainerState__animationController_isSet]: dart.fieldType(core.bool),
    [__PdfContainerState__pdfController]: dart.fieldType(dart.nullable(pdfviewer.PdfViewerController)),
    [__PdfContainerState__pdfController_isSet]: dart.fieldType(core.bool),
    [_tapPosition]: dart.fieldType(ui.Offset),
    [_previousOffset]: dart.fieldType(ui.Offset),
    [_origin]: dart.fieldType(dart.nullable(ui.Offset)),
    [_panAxis]: dart.fieldType(dart.nullable(basic_types.Axis)),
    [_referenceFocalPoint]: dart.fieldType(dart.nullable(ui.Offset)),
    [_scaleStart]: dart.fieldType(dart.nullable(core.double)),
    [_gestureType]: dart.fieldType(dart.nullable(pdf_container._GestureType)),
    [_isPositionHandlerAttached]: dart.fieldType(core.bool),
    [_isContentOverflowed]: dart.fieldType(core.bool),
    [_overflowOrigin]: dart.fieldType(core.double),
    [_isMousePointer$]: dart.fieldType(core.bool),
    [_mouseDragOffsetInPanMode]: dart.fieldType(core.double),
    [_scaleEnabled]: dart.finalFieldType(core.bool),
    [_lastTap$]: dart.fieldType(core.int),
    [_isPanning]: dart.fieldType(core.bool),
    [_cursor$]: dart.fieldType(mouse_cursor.SystemMouseCursor),
    [_viewMatrix]: dart.fieldType(dart.nullable(vector_math_64.Matrix4)),
    [_pixels]: dart.fieldType(core.double),
    [_translationY]: dart.fieldType(core.double)
  }));
  dart.defineLazy(pdf_container.PdfContainerState, {
    /*pdf_container.PdfContainerState._kDrag*/get _kDrag() {
      return 0.0000135;
    }
  }, false);
  pdf_container.PdfScaleRecognizer = class PdfScaleRecognizer extends scale.ScaleGestureRecognizer {
    rejectGesture(pointer) {
      if (pointer == null) dart.nullFailed(I[14], 1132, 26, "pointer");
      this.acceptGesture(pointer);
    }
  };
  (pdf_container.PdfScaleRecognizer.new = function() {
    pdf_container.PdfScaleRecognizer.__proto__.new.call(this);
    ;
  }).prototype = pdf_container.PdfScaleRecognizer.prototype;
  dart.addTypeTests(pdf_container.PdfScaleRecognizer);
  dart.addTypeCaches(pdf_container.PdfScaleRecognizer);
  dart.setLibraryUri(pdf_container.PdfScaleRecognizer, I[15]);
  pdf_container.PdfLongPressRecognizer = class PdfLongPressRecognizer extends long_press.LongPressGestureRecognizer {
    rejectGesture(pointer) {
      if (pointer == null) dart.nullFailed(I[14], 1141, 26, "pointer");
      this.acceptGesture(pointer);
    }
  };
  (pdf_container.PdfLongPressRecognizer.new = function() {
    pdf_container.PdfLongPressRecognizer.__proto__.new.call(this);
    ;
  }).prototype = pdf_container.PdfLongPressRecognizer.prototype;
  dart.addTypeTests(pdf_container.PdfLongPressRecognizer);
  dart.addTypeCaches(pdf_container.PdfLongPressRecognizer);
  dart.setLibraryUri(pdf_container.PdfLongPressRecognizer, I[15]);
  pdf_container._GestureType = class _GestureType extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (pdf_container._GestureType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[14], 1149, 6, "index");
    if (_name == null) dart.nullFailed(I[14], 1149, 6, "_name");
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = pdf_container._GestureType.prototype;
  dart.addTypeTests(pdf_container._GestureType);
  dart.addTypeCaches(pdf_container._GestureType);
  dart.setLibraryUri(pdf_container._GestureType, I[15]);
  dart.setFieldSignature(pdf_container._GestureType, () => ({
    __proto__: dart.getFields(pdf_container._GestureType.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(pdf_container._GestureType, ['toString']);
  pdf_container._GestureType.pan = C[301] || CT.C301;
  pdf_container._GestureType.scale = C[300] || CT.C300;
  pdf_container._GestureType.values = C[354] || CT.C354;
  pdf_container.TapRecognizer = class TapRecognizer extends multitap.MultiTapGestureRecognizer {
    rejectGesture(pointers) {
      if (pointers == null) dart.nullFailed(I[14], 1284, 26, "pointers");
      this.acceptGesture(pointers);
    }
  };
  (pdf_container.TapRecognizer.new = function() {
    pdf_container.TapRecognizer.__proto__.new.call(this);
    ;
  }).prototype = pdf_container.TapRecognizer.prototype;
  dart.addTypeTests(pdf_container.TapRecognizer);
  dart.addTypeCaches(pdf_container.TapRecognizer);
  dart.setLibraryUri(pdf_container.TapRecognizer, I[15]);
  var _name$0 = dart.privateName(basic_types, "_name");
  pdf_container._getFinalTime = function _getFinalTime(velocity, drag) {
    if (velocity == null) dart.nullFailed(I[14], 1156, 29, "velocity");
    if (drag == null) dart.nullFailed(I[14], 1156, 46, "drag");
    return math.log(10 / dart.notNull(velocity)) / math.log(dart.notNull(drag) / 100);
  };
  pdf_container._getGestureType = function _getGestureType(scale) {
    if (scale == null) dart.nullFailed(I[14], 1162, 37, "scale");
    if ((dart.notNull(scale) - 1)[$abs]() > 0.0) {
      return pdf_container._GestureType.scale;
    } else {
      return pdf_container._GestureType.pan;
    }
  };
  pdf_container._getMatrixTranslation = function _getMatrixTranslation(matrix) {
    if (matrix == null) dart.nullFailed(I[14], 1171, 38, "matrix");
    let nextTranslation = matrix.getTranslation();
    return new ui.Offset.new(nextTranslation.x, nextTranslation.y);
  };
  pdf_container._transformViewport = function _transformViewport(matrix, viewport) {
    let t41;
    if (matrix == null) dart.nullFailed(I[14], 1180, 33, "matrix");
    if (viewport == null) dart.nullFailed(I[14], 1180, 46, "viewport");
    let inverseMatrix = (t41 = matrix.clone(), (() => {
      t41.invert();
      return t41;
    })());
    return new vector_math_64.Quad.points(inverseMatrix.transform3(vector_math_64.Vector3.new(viewport.topLeft.dx, viewport.topLeft.dy, 0.0)), inverseMatrix.transform3(vector_math_64.Vector3.new(viewport.topRight.dx, viewport.topRight.dy, 0.0)), inverseMatrix.transform3(vector_math_64.Vector3.new(viewport.bottomRight.dx, viewport.bottomRight.dy, 0.0)), inverseMatrix.transform3(vector_math_64.Vector3.new(viewport.bottomLeft.dx, viewport.bottomLeft.dy, 0.0)));
  };
  pdf_container._getAxisAlignedBoundingBox = function _getAxisAlignedBoundingBox(rect) {
    let t41;
    if (rect == null) dart.nullFailed(I[14], 1207, 38, "rect");
    let transformMatrix = (t41 = vector_math_64.Matrix4.identity(), (() => {
      t41.translate(dart.notNull(rect.size.width) / 2, dart.notNull(rect.size.height) / 2);
      t41.translate(-dart.notNull(rect.size.width) / 2, -dart.notNull(rect.size.height) / 2);
      return t41;
    })());
    let boundaries = new vector_math_64.Quad.points(transformMatrix.transform3(vector_math_64.Vector3.new(rect.left, rect.top, 0.0)), transformMatrix.transform3(vector_math_64.Vector3.new(rect.right, rect.top, 0.0)), transformMatrix.transform3(vector_math_64.Vector3.new(rect.right, rect.bottom, 0.0)), transformMatrix.transform3(vector_math_64.Vector3.new(rect.left, rect.bottom, 0.0)));
    return pdf_container.PdfContainer.getAxisAlignedBoundingBox(boundaries);
  };
  pdf_container._exceedsBy = function _exceedsBy(boundary, viewport) {
    if (boundary == null) dart.nullFailed(I[14], 1223, 24, "boundary");
    if (viewport == null) dart.nullFailed(I[14], 1223, 39, "viewport");
    let viewportPoints = T.JSArrayOfVector3().of([viewport.point0, viewport.point1, viewport.point2, viewport.point3]);
    let largestExcess = ui.Offset.zero;
    for (let point of viewportPoints) {
      let pointInside = pdf_container.PdfContainer.getNearestPointInside(point, boundary);
      let excess = new ui.Offset.new(dart.notNull(pointInside.x) - dart.notNull(point.x), dart.notNull(pointInside.y) - dart.notNull(point.y));
      if (excess.dx[$abs]() > largestExcess.dx[$abs]()) {
        largestExcess = new ui.Offset.new(excess.dx, largestExcess.dy);
      }
      if (excess.dy[$abs]() > largestExcess.dy[$abs]()) {
        largestExcess = new ui.Offset.new(largestExcess.dx, excess.dy);
      }
    }
    return pdf_container._round(largestExcess);
  };
  pdf_container._round = function _round(offset) {
    if (offset == null) dart.nullFailed(I[14], 1251, 22, "offset");
    return new ui.Offset.new(core.double.parse(offset.dx[$toStringAsFixed](9)), core.double.parse(offset.dy[$toStringAsFixed](9)));
  };
  pdf_container._alignAxis = function _alignAxis(offset, axis) {
    if (offset == null) dart.nullFailed(I[14], 1260, 26, "offset");
    if (axis == null) dart.nullFailed(I[14], 1260, 39, "axis");
    switch (axis) {
      case C[355] || CT.C355:
      {
        return new ui.Offset.new(offset.dx, 0.0);
      }
      case C[356] || CT.C356:
      default:
      {
        return new ui.Offset.new(0.0, offset.dy);
      }
    }
  };
  pdf_container._getPanAxis = function _getPanAxis(point1, point2) {
    if (point1 == null) dart.nullFailed(I[14], 1272, 26, "point1");
    if (point2 == null) dart.nullFailed(I[14], 1272, 41, "point2");
    if (dart.equals(point1, point2)) {
      return null;
    }
    let x = dart.notNull(point2.dx) - dart.notNull(point1.dx);
    let y = dart.notNull(point2.dy) - dart.notNull(point1.dy);
    return x[$abs]() > y[$abs]() ? basic_types.Axis.horizontal : basic_types.Axis.vertical;
  };
  var interactionMode$2 = dart.privateName(pdfviewer, "SfPdfViewer.interactionMode");
  var initialZoomLevel$0 = dart.privateName(pdfviewer, "SfPdfViewer.initialZoomLevel");
  var initialScrollOffset$0 = dart.privateName(pdfviewer, "SfPdfViewer.initialScrollOffset");
  var enableDocumentLinkAnnotation$0 = dart.privateName(pdfviewer, "SfPdfViewer.enableDocumentLinkAnnotation");
  var pageSpacing$0 = dart.privateName(pdfviewer, "SfPdfViewer.pageSpacing");
  var controller$0 = dart.privateName(pdfviewer, "SfPdfViewer.controller");
  var canShowScrollHead$0 = dart.privateName(pdfviewer, "SfPdfViewer.canShowScrollHead");
  var canShowScrollStatus$ = dart.privateName(pdfviewer, "SfPdfViewer.canShowScrollStatus");
  var canShowPaginationDialog$0 = dart.privateName(pdfviewer, "SfPdfViewer.canShowPaginationDialog");
  var enableDoubleTapZooming$0 = dart.privateName(pdfviewer, "SfPdfViewer.enableDoubleTapZooming");
  var enableTextSelection$1 = dart.privateName(pdfviewer, "SfPdfViewer.enableTextSelection");
  var searchTextHighlightColor$1 = dart.privateName(pdfviewer, "SfPdfViewer.searchTextHighlightColor");
  var onDocumentLoaded$ = dart.privateName(pdfviewer, "SfPdfViewer.onDocumentLoaded");
  var onDocumentLoadFailed$ = dart.privateName(pdfviewer, "SfPdfViewer.onDocumentLoadFailed");
  var onZoomLevelChanged$0 = dart.privateName(pdfviewer, "SfPdfViewer.onZoomLevelChanged");
  var onTextSelectionChanged$1 = dart.privateName(pdfviewer, "SfPdfViewer.onTextSelectionChanged");
  var onPageChanged$ = dart.privateName(pdfviewer, "SfPdfViewer.onPageChanged");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var _name$1 = dart.privateName(enums, "_name");
  var Color_value = dart.privateName(ui, "Color.value");
  var _provider = dart.privateName(pdfviewer, "_provider");
  pdfviewer.SfPdfViewer = class SfPdfViewer extends framework.StatefulWidget {
    get interactionMode() {
      return this[interactionMode$2];
    }
    set interactionMode(value) {
      super.interactionMode = value;
    }
    get initialZoomLevel() {
      return this[initialZoomLevel$0];
    }
    set initialZoomLevel(value) {
      super.initialZoomLevel = value;
    }
    get initialScrollOffset() {
      return this[initialScrollOffset$0];
    }
    set initialScrollOffset(value) {
      super.initialScrollOffset = value;
    }
    get enableDocumentLinkAnnotation() {
      return this[enableDocumentLinkAnnotation$0];
    }
    set enableDocumentLinkAnnotation(value) {
      super.enableDocumentLinkAnnotation = value;
    }
    get pageSpacing() {
      return this[pageSpacing$0];
    }
    set pageSpacing(value) {
      super.pageSpacing = value;
    }
    get controller() {
      return this[controller$0];
    }
    set controller(value) {
      super.controller = value;
    }
    get canShowScrollHead() {
      return this[canShowScrollHead$0];
    }
    set canShowScrollHead(value) {
      super.canShowScrollHead = value;
    }
    get canShowScrollStatus() {
      return this[canShowScrollStatus$];
    }
    set canShowScrollStatus(value) {
      super.canShowScrollStatus = value;
    }
    get canShowPaginationDialog() {
      return this[canShowPaginationDialog$0];
    }
    set canShowPaginationDialog(value) {
      super.canShowPaginationDialog = value;
    }
    get enableDoubleTapZooming() {
      return this[enableDoubleTapZooming$0];
    }
    set enableDoubleTapZooming(value) {
      super.enableDoubleTapZooming = value;
    }
    get enableTextSelection() {
      return this[enableTextSelection$1];
    }
    set enableTextSelection(value) {
      super.enableTextSelection = value;
    }
    get searchTextHighlightColor() {
      return this[searchTextHighlightColor$1];
    }
    set searchTextHighlightColor(value) {
      super.searchTextHighlightColor = value;
    }
    get onDocumentLoaded() {
      return this[onDocumentLoaded$];
    }
    set onDocumentLoaded(value) {
      super.onDocumentLoaded = value;
    }
    get onDocumentLoadFailed() {
      return this[onDocumentLoadFailed$];
    }
    set onDocumentLoadFailed(value) {
      super.onDocumentLoadFailed = value;
    }
    get onZoomLevelChanged() {
      return this[onZoomLevelChanged$0];
    }
    set onZoomLevelChanged(value) {
      super.onZoomLevelChanged = value;
    }
    get onTextSelectionChanged() {
      return this[onTextSelectionChanged$1];
    }
    set onTextSelectionChanged(value) {
      super.onTextSelectionChanged = value;
    }
    get onPageChanged() {
      return this[onPageChanged$];
    }
    set onPageChanged(value) {
      super.onPageChanged = value;
    }
    createState() {
      return new pdfviewer.SfPdfViewerState.new();
    }
  };
  (pdfviewer.SfPdfViewer.asset = function(name, opts) {
    if (name == null) dart.nullFailed(I[16], 106, 28, "name");
    let key = opts && 'key' in opts ? opts.key : null;
    let bundle = opts && 'bundle' in opts ? opts.bundle : null;
    let canShowScrollHead = opts && 'canShowScrollHead' in opts ? opts.canShowScrollHead : true;
    if (canShowScrollHead == null) dart.nullFailed(I[16], 109, 12, "canShowScrollHead");
    let pageSpacing = opts && 'pageSpacing' in opts ? opts.pageSpacing : 4;
    if (pageSpacing == null) dart.nullFailed(I[16], 110, 12, "pageSpacing");
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let onZoomLevelChanged = opts && 'onZoomLevelChanged' in opts ? opts.onZoomLevelChanged : null;
    let canShowScrollStatus = opts && 'canShowScrollStatus' in opts ? opts.canShowScrollStatus : true;
    if (canShowScrollStatus == null) dart.nullFailed(I[16], 113, 12, "canShowScrollStatus");
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let onDocumentLoaded = opts && 'onDocumentLoaded' in opts ? opts.onDocumentLoaded : null;
    let enableDoubleTapZooming = opts && 'enableDoubleTapZooming' in opts ? opts.enableDoubleTapZooming : true;
    if (enableDoubleTapZooming == null) dart.nullFailed(I[16], 116, 12, "enableDoubleTapZooming");
    let enableTextSelection = opts && 'enableTextSelection' in opts ? opts.enableTextSelection : true;
    if (enableTextSelection == null) dart.nullFailed(I[16], 117, 12, "enableTextSelection");
    let onTextSelectionChanged = opts && 'onTextSelectionChanged' in opts ? opts.onTextSelectionChanged : null;
    let onDocumentLoadFailed = opts && 'onDocumentLoadFailed' in opts ? opts.onDocumentLoadFailed : null;
    let enableDocumentLinkAnnotation = opts && 'enableDocumentLinkAnnotation' in opts ? opts.enableDocumentLinkAnnotation : true;
    if (enableDocumentLinkAnnotation == null) dart.nullFailed(I[16], 120, 12, "enableDocumentLinkAnnotation");
    let canShowPaginationDialog = opts && 'canShowPaginationDialog' in opts ? opts.canShowPaginationDialog : true;
    if (canShowPaginationDialog == null) dart.nullFailed(I[16], 121, 12, "canShowPaginationDialog");
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : C[357] || CT.C357;
    if (initialScrollOffset == null) dart.nullFailed(I[16], 122, 12, "initialScrollOffset");
    let initialZoomLevel = opts && 'initialZoomLevel' in opts ? opts.initialZoomLevel : 1;
    if (initialZoomLevel == null) dart.nullFailed(I[16], 123, 12, "initialZoomLevel");
    let interactionMode = opts && 'interactionMode' in opts ? opts.interactionMode : C[358] || CT.C358;
    if (interactionMode == null) dart.nullFailed(I[16], 124, 12, "interactionMode");
    let searchTextHighlightColor = opts && 'searchTextHighlightColor' in opts ? opts.searchTextHighlightColor : C[359] || CT.C359;
    if (searchTextHighlightColor == null) dart.nullFailed(I[16], 125, 12, "searchTextHighlightColor");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowScrollHead$0] = canShowScrollHead;
    this[pageSpacing$0] = pageSpacing;
    this[controller$0] = controller;
    this[onZoomLevelChanged$0] = onZoomLevelChanged;
    this[canShowScrollStatus$] = canShowScrollStatus;
    this[onPageChanged$] = onPageChanged;
    this[onDocumentLoaded$] = onDocumentLoaded;
    this[enableDoubleTapZooming$0] = enableDoubleTapZooming;
    this[enableTextSelection$1] = enableTextSelection;
    this[onTextSelectionChanged$1] = onTextSelectionChanged;
    this[onDocumentLoadFailed$] = onDocumentLoadFailed;
    this[enableDocumentLinkAnnotation$0] = enableDocumentLinkAnnotation;
    this[canShowPaginationDialog$0] = canShowPaginationDialog;
    this[initialScrollOffset$0] = initialScrollOffset;
    this[initialZoomLevel$0] = initialZoomLevel;
    this[interactionMode$2] = interactionMode;
    this[searchTextHighlightColor$1] = searchTextHighlightColor;
    this[_provider] = new pdf_provider.AssetPdf.new(name, bundle);
    if (!(dart.notNull(pageSpacing) >= 0)) dart.assertFailed(null, I[16], 127, 16, "pageSpacing >= 0");
    pdfviewer.SfPdfViewer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdfviewer.SfPdfViewer.prototype;
  (pdfviewer.SfPdfViewer.network = function(src, opts) {
    if (src == null) dart.nullFailed(I[16], 152, 30, "src");
    let key = opts && 'key' in opts ? opts.key : null;
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let canShowScrollHead = opts && 'canShowScrollHead' in opts ? opts.canShowScrollHead : true;
    if (canShowScrollHead == null) dart.nullFailed(I[16], 155, 12, "canShowScrollHead");
    let pageSpacing = opts && 'pageSpacing' in opts ? opts.pageSpacing : 4;
    if (pageSpacing == null) dart.nullFailed(I[16], 156, 12, "pageSpacing");
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let onZoomLevelChanged = opts && 'onZoomLevelChanged' in opts ? opts.onZoomLevelChanged : null;
    let canShowScrollStatus = opts && 'canShowScrollStatus' in opts ? opts.canShowScrollStatus : true;
    if (canShowScrollStatus == null) dart.nullFailed(I[16], 159, 12, "canShowScrollStatus");
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let enableDoubleTapZooming = opts && 'enableDoubleTapZooming' in opts ? opts.enableDoubleTapZooming : true;
    if (enableDoubleTapZooming == null) dart.nullFailed(I[16], 161, 12, "enableDoubleTapZooming");
    let enableTextSelection = opts && 'enableTextSelection' in opts ? opts.enableTextSelection : true;
    if (enableTextSelection == null) dart.nullFailed(I[16], 162, 12, "enableTextSelection");
    let onTextSelectionChanged = opts && 'onTextSelectionChanged' in opts ? opts.onTextSelectionChanged : null;
    let onDocumentLoaded = opts && 'onDocumentLoaded' in opts ? opts.onDocumentLoaded : null;
    let onDocumentLoadFailed = opts && 'onDocumentLoadFailed' in opts ? opts.onDocumentLoadFailed : null;
    let enableDocumentLinkAnnotation = opts && 'enableDocumentLinkAnnotation' in opts ? opts.enableDocumentLinkAnnotation : true;
    if (enableDocumentLinkAnnotation == null) dart.nullFailed(I[16], 166, 12, "enableDocumentLinkAnnotation");
    let canShowPaginationDialog = opts && 'canShowPaginationDialog' in opts ? opts.canShowPaginationDialog : true;
    if (canShowPaginationDialog == null) dart.nullFailed(I[16], 167, 12, "canShowPaginationDialog");
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : C[357] || CT.C357;
    if (initialScrollOffset == null) dart.nullFailed(I[16], 168, 12, "initialScrollOffset");
    let initialZoomLevel = opts && 'initialZoomLevel' in opts ? opts.initialZoomLevel : 1;
    if (initialZoomLevel == null) dart.nullFailed(I[16], 169, 12, "initialZoomLevel");
    let interactionMode = opts && 'interactionMode' in opts ? opts.interactionMode : C[358] || CT.C358;
    if (interactionMode == null) dart.nullFailed(I[16], 170, 12, "interactionMode");
    let searchTextHighlightColor = opts && 'searchTextHighlightColor' in opts ? opts.searchTextHighlightColor : C[359] || CT.C359;
    if (searchTextHighlightColor == null) dart.nullFailed(I[16], 171, 12, "searchTextHighlightColor");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowScrollHead$0] = canShowScrollHead;
    this[pageSpacing$0] = pageSpacing;
    this[controller$0] = controller;
    this[onZoomLevelChanged$0] = onZoomLevelChanged;
    this[canShowScrollStatus$] = canShowScrollStatus;
    this[onPageChanged$] = onPageChanged;
    this[enableDoubleTapZooming$0] = enableDoubleTapZooming;
    this[enableTextSelection$1] = enableTextSelection;
    this[onTextSelectionChanged$1] = onTextSelectionChanged;
    this[onDocumentLoaded$] = onDocumentLoaded;
    this[onDocumentLoadFailed$] = onDocumentLoadFailed;
    this[enableDocumentLinkAnnotation$0] = enableDocumentLinkAnnotation;
    this[canShowPaginationDialog$0] = canShowPaginationDialog;
    this[initialScrollOffset$0] = initialScrollOffset;
    this[initialZoomLevel$0] = initialZoomLevel;
    this[interactionMode$2] = interactionMode;
    this[searchTextHighlightColor$1] = searchTextHighlightColor;
    this[_provider] = new pdf_provider.NetworkPdf.new(src, headers);
    if (!(dart.notNull(pageSpacing) >= 0)) dart.assertFailed(null, I[16], 173, 16, "pageSpacing >= 0");
    pdfviewer.SfPdfViewer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdfviewer.SfPdfViewer.prototype;
  (pdfviewer.SfPdfViewer.memory = function(bytes, opts) {
    if (bytes == null) dart.nullFailed(I[16], 197, 32, "bytes");
    let key = opts && 'key' in opts ? opts.key : null;
    let canShowScrollHead = opts && 'canShowScrollHead' in opts ? opts.canShowScrollHead : true;
    if (canShowScrollHead == null) dart.nullFailed(I[16], 199, 12, "canShowScrollHead");
    let pageSpacing = opts && 'pageSpacing' in opts ? opts.pageSpacing : 4;
    if (pageSpacing == null) dart.nullFailed(I[16], 200, 12, "pageSpacing");
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let onZoomLevelChanged = opts && 'onZoomLevelChanged' in opts ? opts.onZoomLevelChanged : null;
    let canShowScrollStatus = opts && 'canShowScrollStatus' in opts ? opts.canShowScrollStatus : true;
    if (canShowScrollStatus == null) dart.nullFailed(I[16], 203, 12, "canShowScrollStatus");
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let enableDoubleTapZooming = opts && 'enableDoubleTapZooming' in opts ? opts.enableDoubleTapZooming : true;
    if (enableDoubleTapZooming == null) dart.nullFailed(I[16], 205, 12, "enableDoubleTapZooming");
    let enableTextSelection = opts && 'enableTextSelection' in opts ? opts.enableTextSelection : true;
    if (enableTextSelection == null) dart.nullFailed(I[16], 206, 12, "enableTextSelection");
    let onTextSelectionChanged = opts && 'onTextSelectionChanged' in opts ? opts.onTextSelectionChanged : null;
    let onDocumentLoaded = opts && 'onDocumentLoaded' in opts ? opts.onDocumentLoaded : null;
    let onDocumentLoadFailed = opts && 'onDocumentLoadFailed' in opts ? opts.onDocumentLoadFailed : null;
    let enableDocumentLinkAnnotation = opts && 'enableDocumentLinkAnnotation' in opts ? opts.enableDocumentLinkAnnotation : true;
    if (enableDocumentLinkAnnotation == null) dart.nullFailed(I[16], 210, 12, "enableDocumentLinkAnnotation");
    let canShowPaginationDialog = opts && 'canShowPaginationDialog' in opts ? opts.canShowPaginationDialog : true;
    if (canShowPaginationDialog == null) dart.nullFailed(I[16], 211, 12, "canShowPaginationDialog");
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : C[357] || CT.C357;
    if (initialScrollOffset == null) dart.nullFailed(I[16], 212, 12, "initialScrollOffset");
    let initialZoomLevel = opts && 'initialZoomLevel' in opts ? opts.initialZoomLevel : 1;
    if (initialZoomLevel == null) dart.nullFailed(I[16], 213, 12, "initialZoomLevel");
    let interactionMode = opts && 'interactionMode' in opts ? opts.interactionMode : C[358] || CT.C358;
    if (interactionMode == null) dart.nullFailed(I[16], 214, 12, "interactionMode");
    let searchTextHighlightColor = opts && 'searchTextHighlightColor' in opts ? opts.searchTextHighlightColor : C[359] || CT.C359;
    if (searchTextHighlightColor == null) dart.nullFailed(I[16], 215, 12, "searchTextHighlightColor");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowScrollHead$0] = canShowScrollHead;
    this[pageSpacing$0] = pageSpacing;
    this[controller$0] = controller;
    this[onZoomLevelChanged$0] = onZoomLevelChanged;
    this[canShowScrollStatus$] = canShowScrollStatus;
    this[onPageChanged$] = onPageChanged;
    this[enableDoubleTapZooming$0] = enableDoubleTapZooming;
    this[enableTextSelection$1] = enableTextSelection;
    this[onTextSelectionChanged$1] = onTextSelectionChanged;
    this[onDocumentLoaded$] = onDocumentLoaded;
    this[onDocumentLoadFailed$] = onDocumentLoadFailed;
    this[enableDocumentLinkAnnotation$0] = enableDocumentLinkAnnotation;
    this[canShowPaginationDialog$0] = canShowPaginationDialog;
    this[initialScrollOffset$0] = initialScrollOffset;
    this[initialZoomLevel$0] = initialZoomLevel;
    this[interactionMode$2] = interactionMode;
    this[searchTextHighlightColor$1] = searchTextHighlightColor;
    this[_provider] = new pdf_provider.MemoryPdf.new(bytes);
    if (!(dart.notNull(pageSpacing) >= 0)) dart.assertFailed(null, I[16], 217, 16, "pageSpacing >= 0");
    pdfviewer.SfPdfViewer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdfviewer.SfPdfViewer.prototype;
  (pdfviewer.SfPdfViewer.file = function(file, opts) {
    if (file == null) dart.nullFailed(I[16], 246, 10, "file");
    let key = opts && 'key' in opts ? opts.key : null;
    let canShowScrollHead = opts && 'canShowScrollHead' in opts ? opts.canShowScrollHead : true;
    if (canShowScrollHead == null) dart.nullFailed(I[16], 248, 10, "canShowScrollHead");
    let pageSpacing = opts && 'pageSpacing' in opts ? opts.pageSpacing : 4;
    if (pageSpacing == null) dart.nullFailed(I[16], 249, 10, "pageSpacing");
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let onZoomLevelChanged = opts && 'onZoomLevelChanged' in opts ? opts.onZoomLevelChanged : null;
    let canShowScrollStatus = opts && 'canShowScrollStatus' in opts ? opts.canShowScrollStatus : true;
    if (canShowScrollStatus == null) dart.nullFailed(I[16], 252, 10, "canShowScrollStatus");
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let enableDoubleTapZooming = opts && 'enableDoubleTapZooming' in opts ? opts.enableDoubleTapZooming : true;
    if (enableDoubleTapZooming == null) dart.nullFailed(I[16], 254, 10, "enableDoubleTapZooming");
    let enableTextSelection = opts && 'enableTextSelection' in opts ? opts.enableTextSelection : true;
    if (enableTextSelection == null) dart.nullFailed(I[16], 255, 10, "enableTextSelection");
    let onTextSelectionChanged = opts && 'onTextSelectionChanged' in opts ? opts.onTextSelectionChanged : null;
    let onDocumentLoaded = opts && 'onDocumentLoaded' in opts ? opts.onDocumentLoaded : null;
    let onDocumentLoadFailed = opts && 'onDocumentLoadFailed' in opts ? opts.onDocumentLoadFailed : null;
    let enableDocumentLinkAnnotation = opts && 'enableDocumentLinkAnnotation' in opts ? opts.enableDocumentLinkAnnotation : true;
    if (enableDocumentLinkAnnotation == null) dart.nullFailed(I[16], 259, 10, "enableDocumentLinkAnnotation");
    let canShowPaginationDialog = opts && 'canShowPaginationDialog' in opts ? opts.canShowPaginationDialog : true;
    if (canShowPaginationDialog == null) dart.nullFailed(I[16], 260, 10, "canShowPaginationDialog");
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : C[357] || CT.C357;
    if (initialScrollOffset == null) dart.nullFailed(I[16], 261, 10, "initialScrollOffset");
    let initialZoomLevel = opts && 'initialZoomLevel' in opts ? opts.initialZoomLevel : 1;
    if (initialZoomLevel == null) dart.nullFailed(I[16], 262, 10, "initialZoomLevel");
    let interactionMode = opts && 'interactionMode' in opts ? opts.interactionMode : C[358] || CT.C358;
    if (interactionMode == null) dart.nullFailed(I[16], 263, 10, "interactionMode");
    let searchTextHighlightColor = opts && 'searchTextHighlightColor' in opts ? opts.searchTextHighlightColor : C[359] || CT.C359;
    if (searchTextHighlightColor == null) dart.nullFailed(I[16], 264, 10, "searchTextHighlightColor");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[canShowScrollHead$0] = canShowScrollHead;
    this[pageSpacing$0] = pageSpacing;
    this[controller$0] = controller;
    this[onZoomLevelChanged$0] = onZoomLevelChanged;
    this[canShowScrollStatus$] = canShowScrollStatus;
    this[onPageChanged$] = onPageChanged;
    this[enableDoubleTapZooming$0] = enableDoubleTapZooming;
    this[enableTextSelection$1] = enableTextSelection;
    this[onTextSelectionChanged$1] = onTextSelectionChanged;
    this[onDocumentLoaded$] = onDocumentLoaded;
    this[onDocumentLoadFailed$] = onDocumentLoadFailed;
    this[enableDocumentLinkAnnotation$0] = enableDocumentLinkAnnotation;
    this[canShowPaginationDialog$0] = canShowPaginationDialog;
    this[initialScrollOffset$0] = initialScrollOffset;
    this[initialZoomLevel$0] = initialZoomLevel;
    this[interactionMode$2] = interactionMode;
    this[searchTextHighlightColor$1] = searchTextHighlightColor;
    this[_provider] = new pdf_provider.FilePdf.new(file);
    if (!(dart.notNull(pageSpacing) >= 0)) dart.assertFailed(null, I[16], 266, 16, "pageSpacing >= 0");
    pdfviewer.SfPdfViewer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = pdfviewer.SfPdfViewer.prototype;
  dart.addTypeTests(pdfviewer.SfPdfViewer);
  dart.addTypeCaches(pdfviewer.SfPdfViewer);
  dart.setMethodSignature(pdfviewer.SfPdfViewer, () => ({
    __proto__: dart.getMethods(pdfviewer.SfPdfViewer.__proto__),
    createState: dart.fnType(pdfviewer.SfPdfViewerState, [])
  }));
  dart.setLibraryUri(pdfviewer.SfPdfViewer, I[17]);
  dart.setFieldSignature(pdfviewer.SfPdfViewer, () => ({
    __proto__: dart.getFields(pdfviewer.SfPdfViewer.__proto__),
    [_provider]: dart.finalFieldType(pdf_provider.PdfProvider),
    interactionMode: dart.finalFieldType(enums.PdfInteractionMode),
    initialZoomLevel: dart.finalFieldType(core.double),
    initialScrollOffset: dart.finalFieldType(ui.Offset),
    enableDocumentLinkAnnotation: dart.finalFieldType(core.bool),
    pageSpacing: dart.finalFieldType(core.double),
    controller: dart.finalFieldType(dart.nullable(pdfviewer.PdfViewerController)),
    canShowScrollHead: dart.finalFieldType(core.bool),
    canShowScrollStatus: dart.finalFieldType(core.bool),
    canShowPaginationDialog: dart.finalFieldType(core.bool),
    enableDoubleTapZooming: dart.finalFieldType(core.bool),
    enableTextSelection: dart.finalFieldType(core.bool),
    searchTextHighlightColor: dart.finalFieldType(ui.Color),
    onDocumentLoaded: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfDocumentLoadedDetails]))),
    onDocumentLoadFailed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfDocumentLoadFailedDetails]))),
    onZoomLevelChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfZoomDetails]))),
    onTextSelectionChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfTextSelectionChangedDetails]))),
    onPageChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [pdfviewer_callback_details.PdfPageChangedDetails])))
  }));
  var __SfPdfViewerState__plugin = dart.privateName(pdfviewer, "_#SfPdfViewerState#_plugin");
  var __SfPdfViewerState__plugin_isSet = dart.privateName(pdfviewer, "_#SfPdfViewerState#_plugin#isSet");
  var __SfPdfViewerState__scrollController = dart.privateName(pdfviewer, "_#SfPdfViewerState#_scrollController");
  var __SfPdfViewerState__scrollController_isSet = dart.privateName(pdfviewer, "_#SfPdfViewerState#_scrollController#isSet");
  var __SfPdfViewerState__pdfViewerController = dart.privateName(pdfviewer, "_#SfPdfViewerState#_pdfViewerController");
  var __SfPdfViewerState__pdfViewerController_isSet = dart.privateName(pdfviewer, "_#SfPdfViewerState#_pdfViewerController#isSet");
  var _getPdfFileCancellableOperation = dart.privateName(pdfviewer, "_getPdfFileCancellableOperation");
  var _pdfDocumentLoadCancellableOperation = dart.privateName(pdfviewer, "_pdfDocumentLoadCancellableOperation");
  var _getHeightCancellableOperation = dart.privateName(pdfviewer, "_getHeightCancellableOperation");
  var _getWidthCancellableOperation = dart.privateName(pdfviewer, "_getWidthCancellableOperation");
  var _originalHeight = dart.privateName(pdfviewer, "_originalHeight");
  var _originalWidth = dart.privateName(pdfviewer, "_originalWidth");
  var _maxPdfPageWidth = dart.privateName(pdfviewer, "_maxPdfPageWidth");
  var _isScrolled = dart.privateName(pdfviewer, "_isScrolled");
  var _isScrollControllerInitiated = dart.privateName(pdfviewer, "_isScrollControllerInitiated");
  var _deviceOrientation = dart.privateName(pdfviewer, "_deviceOrientation");
  var _viewportWidth = dart.privateName(pdfviewer, "_viewportWidth");
  var _offsetBeforeOrientationChange = dart.privateName(pdfviewer, "_offsetBeforeOrientationChange");
  var __SfPdfViewerState__viewportConstraints = dart.privateName(pdfviewer, "_#SfPdfViewerState#_viewportConstraints");
  var __SfPdfViewerState__viewportConstraints_isSet = dart.privateName(pdfviewer, "_#SfPdfViewerState#_viewportConstraints#isSet");
  var _previousPageNumber = dart.privateName(pdfviewer, "_previousPageNumber");
  var _document = dart.privateName(pdfviewer, "_document");
  var _hasError = dart.privateName(pdfviewer, "_hasError");
  var _panEnabled = dart.privateName(pdfviewer, "_panEnabled");
  var _isMobile = dart.privateName(pdfviewer, "_isMobile");
  var _isTextSelectionCleared = dart.privateName(pdfviewer, "_isTextSelectionCleared");
  var _isLoadCallbackInvoked = dart.privateName(pdfviewer, "_isLoadCallbackInvoked");
  var _actualViewportHeight = dart.privateName(pdfviewer, "_actualViewportHeight");
  var _actualViewportMaxScroll = dart.privateName(pdfviewer, "_actualViewportMaxScroll");
  var _pdfPages = dart.privateName(pdfviewer, "_pdfPages");
  var _bookmarkKey = dart.privateName(pdfviewer, "_bookmarkKey");
  var _pdfContainerKey = dart.privateName(pdfviewer, "_pdfContainerKey");
  var _scrollHeadOverlayKey = dart.privateName(pdfviewer, "_scrollHeadOverlayKey");
  var _pdfPagesKey = dart.privateName(pdfviewer, "_pdfPagesKey");
  var _textCollection = dart.privateName(pdfviewer, "_textCollection");
  var _pdfTextExtractor = dart.privateName(pdfviewer, "_pdfTextExtractor");
  var _pdfViewerThemeData$3 = dart.privateName(pdfviewer, "_pdfViewerThemeData");
  var _isPageChanged = dart.privateName(pdfviewer, "_isPageChanged");
  var _isManualScrolled = dart.privateName(pdfviewer, "_isManualScrolled");
  var _plugin = dart.privateName(pdfviewer, "_plugin");
  var _scrollController = dart.privateName(pdfviewer, "_scrollController");
  var _pdfViewerController = dart.privateName(pdfviewer, "_pdfViewerController");
  var _viewportConstraints = dart.privateName(pdfviewer, "_viewportConstraints");
  var _handleControllerValueChange = dart.privateName(pdfviewer, "_handleControllerValueChange");
  var _loadPdfDocument = dart.privateName(pdfviewer, "_loadPdfDocument");
  var _reset = dart.privateName(pdfviewer, "_reset");
  var _compareDocument = dart.privateName(pdfviewer, "_compareDocument");
  var _disposeCollection = dart.privateName(pdfviewer, "_disposeCollection");
  var _getPdfFile = dart.privateName(pdfviewer, "_getPdfFile");
  var _pageCount = dart.privateName(pdfviewer, "_pageCount");
  var _pageNumber = dart.privateName(pdfviewer, "_pageNumber");
  var _checkMount = dart.privateName(pdfviewer, "_checkMount");
  var _scrollControllerInitiated = dart.privateName(pdfviewer, "_scrollControllerInitiated");
  var _isScrollPositionAttached = dart.privateName(pdfviewer, "_isScrollPositionAttached");
  var _verticalOffset = dart.privateName(pdfviewer, "_verticalOffset");
  var _horizontalOffset = dart.privateName(pdfviewer, "_horizontalOffset");
  var _updateCurrentPageNumber = dart.privateName(pdfviewer, "_updateCurrentPageNumber");
  var _findDevice$ = dart.privateName(pdfviewer, "_findDevice");
  var _getViewportGlobalRect = dart.privateName(pdfviewer, "_getViewportGlobalRect");
  var _getImages = dart.privateName(pdfviewer, "_getImages");
  var _handleScrollNotification = dart.privateName(pdfviewer, "_handleScrollNotification");
  var _handleOnTap = dart.privateName(pdfviewer, "_handleOnTap");
  var _calculateSize = dart.privateName(pdfviewer, "_calculateSize");
  var _handleTextSelectionDragStarted = dart.privateName(pdfviewer, "_handleTextSelectionDragStarted");
  var _handleTextSelectionDragEnded = dart.privateName(pdfviewer, "_handleTextSelectionDragEnded");
  var _handleDocumentLinkNavigationInvoked = dart.privateName(pdfviewer, "_handleDocumentLinkNavigationInvoked");
  var _pdfTextSearchResult = dart.privateName(pdfviewer, "_pdfTextSearchResult");
  var _updateOffsetOnOrientationChange = dart.privateName(pdfviewer, "_updateOffsetOnOrientationChange");
  var _clearSelection$ = dart.privateName(pdfviewer, "_clearSelection");
  var _handleScrollHeadDragEnd$ = dart.privateName(pdfviewer, "_handleScrollHeadDragEnd");
  var _pageChanged = dart.privateName(pdfviewer, "_pageChanged");
  var _currentOccurrenceIndex = dart.privateName(pdfviewer, "_currentOccurrenceIndex");
  var _getInstanceInPage = dart.privateName(pdfviewer, "_getInstanceInPage");
  var _updateSearchInstance = dart.privateName(pdfviewer, "_updateSearchInstance");
  var _scrollPositionX = dart.privateName(pdfviewer, "_scrollPositionX");
  var _scrollPositionY = dart.privateName(pdfviewer, "_scrollPositionY");
  var _getPageNumber = dart.privateName(pdfviewer, "_getPageNumber");
  var _jumpToPage = dart.privateName(pdfviewer, "_jumpToPage");
  var _jumpToBookmark = dart.privateName(pdfviewer, "_jumpToBookmark");
  var _pdfBookmark = dart.privateName(pdfviewer, "_pdfBookmark");
  var _clearTextSelection = dart.privateName(pdfviewer, "_clearTextSelection");
  var _pageNavigator = dart.privateName(pdfviewer, "_pageNavigator");
  var _name$2 = dart.privateName(pdfviewer_helper, "_name");
  var _handleTextSearch = dart.privateName(pdfviewer, "_handleTextSearch");
  var _searchText = dart.privateName(pdfviewer, "_searchText");
  var _textSearchOption = dart.privateName(pdfviewer, "_textSearchOption");
  var _totalSearchTextCount = dart.privateName(pdfviewer, "_totalSearchTextCount");
  var _updateResult = dart.privateName(pdfviewer, "_updateResult");
  var _jumpToSearchInstance = dart.privateName(pdfviewer, "_jumpToSearchInstance");
  var _jumpToNextInstance = dart.privateName(pdfviewer, "_jumpToNextInstance");
  var _jumpToPreviousInstance = dart.privateName(pdfviewer, "_jumpToPreviousInstance");
  var _totalInstanceCount = dart.privateName(pdfviewer, "_totalInstanceCount");
  const State_WidgetsBindingObserver$36 = class State_WidgetsBindingObserver extends framework.State$(pdfviewer.SfPdfViewer) {};
  (State_WidgetsBindingObserver$36.new = function() {
    State_WidgetsBindingObserver$36.__proto__.new.call(this);
  }).prototype = State_WidgetsBindingObserver$36.prototype;
  dart.applyMixin(State_WidgetsBindingObserver$36, binding.WidgetsBindingObserver);
  pdfviewer.SfPdfViewerState = class SfPdfViewerState extends State_WidgetsBindingObserver$36 {
    get [_plugin]() {
      let t41;
      return dart.test(this[__SfPdfViewerState__plugin_isSet]) ? (t41 = this[__SfPdfViewerState__plugin], t41) : dart.throw(new _internal.LateError.fieldNI("_plugin"));
    }
    set [_plugin](t41) {
      if (t41 == null) dart.nullFailed(I[16], 648, 24, "null");
      this[__SfPdfViewerState__plugin_isSet] = true;
      this[__SfPdfViewerState__plugin] = t41;
    }
    get [_scrollController]() {
      let t42;
      return dart.test(this[__SfPdfViewerState__scrollController_isSet]) ? (t42 = this[__SfPdfViewerState__scrollController], t42) : dart.throw(new _internal.LateError.fieldNI("_scrollController"));
    }
    set [_scrollController](t42) {
      if (t42 == null) dart.nullFailed(I[16], 649, 25, "null");
      this[__SfPdfViewerState__scrollController_isSet] = true;
      this[__SfPdfViewerState__scrollController] = t42;
    }
    get [_pdfViewerController]() {
      let t43;
      return dart.test(this[__SfPdfViewerState__pdfViewerController_isSet]) ? (t43 = this[__SfPdfViewerState__pdfViewerController], t43) : dart.throw(new _internal.LateError.fieldNI("_pdfViewerController"));
    }
    set [_pdfViewerController](t43) {
      if (t43 == null) dart.nullFailed(I[16], 650, 28, "null");
      this[__SfPdfViewerState__pdfViewerController_isSet] = true;
      this[__SfPdfViewerState__pdfViewerController] = t43;
    }
    get [_viewportConstraints]() {
      let t44;
      return dart.test(this[__SfPdfViewerState__viewportConstraints_isSet]) ? (t44 = this[__SfPdfViewerState__viewportConstraints], t44) : dart.throw(new _internal.LateError.fieldNI("_viewportConstraints"));
    }
    set [_viewportConstraints](t44) {
      if (t44 == null) dart.nullFailed(I[16], 663, 23, "null");
      this[__SfPdfViewerState__viewportConstraints_isSet] = true;
      this[__SfPdfViewerState__viewportConstraints] = t44;
    }
    get isBookmarkViewOpen() {
      let t45, t45$;
      t45$ = (t45 = this[_bookmarkKey].currentState, t45 == null ? null : t45.showBookmark);
      return t45$ == null ? false : t45$;
    }
    initState() {
      let t45, t45$, t45$0;
      super.initState();
      this[_plugin] = new pdfviewer_plugin.PdfViewerPlugin.new();
      this[_pdfViewerController] = (t45 = this.widget.controller, t45 == null ? new pdfviewer.PdfViewerController.new() : t45);
      this[_pdfViewerController].addListener(dart.bind(this, _handleControllerValueChange));
      if (page_storage.PageStorageKey.is(this.widget.key) && page_storage.PageStorage.of(this.context) != null) {
        let offset = core.double.as(dart.nullCheck(page_storage.PageStorage.of(this.context)).readState(this.context));
        this[_scrollController] = new scroll_controller.ScrollController.new({initialScrollOffset: offset});
        let zoomLevel = core.double.as((t45$ = page_storage.PageStorage.of(this.context), t45$ == null ? null : t45$.readState(this.context, {identifier: "zoomLevel_" + dart.notNull(dart.toString(this.widget.key))})));
        this[_pdfViewerController].zoomLevel = zoomLevel;
      } else {
        this[_scrollController] = new scroll_controller.ScrollController.new({initialScrollOffset: this.widget.initialScrollOffset.dy});
      }
      this[_actualViewportHeight] = this[_actualViewportMaxScroll] = 0.0;
      this[_isScrolled] = true;
      this[_offsetBeforeOrientationChange] = 0.0;
      this[_hasError] = false;
      this[_panEnabled] = true;
      this[_isTextSelectionCleared] = false;
      this[_loadPdfDocument](false);
      this[_previousPageNumber] = 1;
      this[_isLoadCallbackInvoked] = false;
      this[_maxPdfPageWidth] = 0.0;
      t45$0 = binding.WidgetsBinding.instance;
      t45$0 == null ? null : t45$0.addObserver(this);
    }
    didChangeDependencies() {
      this[_pdfViewerThemeData$3] = pdfviewer_theme.SfPdfViewerTheme.of(this.context);
      super.didChangeDependencies();
    }
    didUpdateWidget(oldWidget) {
      pdfviewer.SfPdfViewer.as(oldWidget);
      if (oldWidget == null) dart.nullFailed(I[16], 727, 36, "oldWidget");
      super.didUpdateWidget(oldWidget);
      if (oldWidget.controller == null) {
        if (this.widget.controller != null) {
          this[_pdfViewerController].removeListener(dart.bind(this, _handleControllerValueChange));
          this[_pdfViewerController][_reset]();
          this[_pdfViewerController] = dart.nullCheck(this.widget.controller);
          this[_pdfViewerController].addListener(dart.bind(this, _handleControllerValueChange));
        }
      } else {
        if (this.widget.controller == null) {
          this[_pdfViewerController].removeListener(dart.bind(this, _handleControllerValueChange));
          this[_pdfViewerController] = new pdfviewer.PdfViewerController.new();
          this[_pdfViewerController].addListener(dart.bind(this, _handleControllerValueChange));
        } else if (!dart.equals(this.widget.controller, oldWidget.controller)) {
          this[_pdfViewerController].removeListener(dart.bind(this, _handleControllerValueChange));
          this[_pdfViewerController] = dart.nullCheck(this.widget.controller);
          this[_pdfViewerController].addListener(dart.bind(this, _handleControllerValueChange));
        }
      }
      this[_compareDocument](oldWidget[_provider].getPdfBytes(this.context), this.widget[_provider].getPdfBytes(this.context));
    }
    [_compareDocument](oldBytesData, newBytesData) {
      if (oldBytesData == null) dart.nullFailed(I[16], 756, 25, "oldBytesData");
      if (newBytesData == null) dart.nullFailed(I[16], 756, 57, "newBytesData");
      return async.async(dart.void, (function* _compareDocument() {
        let oldBytes = (yield oldBytesData);
        let newBytes = (yield newBytesData);
        if (!dart.test(collections.listEquals(core.int, oldBytes, newBytes))) {
          this[_pdfViewerController].clearSelection();
          this[_loadPdfDocument](true);
        }
      }).bind(this));
    }
    dispose() {
      let t45, t45$, t45$0, t45$1, t45$2, t45$3, t47, t46, t45$4, t45$5;
      t45 = this[_getPdfFileCancellableOperation];
      t45 == null ? null : t45.cancel();
      t45$ = this[_pdfDocumentLoadCancellableOperation];
      t45$ == null ? null : t45$.cancel();
      t45$0 = this[_getHeightCancellableOperation];
      t45$0 == null ? null : t45$0.cancel();
      t45$1 = this[_getWidthCancellableOperation];
      t45$1 == null ? null : t45$1.cancel();
      this[_pdfViewerThemeData$3] = null;
      this[_scrollController].dispose();
      t45$2 = binding$.imageCache;
      t45$2 == null ? null : t45$2.clear();
      this[_plugin].closeDocument();
      this[_disposeCollection](this[_originalHeight]);
      this[_disposeCollection](this[_originalWidth]);
      this[_pdfPages][$clear]();
      this[_pdfPagesKey][$clear]();
      t45$3 = this[_document];
      t45$3 == null ? null : t45$3.dispose();
      this[_document] = null;
      t45$4 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
      t45$4 == null ? null : (t46 = t45$4.currentState, t46 == null ? null : (t47 = t46.canvasRenderBox, t47 == null ? null : t47.dispose()));
      if (this.widget.onTextSelectionChanged != null) {
        dart.nullCheck(this.widget.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(null, null));
      }
      this[_pdfViewerController].removeListener(dart.bind(this, _handleControllerValueChange));
      t45$5 = binding.WidgetsBinding.instance;
      t45$5 == null ? null : t45$5.removeObserver(this);
      super.dispose();
    }
    [_disposeCollection](list) {
      if (list != null) {
        list = null;
      }
    }
    [_reset]() {
      let t47, t46, t45, t45$, t45$0, t45$1, t45$2, t45$3;
      t45 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
      t45 == null ? null : (t46 = t45.currentState, t46 == null ? null : (t47 = t46.canvasRenderBox, t47 == null ? null : t47.disposeMouseSelection()));
      this[_isTextSelectionCleared] = false;
      if (dart.test(this[_scrollController].hasClients)) {
        this[_scrollController].jumpTo(0.0);
      }
      t45$ = this[_scrollHeadOverlayKey].currentState;
      t45$ == null ? null : t45$.scrollHeadOffset = 0.0;
      this[_actualViewportHeight] = this[_actualViewportMaxScroll] = 0.0;
      this[_isScrolled] = true;
      this[_offsetBeforeOrientationChange] = 0.0;
      t45$0 = this[_scrollHeadOverlayKey].currentState;
      t45$0 == null ? null : t45$0.isScrollHeadDragged = true;
      this[_previousPageNumber] = 1;
      this[_pdfViewerController][_reset]();
      t45$1 = this[_pdfContainerKey].currentState;
      t45$1 == null ? null : t45$1.reset();
      this[_plugin].closeDocument();
      t45$2 = this[_document];
      t45$2 == null ? null : t45$2.dispose();
      this[_document] = null;
      t45$3 = binding$.imageCache;
      t45$3 == null ? null : t45$3.clear();
      this[_hasError] = false;
      this[_isLoadCallbackInvoked] = false;
      this[_isScrollControllerInitiated] = false;
      this[_pdfPagesKey][$clear]();
      this[_maxPdfPageWidth] = 0.0;
    }
    [_loadPdfDocument](isPdfChanged) {
      if (isPdfChanged == null) dart.nullFailed(I[16], 832, 30, "isPdfChanged");
      return async.async(dart.void, (function* _loadPdfDocument() {
        let t45, t45$, t45$0, t45$1;
        try {
          this[_getPdfFileCancellableOperation] = cancelable_operation.CancelableOperation.fromFuture(this.widget[_provider].getPdfBytes(this.context));
          let pdfBytes = typed_data.Uint8List.as(yield (t45 = this[_getPdfFileCancellableOperation], t45 == null ? null : t45.value));
          if (dart.test(isPdfChanged)) {
            this[_reset]();
            this[_plugin] = new pdfviewer_plugin.PdfViewerPlugin.new();
          }
          this[_pdfDocumentLoadCancellableOperation] = cancelable_operation.CancelableOperation.fromFuture(this[_getPdfFile](pdfBytes));
          this[_document] = T.PdfDocumentN().as(yield (t45$ = this[_pdfDocumentLoadCancellableOperation], t45$ == null ? null : t45$.value));
          if (this[_document] != null) {
            this[_pdfTextExtractor] = new pdf.PdfTextExtractor.new(dart.nullCheck(this[_document]));
          }
          let pageCount = (yield this[_plugin].initializePdfRenderer(pdfBytes));
          this[_pdfViewerController][_pageCount] = pageCount;
          if (dart.notNull(pageCount) > 0) {
            this[_pdfViewerController][_pageNumber] = 1;
          }
          if (this[_document] != null && this.widget.onDocumentLoaded != null) {
            dart.nullCheck(this.widget.onDocumentLoaded)(new pdfviewer_callback_details.PdfDocumentLoadedDetails.new(dart.nullCheck(this[_document])));
          }
          this[_pdfViewerController].zoomLevel = this.widget.initialZoomLevel;
          this[_getHeightCancellableOperation] = cancelable_operation.CancelableOperation.fromFuture(this[_plugin].getPagesHeight());
          this[_originalHeight] = T.ListN().as(yield (t45$0 = this[_getHeightCancellableOperation], t45$0 == null ? null : t45$0.value));
          this[_getWidthCancellableOperation] = cancelable_operation.CancelableOperation.fromFuture(this[_plugin].getPagesWidth());
          this[_originalWidth] = T.ListN().as(yield (t45$1 = this[_getWidthCancellableOperation], t45$1 == null ? null : t45$1.value));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            this[_pdfViewerController][_reset]();
            this[_hasError] = true;
            let errorMessage = dart.toString(e);
            if (errorMessage[$contains]("Invalid cross reference table") || errorMessage[$contains]("FormatException: Invalid radix-10 number") || errorMessage[$contains]("RangeError (index): Index out of range") || errorMessage[$contains]("RangeError (end): Invalid value: Not in inclusive range")) {
              if (this.widget.onDocumentLoadFailed != null) {
                dart.nullCheck(this.widget.onDocumentLoadFailed)(new pdfviewer_callback_details.PdfDocumentLoadFailedDetails.new("Format Error", "This document cannot be opened because it is corrupted or not a PDF."));
              }
            } else if (errorMessage[$contains]("Cannot open an encrypted document.")) {
              if (this.widget.onDocumentLoadFailed != null) {
                dart.nullCheck(this.widget.onDocumentLoadFailed)(new pdfviewer_callback_details.PdfDocumentLoadFailedDetails.new("Encrypted PDF", "This document cannot be opened because it is encrypted."));
              }
            } else if (errorMessage[$contains]("Unable to load asset") || errorMessage[$contains]("FileSystemException: Cannot open file")) {
              if (this.widget.onDocumentLoadFailed != null) {
                dart.nullCheck(this.widget.onDocumentLoadFailed)(new pdfviewer_callback_details.PdfDocumentLoadFailedDetails.new("File Not Found", "The document cannot be opened because the provided path or link is invalid."));
              }
            } else {
              if (this.widget.onDocumentLoadFailed != null) {
                dart.nullCheck(this.widget.onDocumentLoadFailed)(new pdfviewer_callback_details.PdfDocumentLoadFailedDetails.new("Error", "There was an error opening this document."));
              }
            }
          } else
            throw e$;
        } finally {
          this[_checkMount]();
        }
      }).bind(this));
    }
    [_getPdfFile](value) {
      return async.async(T.PdfDocumentN(), function* _getPdfFile() {
        if (value != null) {
          return new pdf.PdfDocument.new({inputBytes: value});
        }
        return null;
      });
    }
    [_isScrollPositionAttached]() {
      if (dart.test(this[_scrollController].hasClients) && !dart.test(this[_isScrollControllerInitiated])) {
        this[_scrollControllerInitiated]();
        this[_isScrollControllerInitiated] = true;
        this[_isLoadCallbackInvoked] = true;
      }
    }
    [_scrollControllerInitiated]() {
      if (!dart.test(this[_isScrollControllerInitiated])) {
        if (dart.equals(this.widget.initialScrollOffset, ui.Offset.zero) || this[_pdfViewerController][_verticalOffset] !== 0.0 || this[_pdfViewerController][_horizontalOffset] !== 0.0) {
          this[_pdfViewerController].jumpTo({xOffset: this[_pdfViewerController][_horizontalOffset], yOffset: this[_pdfViewerController][_verticalOffset]});
        }
        if (dart.test(this[_scrollController].hasClients)) {
          this[_pdfViewerController].notifyPropertyChangedListeners({property: "pageNavigate"});
        }
      }
    }
    didChangeMetrics() {
      let t46, t46$;
      super.didChangeMetrics();
      let isKeyPadRaised = (t46 = binding.WidgetsBinding.instance, t46 == null ? null : t46.window.viewInsets.bottom) !== 0.0;
      if (isKeyPadRaised) {
        this[_actualViewportHeight] = this[_scrollController].position.viewportDimension;
        this[_actualViewportMaxScroll] = this[_scrollController].position.maxScrollExtent;
      } else {
        if (this[_actualViewportHeight] !== 0.0) {
          t46$ = this[_scrollHeadOverlayKey].currentState;
          t46$ == null ? null : t46$.updateScrollHeadPosition(this[_actualViewportHeight], {maxScrollExtent: this[_actualViewportMaxScroll]});
          this[_updateCurrentPageNumber]();
        }
      }
    }
    [_findDevice$](context) {
      if (context == null) dart.nullFailed(I[16], 961, 33, "context");
      let size = media_query.MediaQuery.of(context).size;
      let diagonal = math.sqrt(dart.notNull(size.width) * dart.notNull(size.width) + dart.notNull(size.height) * dart.notNull(size.height));
      this[_isMobile] = diagonal < 1100;
    }
    [_getViewportGlobalRect]() {
      let t46, t46$, t46$0, t46$1, t46$2, t46$3, t46$4, t46$5, t46$6, t46$7;
      let viewportGlobalRect = null;
      if (true && !dart.test(this[_isMobile]) && this[_pdfContainerKey].currentContext != null) {
        let viewportRenderBox = box.RenderBox.as(dart.nullCheck(this[_pdfContainerKey].currentContext).findRenderObject());
        let position = (t46 = viewportRenderBox, t46 == null ? null : t46.localToGlobal(ui.Offset.zero));
        let containerSize = (t46$ = viewportRenderBox, t46$ == null ? null : t46$.size);
        viewportGlobalRect = new ui.Rect.fromLTWH((t46$1 = (t46$0 = position, t46$0 == null ? null : t46$0.dx), t46$1 == null ? 0.0 : t46$1), (t46$3 = (t46$2 = position, t46$2 == null ? null : t46$2.dy), t46$3 == null ? 0.0 : t46$3), (t46$5 = (t46$4 = containerSize, t46$4 == null ? null : t46$4.width), t46$5 == null ? 0.0 : t46$5), (t46$7 = (t46$6 = containerSize, t46$6 == null ? null : t46$6.height), t46$7 == null ? 0.0 : t46$7));
      }
      return viewportGlobalRect;
    }
    build(context) {
      let t46;
      if (context == null) dart.nullFailed(I[16], 986, 29, "context");
      let emptyContainer = new container.Container.new({color: dart.nullCheck(this[_pdfViewerThemeData$3]).backgroundColor, $creationLocationd_0dea112b090073317d4: C[360] || CT.C360});
      let emptyLinearProgressView = new basic.Stack.new({children: T.JSArrayOfWidget().of([emptyContainer, new progress_indicator.LinearProgressIndicator.new({valueColor: new (T.AlwaysStoppedAnimationOfColor()).new((t46 = dart.nullCheck(this[_pdfViewerThemeData$3]).progressBarColor, t46 == null ? theme$.Theme.of(context).primaryColor : t46)), backgroundColor: dart.nullCheck(this[_pdfViewerThemeData$3]).progressBarColor == null ? theme$.Theme.of(context).primaryColor.withOpacity(0.2) : dart.nullCheck(dart.nullCheck(this[_pdfViewerThemeData$3]).progressBarColor).withOpacity(0.2), $creationLocationd_0dea112b090073317d4: C[363] || CT.C363})]), $creationLocationd_0dea112b090073317d4: C[367] || CT.C367});
      this[_isScrollPositionAttached]();
      this[_findDevice$](context);
      let isPdfLoaded = dart.notNull(this[_pdfViewerController].pageCount) > 0 && this[_originalWidth] != null && this[_originalHeight] != null;
      return isPdfLoaded ? new container.Container.new({color: dart.nullCheck(this[_pdfViewerThemeData$3]).backgroundColor, child: new (T.FutureBuilderOfMapNOfint$List()).new({future: this[_getImages](), builder: dart.fn((context, snapshot) => {
            if (context == null) dart.nullFailed(I[16], 1018, 40, "context");
            if (snapshot == null) dart.nullFailed(I[16], 1018, 63, "snapshot");
            if (dart.test(snapshot.hasData)) {
              let _pdfImages = snapshot.data;
              this[_viewportConstraints] = box.BoxConstraints.as(dart.nullCheck(context.findRenderObject()).constraints);
              let totalHeight = 0.0;
              return new (T.NotificationListenerOfScrollNotification()).new({onNotification: dart.fn(notification => {
                  if (notification == null) dart.nullFailed(I[16], 1027, 59, "notification");
                  this[_handleScrollNotification](notification);
                  return true;
                }, T.ScrollNotificationTobool()), child: new basic.Stack.new({children: T.JSArrayOfWidget().of([new basic.Center.new({child: new pdf_container.PdfContainer.new(this[_pdfContainerKey], this[_isMobile], this.widget.initialScrollOffset, this.widget.initialZoomLevel, this.widget.enableDoubleTapZooming, this.widget.onZoomLevelChanged, this[_pdfViewerController], dart.bind(this, _handleOnTap), this.widget.interactionMode, this[_viewportConstraints], this[_maxPdfPageWidth], this[_panEnabled], this[_scrollController], dart.fn((context, index) => {
                        let t47, t46;
                        if (context == null) dart.nullFailed(I[16], 1048, 45, "context");
                        if (index == null) dart.nullFailed(I[16], 1048, 58, "index");
                        if (index === 0) {
                          totalHeight = 0.0;
                        }
                        let pageIndex = dart.notNull(index) + 1;
                        let calculatedSize = this[_calculateSize](new box.BoxConstraints.new({maxWidth: this[_viewportConstraints].maxWidth, maxHeight: 1 / 0}), core.double.as(dart.nullCheck(this[_originalWidth])[$_get](index)), core.double.as(dart.nullCheck(this[_originalHeight])[$_get](index)), this[_viewportConstraints].maxWidth);
                        if (!dart.test(this[_pdfPagesKey][$containsKey](pageIndex))) {
                          this[_pdfPagesKey][$_set](pageIndex, T.GlobalKeyOfPdfPageViewState().new());
                        }
                        let isOverflowed = dart.dsend(dart.nullCheck(this[_originalWidth])[$_get](index), '>', [this[_viewportConstraints].maxWidth]);
                        if (true && !dart.test(this[_isMobile]) && dart.dtest(dart.dsend(dart.nullCheck(this[_originalWidth])[$_get](index), '>', [this[_maxPdfPageWidth]]))) {
                          this[_maxPdfPageWidth] = core.double.as(dart.nullCheck(this[_originalWidth])[$_get](index));
                        }
                        let viewportGlobalRect = null;
                        if (dart.test(this[_isTextSelectionCleared])) {
                          viewportGlobalRect = this[_getViewportGlobalRect]();
                        }
                        let page = new pdf_page_view.PdfPageView.new(dart.nullCheck(this[_pdfPagesKey][$_get](pageIndex)), T.Uint8ListN().as(dart.dsend(_pdfImages, '_get', [pageIndex])), viewportGlobalRect, this.widget.interactionMode, core.double.as(true && !dart.test(this[_isMobile]) && !dart.dtest(isOverflowed) ? dart.nullCheck(this[_originalWidth])[$_get](index) : calculatedSize.width), core.double.as(true && !dart.test(this[_isMobile]) && !dart.dtest(isOverflowed) ? dart.nullCheck(this[_originalHeight])[$_get](index) : calculatedSize.height), this.widget.pageSpacing, this[_document], this[_pdfPages], index, this[_scrollController], this[_pdfViewerController], this.widget.enableDocumentLinkAnnotation, this.widget.enableTextSelection, this.widget.onTextSelectionChanged, dart.bind(this, _handleTextSelectionDragStarted), dart.bind(this, _handleTextSelectionDragEnded), dart.bind(this, _handleDocumentLinkNavigationInvoked), this.widget.searchTextHighlightColor, this[_textCollection], this[_isMobile], this[_pdfViewerController][_pdfTextSearchResult], {$creationLocationd_0dea112b090073317d4: C[370] || CT.C370});
                        if (true && !dart.test(this[_isMobile]) && !dart.dtest(isOverflowed)) {
                          this[_pdfPages][$_set](pageIndex, new pdf_page_view.PdfPageInfo.new(totalHeight, new ui.Size.new(core.double.as(dart.nullCheck(this[_originalWidth])[$_get](index)), core.double.as(dart.nullCheck(this[_originalHeight])[$_get](index)))));
                          totalHeight = totalHeight + dart.notNull(core.num.as(dart.dsend(dart.nullCheck(this[_originalHeight])[$_get](index), '+', [this.widget.pageSpacing])));
                          this[_updateOffsetOnOrientationChange](this[_offsetBeforeOrientationChange], pageIndex, totalHeight);
                        } else {
                          this[_pdfPages][$_set](pageIndex, new pdf_page_view.PdfPageInfo.new(totalHeight, calculatedSize));
                          totalHeight = totalHeight + (dart.notNull(calculatedSize.height) + dart.notNull(this.widget.pageSpacing));
                          this[_updateOffsetOnOrientationChange](this[_offsetBeforeOrientationChange], pageIndex, totalHeight);
                        }
                        if ((t46 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber), t46 == null ? null : (t47 = t46.currentState, t47 == null ? null : t47.canvasRenderBox)) != null && !dart.test(this[_isTextSelectionCleared])) {
                          this[_isTextSelectionCleared] = true;
                          T.FutureOfNull().delayed(core.Duration.zero, dart.fn(() => async.async(core.Null, (function*() {
                            let t48, t47, t46, t47$, t46$;
                            this[_clearSelection$]();
                            t46 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
                            t46 == null ? null : (t47 = t46.currentState, t47 == null ? null : (t48 = t47.canvasRenderBox, t48 == null ? null : t48.disposeMouseSelection()));
                            t46$ = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
                            t46$ == null ? null : (t47$ = t46$.currentState, t47$ == null ? null : t47$.focusNode.requestFocus());
                          }).bind(this)), T.VoidToFutureOfNull()));
                        }
                        return page;
                      }, T.BuildContextAndintToPdfPageView()), {$creationLocationd_0dea112b090073317d4: C[394] || CT.C394}), $creationLocationd_0dea112b090073317d4: C[410] || CT.C410}), new scroll_head_overlay.ScrollHeadOverlay.new(this[_scrollHeadOverlayKey], this.widget.canShowScrollHead, this.widget.canShowPaginationDialog, dart.bind(this, _handleScrollHeadDragEnd$), this[_scrollController], this[_isMobile], this[_pdfViewerController], {$creationLocationd_0dea112b090073317d4: C[413] || CT.C413}), new visibility.Visibility.new({visible: this[_scrollHeadOverlayKey].currentState != null ? !dart.test(dart.nullCheck(this[_scrollHeadOverlayKey].currentState).isScrollHeadDragged) && dart.test(this.widget.canShowScrollStatus) : false, child: new scroll_status.ScrollStatus.new(this[_pdfViewerController], {$creationLocationd_0dea112b090073317d4: C[422] || CT.C422}), $creationLocationd_0dea112b090073317d4: C[425] || CT.C425}), new bookmark_view.BookmarkView.new(this[_bookmarkKey], this[_document], this[_pdfViewerController], {$creationLocationd_0dea112b090073317d4: C[429] || CT.C429})]), $creationLocationd_0dea112b090073317d4: C[434] || CT.C434}), $creationLocationd_0dea112b090073317d4: C[437] || CT.C437});
            } else if (dart.test(snapshot.hasError)) {
              return emptyContainer;
            } else {
              return emptyLinearProgressView;
            }
          }, T.BuildContextAndAsyncSnapshotToWidget()), $creationLocationd_0dea112b090073317d4: C[441] || CT.C441}), $creationLocationd_0dea112b090073317d4: C[445] || CT.C445}) : dart.test(this[_hasError]) ? emptyContainer : emptyLinearProgressView;
    }
    openBookmarkView() {
      let t46;
      if (this.widget.onTextSelectionChanged != null) {
        dart.nullCheck(this.widget.onTextSelectionChanged)(new pdfviewer_callback_details.PdfTextSelectionChangedDetails.new(null, null));
      }
      t46 = this[_bookmarkKey].currentState;
      t46 == null ? null : t46.open();
    }
    getSelectedTextLines() {
      let t48, t47, t46, t46$;
      let selectedTextLines = (t46 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber), t46 == null ? null : (t47 = t46.currentState, t47 == null ? null : (t48 = t47.canvasRenderBox, t48 == null ? null : t48.getSelectedTextLines())));
      t46$ = selectedTextLines;
      return t46$ == null ? T.JSArrayOfPdfTextLine().of([]) : t46$;
    }
    [_getImages]() {
      let startPage = this[_pdfViewerController].pageNumber;
      let endPage = this[_pdfViewerController].pageCount === 1 ? 1 : 2;
      let renderedPages = null;
      let pageHeight = 0.0;
      if (dart.test(this[_pdfPages][$isNotEmpty]) && dart.test(this[_scrollController].hasClients)) {
        for (let start = this[_pdfViewerController].pageNumber; dart.notNull(start) <= dart.notNull(this[_pdfViewerController].pageCount); start = dart.notNull(start) + 1) {
          if (start == this[_pdfViewerController].pageCount) {
            endPage = start;
            if (startPage == endPage && endPage !== 1) {
              startPage = dart.notNull(startPage) - 1;
            }
            break;
          }
          let height = pageHeight + dart.notNull(dart.nullCheck(this[_pdfPages][$_get](start)).pageSize.height);
          if (height < dart.notNull(this[_scrollController].position.viewportDimension)) {
            pageHeight = pageHeight + height;
          } else {
            pageHeight = 0.0;
            endPage = start != this[_pdfViewerController].pageCount ? dart.notNull(start) + 1 : start;
            break;
          }
        }
      }
      if (dart.test(this[_isScrolled])) {
        renderedPages = this[_plugin].getSpecificPages(startPage, endPage).then(T.MapNOfint$List(), dart.fn(value => value, T.MapNOfint$ListToMapNOfint$List()));
        renderedPages.whenComplete(dart.bind(this, _checkMount));
      }
      return renderedPages;
    }
    [_checkMount]() {
      if (dart.test(super.mounted)) {
        this.setState(dart.fn(() => {
        }, T.VoidTovoid()));
      }
    }
    [_pageChanged]() {
      if (this[_pdfViewerController].pageNumber != this[_previousPageNumber]) {
        if (this.widget.onPageChanged != null) {
          dart.nullCheck(this.widget.onPageChanged)(new pdfviewer_callback_details.PdfPageChangedDetails.new(this[_pdfViewerController].pageNumber, this[_previousPageNumber], this[_pdfViewerController].pageNumber === 1, this[_pdfViewerController].pageNumber == this[_pdfViewerController].pageCount));
          this[_previousPageNumber] = this[_pdfViewerController].pageNumber;
        }
        this[_isPageChanged] = true;
      }
      this[_checkMount]();
    }
    [_updateSearchInstance](opts) {
      let isNext = opts && 'isNext' in opts ? opts.isNext : true;
      if (this[_textCollection] != null && dart.test(this[_pdfViewerController][_pdfTextSearchResult].hasResult) && this[_pdfViewerController].pageNumber !== dart.notNull(dart.nullCheck(this[_textCollection])[$_get](dart.notNull(this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex) - 1).pageIndex) + 1 && dart.test(this[_isManualScrolled])) {
        this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = this[_getInstanceInPage](this[_pdfViewerController].pageNumber, {lookForFirst: core.bool.as(isNext)});
      }
    }
    [_updateOffsetOnOrientationChange](initialOffset, pageIndex, totalHeight) {
      let t46, t46$, t46$0;
      if (initialOffset == null) dart.nullFailed(I[16], 1351, 14, "initialOffset");
      if (pageIndex == null) dart.nullFailed(I[16], 1351, 33, "pageIndex");
      if (totalHeight == null) dart.nullFailed(I[16], 1351, 51, "totalHeight");
      this[_pdfViewerController][_scrollPositionX] = (t46$ = (t46 = this[_pdfContainerKey].currentState, t46 == null ? null : t46.findHorizontalOffset()), t46$ == null ? 0.0 : t46$);
      if (this[_viewportWidth] != this[_viewportConstraints].maxWidth && this[_deviceOrientation] != media_query.MediaQuery.of(this.context).orientation) {
        if (pageIndex === 1 && dart.test(this[_scrollController].hasClients)) {
          this[_offsetBeforeOrientationChange] = dart.notNull(this[_scrollController].offset) * dart.notNull(this[_pdfViewerController].zoomLevel) / (dart.notNull(this[_scrollController].position.viewportDimension) + dart.notNull(this[_scrollController].position.maxScrollExtent) * dart.notNull(this[_pdfViewerController].zoomLevel));
        } else if (pageIndex == this[_pdfViewerController].pageCount) {
          if (this[_viewportWidth] !== 0) {
            let targetOffset = dart.notNull(initialOffset) * dart.notNull(totalHeight);
            t46$0 = binding.WidgetsBinding.instance;
            t46$0 == null ? null : t46$0.addPostFrameCallback(dart.fn(timeStamp => {
              let t47;
              if (timeStamp == null) dart.nullFailed(I[16], 1365, 58, "timeStamp");
              this[_scrollController].jumpTo(targetOffset);
              t47 = this[_scrollHeadOverlayKey].currentState;
              t47 == null ? null : t47.updateScrollHeadPosition(this[_scrollController].position.viewportDimension);
              this[_updateCurrentPageNumber]();
            }, T.DurationTovoid()));
          }
          this[_viewportWidth] = this[_viewportConstraints].maxWidth;
          this[_deviceOrientation] = media_query.MediaQuery.of(this.context).orientation;
        }
      }
    }
    [_calculateSize](constraints, originalWidth, originalHeight, newWidth) {
      if (constraints == null) dart.nullFailed(I[16], 1381, 38, "constraints");
      if (originalWidth == null) dart.nullFailed(I[16], 1381, 58, "originalWidth");
      if (originalHeight == null) dart.nullFailed(I[16], 1382, 14, "originalHeight");
      if (newWidth == null) dart.nullFailed(I[16], 1382, 37, "newWidth");
      constraints = new box.BoxConstraints.tightFor({width: newWidth, height: null}).enforce(constraints);
      return constraints.constrainSizeAndAttemptToPreserveAspectRatio(new ui.Size.new(originalWidth, originalHeight));
    }
    [_handleScrollNotification](notification) {
      let t48, t47, t46, t46$, t47$, t46$0, t48$, t47$0, t46$1, t46$2;
      if (notification == null) dart.nullFailed(I[16], 1396, 53, "notification");
      if (scroll_notification.ScrollStartNotification.is(notification)) {
        if (this[_scrollHeadOverlayKey].currentState != null && dart.test(dart.nullCheck(this[_scrollHeadOverlayKey].currentState).isScrollHeadDragged)) {
          this[_previousPageNumber] = this[_pdfViewerController].pageNumber;
        }
        t46 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
        t46 == null ? null : (t47 = t46.currentState, t47 == null ? null : (t48 = t47.canvasRenderBox, t48 == null ? null : t48.scrollStarted()));
        this[_isScrolled] = false;
        this[_isManualScrolled] = notification.dragDetails != null || ui.PointerSignalKind.scroll != ui.PointerSignalKind.none;
      } else if (scroll_notification.ScrollUpdateNotification.is(notification)) {
        this[_pdfViewerController][_scrollPositionY] = this[_scrollController].offset;
        t46$ = this[_scrollHeadOverlayKey].currentState;
        t46$ == null ? null : t46$.updateScrollHeadPosition(this[_scrollController].position.viewportDimension);
        this[_updateCurrentPageNumber]();
        this[_isScrolled] = dart.test(this[_isLoadCallbackInvoked]) ? false : true;
      } else if (scroll_notification.ScrollEndNotification.is(notification)) {
        if (true && this[_textCollection] == null && !dart.test(this[_isMobile])) {
          t46$0 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
          t46$0 == null ? null : (t47$ = t46$0.currentState, t47$ == null ? null : t47$.focusNode.requestFocus());
        }
        t46$1 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
        t46$1 == null ? null : (t47$0 = t46$1.currentState, t47$0 == null ? null : (t48$ = t47$0.canvasRenderBox, t48$ == null ? null : t48$.scrollEnded()));
        t46$2 = this[_scrollHeadOverlayKey].currentState;
        t46$2 == null ? null : t46$2.updateScrollHeadPosition(this[_scrollController].position.viewportDimension);
        this[_updateCurrentPageNumber]();
        if (this[_scrollHeadOverlayKey].currentState != null && dart.test(dart.nullCheck(this[_scrollHeadOverlayKey].currentState).isScrollHeadDragged)) {
          this[_isScrolled] = true;
          this[_pageChanged]();
        }
      }
    }
    [_updateCurrentPageNumber]() {
      if (dart.test(this[_scrollController].hasClients)) {
        if (dart.notNull(this[_scrollController].offset) > 0) {
          this[_pdfViewerController][_pageNumber] = this[_getPageNumber](this[_scrollController].offset);
        } else {
          this[_pdfViewerController][_pageNumber] = 1;
        }
        this[_checkMount]();
      }
    }
    [_handleTextSelectionDragStarted]() {
      this[_panEnabled] = false;
    }
    [_handleTextSelectionDragEnded]() {
      this[_panEnabled] = true;
    }
    [_handleScrollHeadDragEnd$]() {
      this[_isScrolled] = true;
      this[_isManualScrolled] = true;
      this[_pageChanged]();
    }
    [_handleOnTap]() {
      let t48, t47, t46, t47$, t46$;
      t46 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
      t46 == null ? null : (t47 = t46.currentState, t47 == null ? null : (t48 = t47.canvasRenderBox, t48 == null ? null : t48.getSelectionDetails().enableTapSelection = false));
      this[_clearSelection$]();
      t46$ = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
      t46$ == null ? null : (t47$ = t46$.currentState, t47$ == null ? null : t47$.focusNode.requestFocus());
    }
    [_jumpToPage](pageNumber) {
      if (pageNumber == null) dart.nullFailed(I[16], 1483, 24, "pageNumber");
      this[_scrollController].position.jumpTo(dart.nullCheck(this[_pdfPages][$_get](pageNumber)).pageOffset);
      this[_isManualScrolled] = true;
    }
    [_jumpToBookmark](bookmark) {
      let t46;
      if (bookmark != null && this[_document] != null) {
        this[_clearSelection$]();
        let heightPercentage = null;
        let bookmarkOffset = null;
        let pdfPage = null;
        if (bookmark.namedDestination != null) {
          pdfPage = dart.nullCheck(dart.nullCheck(bookmark.namedDestination).destination).page;
        } else {
          pdfPage = dart.nullCheck(bookmark.destination).page;
        }
        let index = dart.notNull(dart.nullCheck(this[_document]).pages.indexOf(pdfPage)) + 1;
        let revealedOffset = dart.nullCheck(this[_pdfPages][$_get](index)).pageSize;
        let offset = dart.nullCheck(this[_pdfPages][$_get](index)).pageOffset;
        if (bookmark.namedDestination != null) {
          heightPercentage = dart.notNull(dart.nullCheck(dart.nullCheck(bookmark.namedDestination).destination).page.size.height) / dart.notNull(revealedOffset.height);
          bookmarkOffset = dart.nullCheck(dart.nullCheck(bookmark.namedDestination).destination).location.dy;
        } else {
          heightPercentage = dart.notNull(dart.nullCheck(bookmark.destination).page.size.height) / dart.notNull(revealedOffset.height);
          bookmarkOffset = dart.nullCheck(bookmark.destination).location.dy;
        }
        if (true && !dart.test(this[_isMobile])) {
          heightPercentage = 1.0;
        }
        let maxScrollEndOffset = this[_scrollController].position.maxScrollExtent;
        offset = dart.notNull(offset) + dart.notNull(bookmarkOffset) / dart.notNull(heightPercentage);
        if (dart.notNull(offset) > dart.notNull(maxScrollEndOffset)) {
          offset = maxScrollEndOffset;
        }
        if (dart.notNull(this[_pdfViewerController].zoomLevel) > 1) {
          t46 = this[_pdfContainerKey].currentState;
          t46 == null ? null : t46.jumpOnZoomedDocument(null, offset, this[_viewportWidth]);
        } else {
          this[_scrollController].jumpTo(offset);
        }
      }
    }
    [_handleDocumentLinkNavigationInvoked](offset) {
      let t46;
      if (offset == null) dart.nullFailed(I[16], 1532, 52, "offset");
      t46 = this[_pdfContainerKey].currentState;
      t46 == null ? null : t46.jumpOnZoomedDocument(null, offset, this[_viewportWidth]);
    }
    [_clearSelection$]() {
      let t48, t47, t46, t46$;
      t46$ = (t46 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber), t46 == null ? null : (t47 = t46.currentState, t47 == null ? null : (t48 = t47.canvasRenderBox, t48 == null ? null : t48.clearSelection())));
      return t46$ == null ? false : t46$;
    }
    [_handleControllerValueChange](opts) {
      let t46, t46$, t46$0;
      let property = opts && 'property' in opts ? opts.property : null;
      if (property === "jumpToBookmark") {
        this[_jumpToBookmark](this[_pdfViewerController][_pdfBookmark]);
      } else if (property === "zoomLevel") {
        t46 = page_storage.PageStorage.of(this.context);
        t46 == null ? null : t46.writeState(this.context, this[_pdfViewerController].zoomLevel, {identifier: "zoomLevel_" + dart.notNull(dart.toString(this.widget.key))});
      } else if (property === "clearTextSelection") {
        this[_pdfViewerController][_clearTextSelection] = this[_clearSelection$]();
      } else if (property === "jumpTo") {
        this[_clearSelection$]();
        if (dart.test(this[_scrollController].hasClients)) {
          let yOffset = this[_pdfViewerController][_verticalOffset];
          if (dart.notNull(yOffset) < dart.notNull(this[_scrollController].position.minScrollExtent)) {
            this[_scrollController].jumpTo(this[_scrollController].position.minScrollExtent);
          } else if (dart.notNull(yOffset) > dart.notNull(this[_scrollController].position.maxScrollExtent)) {
            this[_scrollController].jumpTo(this[_scrollController].position.maxScrollExtent);
          } else {
            this[_scrollController].jumpTo(yOffset);
          }
          this[_isManualScrolled] = true;
          this[_scrollController].position.notifyListeners();
        }
        t46$ = this[_pdfContainerKey].currentState;
        t46$ == null ? null : t46$.jumpHorizontally(this[_pdfViewerController][_horizontalOffset]);
      } else if (property === "pageNavigate" && this[_pdfViewerController][_pageNavigator] != null) {
        this[_clearSelection$]();
        if (dart.test(this[_scrollController].hasClients)) {
          switch (dart.nullCheck(this[_pdfViewerController][_pageNavigator]).option) {
            case C[449] || CT.C449:
            {
              if (dart.nullCheck(dart.nullCheck(this[_pdfViewerController][_pageNavigator]).index) > 0 && dart.nullCheck(dart.nullCheck(this[_pdfViewerController][_pageNavigator]).index) <= dart.notNull(this[_pdfViewerController].pageCount)) {
                this[_jumpToPage](dart.nullCheck(dart.nullCheck(this[_pdfViewerController][_pageNavigator]).index));
              }
              break;
            }
            case C[450] || CT.C450:
            {
              this[_jumpToPage](1);
              break;
            }
            case C[451] || CT.C451:
            {
              if (this[_pdfViewerController].pageNumber != this[_pdfViewerController].pageCount) {
                this[_jumpToPage](this[_pdfViewerController].pageCount);
              }
              break;
            }
            case C[452] || CT.C452:
            {
              if (dart.notNull(this[_pdfViewerController].pageNumber) > 1) {
                this[_jumpToPage](dart.notNull(this[_pdfViewerController].pageNumber) - 1);
              }
              break;
            }
            case C[453] || CT.C453:
            {
              if (this[_pdfViewerController].pageNumber != this[_pdfViewerController].pageCount) {
                this[_jumpToPage](dart.notNull(this[_pdfViewerController].pageNumber) + 1);
              }
              break;
            }
            default:
            {
              dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
            }
          }
        }
      } else if (property === "searchText") {
        this[_pdfViewerController][_pdfTextSearchResult].removeListener(dart.bind(this, _handleTextSearch));
        this[_textCollection] = (t46$0 = this[_pdfTextExtractor], t46$0 == null ? null : t46$0.findText(T.JSArrayOfString().of([this[_pdfViewerController][_searchText]]), {searchOption: this[_pdfViewerController][_textSearchOption]}));
        if (this[_textCollection] != null) {
          if (dart.test(dart.nullCheck(this[_textCollection])[$isEmpty])) {
            this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = 0;
            this[_pdfViewerController][_pdfTextSearchResult][_totalSearchTextCount] = 0;
            this[_pdfViewerController][_pdfTextSearchResult][_updateResult](false);
          } else {
            this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = this[_getInstanceInPage](this[_pdfViewerController].pageNumber);
            this[_jumpToSearchInstance]();
            this[_pdfViewerController][_pdfTextSearchResult][_totalSearchTextCount] = dart.nullCheck(this[_textCollection])[$length];
            this[_pdfViewerController][_pdfTextSearchResult][_updateResult](true);
          }
          this[_pdfViewerController][_pdfTextSearchResult].addListener(dart.bind(this, _handleTextSearch));
        }
      }
    }
    [_getPageNumber](offset) {
      if (offset == null) dart.nullFailed(I[16], 1634, 29, "offset");
      let pageNumber = 0;
      for (let i = 1; i <= dart.notNull(this[_pdfViewerController].pageCount); i = i + 1) {
        if (i === this[_pdfViewerController].pageCount || dart.notNull(offset) >= dart.notNull(this[_scrollController].position.maxScrollExtent)) {
          pageNumber = this[_pdfViewerController].pageCount;
          break;
        } else if (dart.notNull(offset) >= dart.notNull(dart.nullCheck(this[_pdfPages][$_get](i)).pageOffset) && dart.notNull(offset) < dart.notNull(dart.nullCheck(this[_pdfPages][$_get](i + 1)).pageOffset)) {
          pageNumber = i;
          break;
        } else {
          continue;
        }
      }
      return pageNumber;
    }
    [_getInstanceInPage](pageNumber, opts) {
      let t46, t46$, t46$0;
      if (pageNumber == null) dart.nullFailed(I[16], 1652, 30, "pageNumber");
      let lookForFirst = opts && 'lookForFirst' in opts ? opts.lookForFirst : true;
      if (lookForFirst == null) dart.nullFailed(I[16], 1652, 48, "lookForFirst");
      let instance = 0;
      if (dart.test(lookForFirst)) {
        instance = (t46 = this[_jumpToNextInstance](pageNumber), t46 == null ? this[_jumpToPreviousInstance](pageNumber) : t46);
      } else {
        instance = (t46$ = this[_jumpToPreviousInstance](pageNumber), t46$ == null ? this[_jumpToNextInstance](pageNumber) : t46$);
      }
      t46$0 = instance;
      return t46$0 == null ? 1 : t46$0;
    }
    [_jumpToNextInstance](pageNumber) {
      if (pageNumber == null) dart.nullFailed(I[16], 1664, 32, "pageNumber");
      for (let i = 0; i < dart.notNull(dart.nullCheck(this[_textCollection])[$length]); i = i + 1) {
        if (dart.notNull(dart.nullCheck(this[_textCollection])[$_get](i).pageIndex) + 1 >= dart.notNull(pageNumber)) {
          return i + 1;
        }
      }
      return null;
    }
    [_jumpToPreviousInstance](pageNumber) {
      if (pageNumber == null) dart.nullFailed(I[16], 1673, 36, "pageNumber");
      for (let i = dart.notNull(dart.nullCheck(this[_textCollection])[$length]) - 1; i > 0; i = i - 1) {
        if (dart.notNull(dart.nullCheck(this[_textCollection])[$_get](i).pageIndex) + 1 <= dart.notNull(pageNumber)) {
          return i + 1;
        }
      }
      return null;
    }
    [_jumpToSearchInstance](opts) {
      let t46;
      let isNext = opts && 'isNext' in opts ? opts.isNext : true;
      if (dart.test(this[_isPageChanged])) {
        this[_updateSearchInstance]({isNext: isNext});
        this[_isPageChanged] = false;
      }
      let currentInstancePageIndex = dart.notNull(dart.nullCheck(this[_textCollection])[$_get](dart.notNull(this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex) - 1).pageIndex) + 1;
      let topOffset = dart.nullCheck(this[_textCollection])[$_get](dart.notNull(this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex) - 1).bounds.top;
      let heightPercentage = core.double.as(true && !dart.test(this[_isMobile]) ? 1.0 : dart.dsend(dart.nullCheck(this[_originalHeight])[$_get](currentInstancePageIndex - 1), '/', [dart.nullCheck(this[_pdfPages][$_get](currentInstancePageIndex)).pageSize.height]));
      let searchOffset = dart.notNull(dart.nullCheck(this[_pdfPages][$_get](currentInstancePageIndex)).pageOffset) + dart.notNull(topOffset) / dart.notNull(heightPercentage);
      if (dart.notNull(this[_pdfViewerController].zoomLevel) > 1) {
        let leftOffset = dart.notNull(dart.nullCheck(this[_textCollection])[$_get](dart.notNull(this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex) - 1).bounds.left) / dart.notNull(heightPercentage);
        t46 = this[_pdfContainerKey].currentState;
        t46 == null ? null : t46.jumpOnZoomedDocument(leftOffset, searchOffset, this[_viewportWidth]);
        this[_isManualScrolled] = false;
      } else if (dart.notNull(this[_scrollController].offset) > searchOffset || (dart.notNull(this[_scrollController].offset) - searchOffset)[$abs]() > dart.notNull(this[_scrollController].position.viewportDimension)) {
        this[_pdfViewerController].jumpTo({yOffset: searchOffset});
        this[_isManualScrolled] = false;
      }
    }
    [_handleTextSearch](opts) {
      let t47, t46;
      let property = opts && 'property' in opts ? opts.property : null;
      if (dart.test(this[_pdfViewerController][_pdfTextSearchResult].hasResult)) {
        if (property === "nextInstance") {
          this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = dart.notNull(this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex) < dart.notNull(this[_pdfViewerController][_pdfTextSearchResult][_totalInstanceCount]) ? dart.notNull(this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex) + 1 : 1;
          this[_jumpToSearchInstance]({isNext: true});
        } else if (property === "previousInstance") {
          this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = dart.notNull(this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex) > 1 ? dart.notNull(this[_pdfViewerController][_pdfTextSearchResult].currentInstanceIndex) - 1 : this[_pdfViewerController][_pdfTextSearchResult].totalInstanceCount;
          this[_jumpToSearchInstance]({isNext: false});
        } else if (property === "clear") {
          this[_textCollection] = null;
          this[_pdfViewerController][_pdfTextSearchResult][_currentOccurrenceIndex] = 0;
          this[_pdfViewerController][_pdfTextSearchResult][_totalSearchTextCount] = 0;
          this[_pdfViewerController][_pdfTextSearchResult][_updateResult](false);
          t46 = this[_pdfPagesKey][$_get](this[_pdfViewerController].pageNumber);
          t46 == null ? null : (t47 = t46.currentState, t47 == null ? null : t47.focusNode.requestFocus());
          return;
        }
      }
    }
  };
  (pdfviewer.SfPdfViewerState.new = function() {
    this[__SfPdfViewerState__plugin] = null;
    this[__SfPdfViewerState__plugin_isSet] = false;
    this[__SfPdfViewerState__scrollController] = null;
    this[__SfPdfViewerState__scrollController_isSet] = false;
    this[__SfPdfViewerState__pdfViewerController] = null;
    this[__SfPdfViewerState__pdfViewerController_isSet] = false;
    this[_getPdfFileCancellableOperation] = null;
    this[_pdfDocumentLoadCancellableOperation] = null;
    this[_getHeightCancellableOperation] = null;
    this[_getWidthCancellableOperation] = null;
    this[_originalHeight] = null;
    this[_originalWidth] = null;
    this[_maxPdfPageWidth] = 0.0;
    this[_isScrolled] = false;
    this[_isScrollControllerInitiated] = false;
    this[_deviceOrientation] = null;
    this[_viewportWidth] = 0.0;
    this[_offsetBeforeOrientationChange] = 0.0;
    this[__SfPdfViewerState__viewportConstraints] = null;
    this[__SfPdfViewerState__viewportConstraints_isSet] = false;
    this[_previousPageNumber] = 0;
    this[_document] = null;
    this[_hasError] = false;
    this[_panEnabled] = true;
    this[_isMobile] = false;
    this[_isTextSelectionCleared] = false;
    this[_isLoadCallbackInvoked] = false;
    this[_actualViewportHeight] = 0.0;
    this[_actualViewportMaxScroll] = 0.0;
    this[_pdfPages] = new (T.IdentityMapOfint$PdfPageInfo()).new();
    this[_bookmarkKey] = T.GlobalKeyOfBookmarkViewControllerState().new();
    this[_pdfContainerKey] = T.GlobalKeyOfPdfContainerState().new();
    this[_scrollHeadOverlayKey] = T.GlobalKeyOfScrollHeadOverlayState().new();
    this[_pdfPagesKey] = new (T.IdentityMapOfint$GlobalKeyOfPdfPageViewState()).new();
    this[_textCollection] = null;
    this[_pdfTextExtractor] = null;
    this[_pdfViewerThemeData$3] = null;
    this[_isPageChanged] = false;
    this[_isManualScrolled] = false;
    pdfviewer.SfPdfViewerState.__proto__.new.call(this);
    ;
  }).prototype = pdfviewer.SfPdfViewerState.prototype;
  dart.addTypeTests(pdfviewer.SfPdfViewerState);
  dart.addTypeCaches(pdfviewer.SfPdfViewerState);
  dart.setMethodSignature(pdfviewer.SfPdfViewerState, () => ({
    __proto__: dart.getMethods(pdfviewer.SfPdfViewerState.__proto__),
    [_compareDocument]: dart.fnType(dart.void, [async.Future$(typed_data.Uint8List), async.Future$(typed_data.Uint8List)]),
    [_disposeCollection]: dart.fnType(dart.void, [dart.nullable(core.List)]),
    [_reset]: dart.fnType(dart.void, []),
    [_loadPdfDocument]: dart.fnType(dart.void, [core.bool]),
    [_getPdfFile]: dart.fnType(async.Future$(dart.nullable(pdf.PdfDocument)), [dart.nullable(typed_data.Uint8List)]),
    [_isScrollPositionAttached]: dart.fnType(dart.void, []),
    [_scrollControllerInitiated]: dart.fnType(dart.void, []),
    [_findDevice$]: dart.fnType(dart.void, [framework.BuildContext]),
    [_getViewportGlobalRect]: dart.fnType(dart.nullable(ui.Rect), []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    openBookmarkView: dart.fnType(dart.void, []),
    getSelectedTextLines: dart.fnType(core.List$(pdftextline.PdfTextLine), []),
    [_getImages]: dart.fnType(dart.nullable(async.Future$(dart.nullable(core.Map$(core.int, core.List)))), []),
    [_checkMount]: dart.fnType(dart.void, []),
    [_pageChanged]: dart.fnType(dart.void, []),
    [_updateSearchInstance]: dart.fnType(dart.void, [], {isNext: dart.dynamic}, {}),
    [_updateOffsetOnOrientationChange]: dart.fnType(dart.void, [core.double, core.int, core.double]),
    [_calculateSize]: dart.fnType(ui.Size, [box.BoxConstraints, core.double, core.double, core.double]),
    [_handleScrollNotification]: dart.fnType(dart.void, [scroll_notification.ScrollNotification]),
    [_updateCurrentPageNumber]: dart.fnType(dart.void, []),
    [_handleTextSelectionDragStarted]: dart.fnType(dart.void, []),
    [_handleTextSelectionDragEnded]: dart.fnType(dart.void, []),
    [_handleScrollHeadDragEnd$]: dart.fnType(dart.void, []),
    [_handleOnTap]: dart.fnType(dart.void, []),
    [_jumpToPage]: dart.fnType(dart.void, [core.int]),
    [_jumpToBookmark]: dart.fnType(dart.void, [dart.nullable(pdf.PdfBookmark)]),
    [_handleDocumentLinkNavigationInvoked]: dart.fnType(dart.void, [core.double]),
    [_clearSelection$]: dart.fnType(core.bool, []),
    [_handleControllerValueChange]: dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {}),
    [_getPageNumber]: dart.fnType(core.int, [core.double]),
    [_getInstanceInPage]: dart.fnType(core.int, [core.int], {lookForFirst: core.bool}, {}),
    [_jumpToNextInstance]: dart.fnType(dart.nullable(core.int), [core.int]),
    [_jumpToPreviousInstance]: dart.fnType(dart.nullable(core.int), [core.int]),
    [_jumpToSearchInstance]: dart.fnType(dart.void, [], {isNext: dart.dynamic}, {}),
    [_handleTextSearch]: dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})
  }));
  dart.setGetterSignature(pdfviewer.SfPdfViewerState, () => ({
    __proto__: dart.getGetters(pdfviewer.SfPdfViewerState.__proto__),
    [_plugin]: pdfviewer_plugin.PdfViewerPlugin,
    [_scrollController]: scroll_controller.ScrollController,
    [_pdfViewerController]: pdfviewer.PdfViewerController,
    [_viewportConstraints]: box.BoxConstraints,
    isBookmarkViewOpen: core.bool
  }));
  dart.setSetterSignature(pdfviewer.SfPdfViewerState, () => ({
    __proto__: dart.getSetters(pdfviewer.SfPdfViewerState.__proto__),
    [_plugin]: pdfviewer_plugin.PdfViewerPlugin,
    [_scrollController]: scroll_controller.ScrollController,
    [_pdfViewerController]: pdfviewer.PdfViewerController,
    [_viewportConstraints]: box.BoxConstraints
  }));
  dart.setLibraryUri(pdfviewer.SfPdfViewerState, I[17]);
  dart.setFieldSignature(pdfviewer.SfPdfViewerState, () => ({
    __proto__: dart.getFields(pdfviewer.SfPdfViewerState.__proto__),
    [__SfPdfViewerState__plugin]: dart.fieldType(dart.nullable(pdfviewer_plugin.PdfViewerPlugin)),
    [__SfPdfViewerState__plugin_isSet]: dart.fieldType(core.bool),
    [__SfPdfViewerState__scrollController]: dart.fieldType(dart.nullable(scroll_controller.ScrollController)),
    [__SfPdfViewerState__scrollController_isSet]: dart.fieldType(core.bool),
    [__SfPdfViewerState__pdfViewerController]: dart.fieldType(dart.nullable(pdfviewer.PdfViewerController)),
    [__SfPdfViewerState__pdfViewerController_isSet]: dart.fieldType(core.bool),
    [_getPdfFileCancellableOperation]: dart.fieldType(dart.nullable(cancelable_operation.CancelableOperation)),
    [_pdfDocumentLoadCancellableOperation]: dart.fieldType(dart.nullable(cancelable_operation.CancelableOperation)),
    [_getHeightCancellableOperation]: dart.fieldType(dart.nullable(cancelable_operation.CancelableOperation)),
    [_getWidthCancellableOperation]: dart.fieldType(dart.nullable(cancelable_operation.CancelableOperation)),
    [_originalHeight]: dart.fieldType(dart.nullable(core.List)),
    [_originalWidth]: dart.fieldType(dart.nullable(core.List)),
    [_maxPdfPageWidth]: dart.fieldType(core.double),
    [_isScrolled]: dart.fieldType(core.bool),
    [_isScrollControllerInitiated]: dart.fieldType(core.bool),
    [_deviceOrientation]: dart.fieldType(dart.nullable(media_query.Orientation)),
    [_viewportWidth]: dart.fieldType(core.double),
    [_offsetBeforeOrientationChange]: dart.fieldType(core.double),
    [__SfPdfViewerState__viewportConstraints]: dart.fieldType(dart.nullable(box.BoxConstraints)),
    [__SfPdfViewerState__viewportConstraints_isSet]: dart.fieldType(core.bool),
    [_previousPageNumber]: dart.fieldType(core.int),
    [_document]: dart.fieldType(dart.nullable(pdf.PdfDocument)),
    [_hasError]: dart.fieldType(core.bool),
    [_panEnabled]: dart.fieldType(core.bool),
    [_isMobile]: dart.fieldType(core.bool),
    [_isTextSelectionCleared]: dart.fieldType(core.bool),
    [_isLoadCallbackInvoked]: dart.fieldType(core.bool),
    [_actualViewportHeight]: dart.fieldType(core.double),
    [_actualViewportMaxScroll]: dart.fieldType(core.double),
    [_pdfPages]: dart.finalFieldType(core.Map$(core.int, pdf_page_view.PdfPageInfo)),
    [_bookmarkKey]: dart.finalFieldType(framework.GlobalKey$(bookmark_view.BookmarkViewControllerState)),
    [_pdfContainerKey]: dart.finalFieldType(framework.GlobalKey$(pdf_container.PdfContainerState)),
    [_scrollHeadOverlayKey]: dart.finalFieldType(framework.GlobalKey$(scroll_head_overlay.ScrollHeadOverlayState)),
    [_pdfPagesKey]: dart.finalFieldType(core.Map$(core.int, framework.GlobalKey$(pdf_page_view.PdfPageViewState))),
    [_textCollection]: dart.fieldType(dart.nullable(core.List$(pdf.MatchedItem))),
    [_pdfTextExtractor]: dart.fieldType(dart.nullable(pdf.PdfTextExtractor)),
    [_pdfViewerThemeData$3]: dart.fieldType(dart.nullable(pdfviewer_theme.SfPdfViewerThemeData)),
    [_isPageChanged]: dart.fieldType(core.bool),
    [_isManualScrolled]: dart.fieldType(core.bool)
  }));
  var _zoomLevel = dart.privateName(pdfviewer, "_zoomLevel");
  var _currentPageNumber = dart.privateName(pdfviewer, "_currentPageNumber");
  var _totalPages = dart.privateName(pdfviewer, "_totalPages");
  var ___ValueChangeNotifier_listener = dart.privateName(pdfviewer, "_#_ValueChangeNotifier#listener");
  var ___ValueChangeNotifier_listener_isSet = dart.privateName(pdfviewer, "_#_ValueChangeNotifier#listener#isSet");
  var _listeners = dart.privateName(pdfviewer, "_listeners");
  pdfviewer._ValueChangeNotifier = class _ValueChangeNotifier extends core.Object {
    get listener() {
      let t46;
      return dart.test(this[___ValueChangeNotifier_listener_isSet]) ? (t46 = this[___ValueChangeNotifier_listener], t46) : dart.throw(new _internal.LateError.fieldNI("listener"));
    }
    set listener(t46) {
      if (t46 == null) dart.nullFailed(I[16], 2694, 31, "null");
      this[___ValueChangeNotifier_listener_isSet] = true;
      this[___ValueChangeNotifier_listener] = t46;
    }
    addListener(listener) {
      if (listener == null) dart.nullFailed(I[16], 2698, 43, "listener");
      this[_listeners].add(listener);
    }
    removeListener(listener) {
      if (listener == null) dart.nullFailed(I[16], 2702, 46, "listener");
      this[_listeners].remove(listener);
    }
    notifyPropertyChangedListeners(opts) {
      let t48;
      let property = opts && 'property' in opts ? opts.property : null;
      for (let t47 of this[_listeners]) {
        this.listener = t47;
        t48 = property;
        this.listener({property: t48});
      }
    }
  };
  (pdfviewer._ValueChangeNotifier.new = function() {
    this[___ValueChangeNotifier_listener] = null;
    this[___ValueChangeNotifier_listener_isSet] = false;
    this[_listeners] = new (T.ObserverListOf__Tovoid()).new();
    ;
  }).prototype = pdfviewer._ValueChangeNotifier.prototype;
  dart.addTypeTests(pdfviewer._ValueChangeNotifier);
  dart.addTypeCaches(pdfviewer._ValueChangeNotifier);
  dart.setMethodSignature(pdfviewer._ValueChangeNotifier, () => ({
    __proto__: dart.getMethods(pdfviewer._ValueChangeNotifier.__proto__),
    addListener: dart.fnType(dart.void, [dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})]),
    removeListener: dart.fnType(dart.void, [dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})]),
    notifyPropertyChangedListeners: dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})
  }));
  dart.setGetterSignature(pdfviewer._ValueChangeNotifier, () => ({
    __proto__: dart.getGetters(pdfviewer._ValueChangeNotifier.__proto__),
    listener: dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})
  }));
  dart.setSetterSignature(pdfviewer._ValueChangeNotifier, () => ({
    __proto__: dart.getSetters(pdfviewer._ValueChangeNotifier.__proto__),
    listener: dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})
  }));
  dart.setLibraryUri(pdfviewer._ValueChangeNotifier, I[17]);
  dart.setFieldSignature(pdfviewer._ValueChangeNotifier, () => ({
    __proto__: dart.getFields(pdfviewer._ValueChangeNotifier.__proto__),
    [___ValueChangeNotifier_listener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {}))),
    [___ValueChangeNotifier_listener_isSet]: dart.fieldType(core.bool),
    [_listeners]: dart.finalFieldType(observer_list.ObserverList$(dart.fnType(dart.void, [], {property: dart.nullable(core.String)}, {})))
  }));
  pdfviewer.PdfViewerController = class PdfViewerController extends pdfviewer._ValueChangeNotifier {
    set [_pageNumber](num) {
      if (num == null) dart.nullFailed(I[16], 1831, 23, "num");
      this[_currentPageNumber] = num;
      this.notifyPropertyChangedListeners({property: "pageChanged"});
    }
    set [_pageCount](pageCount) {
      if (pageCount == null) dart.nullFailed(I[16], 1837, 22, "pageCount");
      this[_totalPages] = pageCount;
      this.notifyPropertyChangedListeners({property: "pageCount"});
    }
    get scrollOffset() {
      return new ui.Offset.new(this[_scrollPositionX], this[_scrollPositionY]);
    }
    get zoomLevel() {
      return this[_zoomLevel];
    }
    set zoomLevel(newValue) {
      if (newValue == null) dart.nullFailed(I[16], 1919, 24, "newValue");
      if (this[_zoomLevel] == newValue) return;
      this[_zoomLevel] = newValue;
      this.notifyPropertyChangedListeners({property: "zoomLevel"});
    }
    get pageNumber() {
      return this[_currentPageNumber];
    }
    get pageCount() {
      return this[_totalPages];
    }
    jumpToBookmark(bookmark) {
      if (bookmark == null) dart.nullFailed(I[16], 2135, 35, "bookmark");
      this[_pdfBookmark] = bookmark;
      this.notifyPropertyChangedListeners({property: "jumpToBookmark"});
    }
    jumpTo(opts) {
      let xOffset = opts && 'xOffset' in opts ? opts.xOffset : 0;
      if (xOffset == null) dart.nullFailed(I[16], 2194, 23, "xOffset");
      let yOffset = opts && 'yOffset' in opts ? opts.yOffset : 0;
      if (yOffset == null) dart.nullFailed(I[16], 2194, 45, "yOffset");
      this[_horizontalOffset] = xOffset;
      this[_verticalOffset] = yOffset;
      this.notifyPropertyChangedListeners({property: "jumpTo"});
    }
    jumpToPage(pageNumber) {
      if (pageNumber == null) dart.nullFailed(I[16], 2250, 23, "pageNumber");
      this[_pageNavigator] = new pagination.Pagination.new(pdfviewer_helper.Navigation.jumpToPage, {index: pageNumber});
      this.notifyPropertyChangedListeners({property: "pageNavigate"});
    }
    previousPage() {
      this[_pageNavigator] = new pagination.Pagination.new(pdfviewer_helper.Navigation.previousPage);
      this.notifyPropertyChangedListeners({property: "pageNavigate"});
    }
    nextPage() {
      this[_pageNavigator] = new pagination.Pagination.new(pdfviewer_helper.Navigation.nextPage);
      this.notifyPropertyChangedListeners({property: "pageNavigate"});
    }
    firstPage() {
      this[_pageNavigator] = new pagination.Pagination.new(pdfviewer_helper.Navigation.firstPage);
      this.notifyPropertyChangedListeners({property: "pageNavigate"});
    }
    lastPage() {
      this[_pageNavigator] = new pagination.Pagination.new(pdfviewer_helper.Navigation.lastPage);
      this.notifyPropertyChangedListeners({property: "pageNavigate"});
    }
    searchText(searchText, opts) {
      if (searchText == null) dart.nullFailed(I[16], 2592, 49, "searchText");
      let searchOption = opts && 'searchOption' in opts ? opts.searchOption : null;
      return async.async(pdfviewer.PdfTextSearchResult, (function* searchText$() {
        this[_searchText] = searchText;
        this[_textSearchOption] = searchOption;
        this.notifyPropertyChangedListeners({property: "searchText"});
        return this[_pdfTextSearchResult];
      }).bind(this));
    }
    clearSelection() {
      this.notifyPropertyChangedListeners({property: "clearTextSelection"});
      return this[_clearTextSelection];
    }
    [_reset]() {
      this[_zoomLevel] = 1.0;
      this[_currentPageNumber] = 0;
      this[_totalPages] = 0;
      this[_verticalOffset] = 0.0;
      this[_horizontalOffset] = 0.0;
      this[_pageNavigator] = null;
      this.notifyPropertyChangedListeners();
    }
  };
  (pdfviewer.PdfViewerController.new = function() {
    this[_zoomLevel] = 1.0;
    this[_currentPageNumber] = 0;
    this[_totalPages] = 0;
    this[_searchText] = "";
    this[_textSearchOption] = null;
    this[_pdfBookmark] = null;
    this[_pdfTextSearchResult] = new pdfviewer.PdfTextSearchResult.new();
    this[_verticalOffset] = 0.0;
    this[_horizontalOffset] = 0.0;
    this[_pageNavigator] = null;
    this[_clearTextSelection] = false;
    this[_scrollPositionX] = 0.0;
    this[_scrollPositionY] = 0.0;
    pdfviewer.PdfViewerController.__proto__.new.call(this);
    ;
  }).prototype = pdfviewer.PdfViewerController.prototype;
  dart.addTypeTests(pdfviewer.PdfViewerController);
  dart.addTypeCaches(pdfviewer.PdfViewerController);
  dart.setMethodSignature(pdfviewer.PdfViewerController, () => ({
    __proto__: dart.getMethods(pdfviewer.PdfViewerController.__proto__),
    jumpToBookmark: dart.fnType(dart.void, [pdf.PdfBookmark]),
    jumpTo: dart.fnType(dart.void, [], {xOffset: core.double, yOffset: core.double}, {}),
    jumpToPage: dart.fnType(dart.void, [core.int]),
    previousPage: dart.fnType(dart.void, []),
    nextPage: dart.fnType(dart.void, []),
    firstPage: dart.fnType(dart.void, []),
    lastPage: dart.fnType(dart.void, []),
    searchText: dart.fnType(async.Future$(pdfviewer.PdfTextSearchResult), [core.String], {searchOption: dart.nullable(pdf.TextSearchOption)}, {}),
    clearSelection: dart.fnType(core.bool, []),
    [_reset]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(pdfviewer.PdfViewerController, () => ({
    __proto__: dart.getGetters(pdfviewer.PdfViewerController.__proto__),
    scrollOffset: ui.Offset,
    zoomLevel: core.double,
    pageNumber: core.int,
    pageCount: core.int
  }));
  dart.setSetterSignature(pdfviewer.PdfViewerController, () => ({
    __proto__: dart.getSetters(pdfviewer.PdfViewerController.__proto__),
    [_pageNumber]: core.int,
    [_pageCount]: core.int,
    zoomLevel: core.double
  }));
  dart.setLibraryUri(pdfviewer.PdfViewerController, I[17]);
  dart.setFieldSignature(pdfviewer.PdfViewerController, () => ({
    __proto__: dart.getFields(pdfviewer.PdfViewerController.__proto__),
    [_zoomLevel]: dart.fieldType(core.double),
    [_currentPageNumber]: dart.fieldType(core.int),
    [_totalPages]: dart.fieldType(core.int),
    [_searchText]: dart.fieldType(core.String),
    [_textSearchOption]: dart.fieldType(dart.nullable(pdf.TextSearchOption)),
    [_pdfBookmark]: dart.fieldType(dart.nullable(pdf.PdfBookmark)),
    [_pdfTextSearchResult]: dart.finalFieldType(pdfviewer.PdfTextSearchResult),
    [_verticalOffset]: dart.fieldType(core.double),
    [_horizontalOffset]: dart.fieldType(core.double),
    [_pageNavigator]: dart.fieldType(dart.nullable(pagination.Pagination)),
    [_clearTextSelection]: dart.fieldType(core.bool),
    [_scrollPositionX]: dart.fieldType(core.double),
    [_scrollPositionY]: dart.fieldType(core.double)
  }));
  var _currentInstanceIndex = dart.privateName(pdfviewer, "_currentInstanceIndex");
  var _hasResult = dart.privateName(pdfviewer, "_hasResult");
  pdfviewer.PdfTextSearchResult = class PdfTextSearchResult extends pdfviewer._ValueChangeNotifier {
    set [_currentOccurrenceIndex](num) {
      if (num == null) dart.nullFailed(I[16], 2632, 35, "num");
      this[_currentInstanceIndex] = num;
      this.notifyPropertyChangedListeners({property: "currentInstance"});
    }
    get currentInstanceIndex() {
      return this[_currentInstanceIndex];
    }
    set [_totalSearchTextCount](totalInstanceCount) {
      if (totalInstanceCount == null) dart.nullFailed(I[16], 2643, 33, "totalInstanceCount");
      this[_totalInstanceCount] = totalInstanceCount;
      this.notifyPropertyChangedListeners({property: "totalInstance"});
    }
    get totalInstanceCount() {
      return this[_totalInstanceCount];
    }
    [_updateResult](hasResult) {
      if (hasResult == null) dart.nullFailed(I[16], 2654, 27, "hasResult");
      this[_hasResult] = hasResult;
      this.notifyPropertyChangedListeners({property: "result"});
    }
    get hasResult() {
      return this[_hasResult];
    }
    nextInstance() {
      this.notifyPropertyChangedListeners({property: "nextInstance"});
    }
    previousInstance() {
      this.notifyPropertyChangedListeners({property: "previousInstance"});
    }
    clear() {
      this.notifyPropertyChangedListeners({property: "clear"});
    }
  };
  (pdfviewer.PdfTextSearchResult.new = function() {
    this[_currentInstanceIndex] = 0;
    this[_totalInstanceCount] = 0;
    this[_hasResult] = false;
    pdfviewer.PdfTextSearchResult.__proto__.new.call(this);
    ;
  }).prototype = pdfviewer.PdfTextSearchResult.prototype;
  dart.addTypeTests(pdfviewer.PdfTextSearchResult);
  dart.addTypeCaches(pdfviewer.PdfTextSearchResult);
  dart.setMethodSignature(pdfviewer.PdfTextSearchResult, () => ({
    __proto__: dart.getMethods(pdfviewer.PdfTextSearchResult.__proto__),
    [_updateResult]: dart.fnType(dart.void, [core.bool]),
    nextInstance: dart.fnType(dart.void, []),
    previousInstance: dart.fnType(dart.void, []),
    clear: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(pdfviewer.PdfTextSearchResult, () => ({
    __proto__: dart.getGetters(pdfviewer.PdfTextSearchResult.__proto__),
    currentInstanceIndex: core.int,
    totalInstanceCount: core.int,
    hasResult: core.bool
  }));
  dart.setSetterSignature(pdfviewer.PdfTextSearchResult, () => ({
    __proto__: dart.getSetters(pdfviewer.PdfTextSearchResult.__proto__),
    [_currentOccurrenceIndex]: core.int,
    [_totalSearchTextCount]: core.int
  }));
  dart.setLibraryUri(pdfviewer.PdfTextSearchResult, I[17]);
  dart.setFieldSignature(pdfviewer.PdfTextSearchResult, () => ({
    __proto__: dart.getFields(pdfviewer.PdfTextSearchResult.__proto__),
    [_currentInstanceIndex]: dart.fieldType(core.int),
    [_totalInstanceCount]: dart.fieldType(core.int),
    [_hasResult]: dart.fieldType(core.bool)
  }));
  dart.trackLibraries("packages/syncfusion_flutter_pdfviewer/src/control/scroll_head.dart", {
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_head.dart": scroll_head,
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_head_overlay.dart": scroll_head_overlay,
    "package:syncfusion_flutter_pdfviewer/src/common/pdf_provider.dart": pdf_provider,
    "package:syncfusion_flutter_pdfviewer/src/bookmark/bookmark_view.dart": bookmark_view,
    "package:syncfusion_flutter_pdfviewer/src/control/scroll_status.dart": scroll_status,
    "package:syncfusion_flutter_pdfviewer/src/control/pdfviewer_canvas.dart": pdfviewer_canvas,
    "package:syncfusion_flutter_pdfviewer/src/control/pdf_page_view.dart": pdf_page_view,
    "package:syncfusion_flutter_pdfviewer/src/control/pdf_container.dart": pdf_container,
    "package:syncfusion_flutter_pdfviewer/src/pdfviewer.dart": pdfviewer,
    "package:syncfusion_flutter_pdfviewer/pdfviewer.dart": pdfviewer$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["scroll_head.dart","scroll_head_overlay.dart","../common/pdf_provider.dart","../bookmark/bookmark_view.dart","scroll_status.dart","pdfviewer_canvas.dart","pdf_page_view.dart","pdf_container.dart","../pdfviewer.dart"],"names":[],"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;;;;;;;AAGI;IAAkB;;;QAvhB3B;QACf;QACO;QACR;;QACA;;QACA;QACA;QACA;;QACA;QACA;QACA;;QACA;;QACA;QACA;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;;IAhBA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,kBAAE,8BAAS,IAAI,EAAE,MAAM;UACd,aAAZ,WAAW,KAAI;AACtB,yDAAW,GAAG;;EAAC;;QAwBM;QACjB;QACe;QAChB;;QACA;;QACA;QACA;QACA;;QACA;QACA;;QACA;;QACA;QACA;QACA;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;;IAhBA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,kBAAE,gCAAW,GAAG,EAAE,OAAO;UAChB,aAAZ,WAAW,KAAI;AACtB,yDAAW,GAAG;;EAAC;;QAuBQ;QACnB;QACD;;QACA;;QACA;QACA;QACA;;QACA;QACA;;QACA;;QACA;QACA;QACA;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;;IAhBA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,kBAAE,+BAAU,KAAK;UACR,aAAZ,WAAW,KAAI;AACtB,yDAAW,GAAG;;EAAC;;QA4Bd;QACA;QACA;;QACA;;QACA;QACA;QACA;;QACA;QACA;;QACA;;QACA;QACA;QACA;QACA;;QACA;;QACA;;QACA;;QACA;;QACA;;;IAhBA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACS,kBAAE,6BAAQ,IAAI;UACL,aAAZ,WAAW,KAAI;AACtB,yDAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"../../../../../../../../../packages/syncfusion_flutter_pdfviewer/src/control/scroll_head.dart.lib.js"}');
  // Exports:
  return {
    src__control__scroll_head: scroll_head,
    src__control__scroll_head_overlay: scroll_head_overlay,
    src__common__pdf_provider: pdf_provider,
    src__bookmark__bookmark_view: bookmark_view,
    src__control__scroll_status: scroll_status,
    src__control__pdfviewer_canvas: pdfviewer_canvas,
    src__control__pdf_page_view: pdf_page_view,
    src__control__pdf_container: pdf_container,
    src__pdfviewer: pdfviewer,
    pdfviewer: pdfviewer$
  };
}));

//# sourceMappingURL=scroll_head.dart.lib.js.map
